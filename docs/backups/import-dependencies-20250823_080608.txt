src/middleware.ts:import { NextResponse } from 'next/server';
src/middleware.ts:import type { NextRequest } from 'next/server';
src/contexts/ThemeContext.tsx:import React, { createContext, useContext, useEffect, useState } from 'react';
src/contexts/DarkModeContext.tsx:import React, { createContext, useContext, useEffect, useState } from 'react';
src/contexts/AuthContext.tsx:import React, { createContext, useContext, useState, useEffect, useCallback, useMemo } from 'react';
src/contexts/AuthContext.tsx:import { supabase } from '@/lib/supabase';
src/contexts/AuthContext.tsx:import type { User, Session } from '@supabase/supabase-js';
src/app/signup/layout.tsx:import { Metadata } from 'next';
src/app/signup/page.tsx:import React, { useState, useEffect } from 'react';
src/app/signup/page.tsx:import { supabase } from '@/lib/supabase';
src/app/signup/page.tsx:import { InputField, SelectField } from '@/components/molecules';
src/app/signup/page.tsx:import { Button } from '@/components/atoms';
src/app/signup/page.tsx:import Link from 'next/link';
src/app/signup/page.tsx:import { logger, logError } from '@/lib/logging/secure-logger';
src/app/layout.tsx:import type { Metadata } from 'next';
src/app/layout.tsx:import { Montserrat } from 'next/font/google';
src/app/layout.tsx:import Providers from '@/components/providers/Providers';
src/app/layout.tsx:import { VersionTag } from '@/components/molecules/VersionTag';
src/app/layout.tsx:import { PWAInstallPrompt } from '@/components/molecules/PWAInstallPrompt';
src/app/layout.tsx:import { PWAStatus } from '@/components/molecules/PWAStatus';
src/app/layout.tsx:import { AuthDebug } from '@/components/molecules/AuthDebug';
src/app/layout.tsx:import { ConnectionStatus, PWADevTools } from '@/components/molecules';
src/app/layout.tsx:import LastVisitedTracker from '@/components/providers/LastVisitedTracker';
src/app/api/psgc/lookup/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/psgc/lookup/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/psgc/search/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/psgc/search/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/residents/__tests__/residents.post.test.ts:import { NextRequest } from 'next/server';
src/app/api/residents/__tests__/residents.post.test.ts:import { POST } from '../route';
src/app/api/residents/route.ts:import { NextRequest } from 'next/server';
src/app/api/residents/route.ts:import { withAuth, applyGeographicFilter, createAdminSupabaseClient } from '@/lib/api-auth';
src/app/api/residents/route.ts:import { createRateLimitHandler } from '@/lib/security/rate-limit';
src/app/api/residents/route.ts:import { createResidentSchema } from '@/lib/api-validation';
src/app/api/residents/route.ts:import { auditDataOperation } from '@/lib/api-audit';
src/app/api/residents/route.ts:import { RequestContext, Role } from '@/lib/api/types';
src/app/api/residents/route.ts:import { z } from 'zod';
src/app/api/residents/route.ts:import { logger, logError } from '@/lib/logging/secure-logger';
src/app/api/residents/[id]/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/residents/[id]/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/auth/webhook/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/auth/webhook/route.ts:import crypto from 'crypto';
src/app/api/auth/webhook/route.ts:import { WebhookUserRecord } from '@/lib/types/database';
src/app/api/auth/webhook/route.ts:import { createAdminSupabaseClient } from '@/lib/api-auth';
src/app/api/auth/webhook/route.ts:import type { SupabaseClient } from '@supabase/supabase-js';
src/app/api/auth/assign-role/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/auth/assign-role/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/auth/create-profile-fallback/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/auth/create-profile-fallback/route.ts:import { createAdminSupabaseClient } from '@/lib/api-auth';
src/app/api/auth/process-notifications/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/auth/process-notifications/route.ts:import { createAdminSupabaseClient } from '@/lib/api-auth';
src/app/api/auth/profile/route.ts:import { NextRequest } from 'next/server';
src/app/api/auth/profile/route.ts:import { createAdminSupabaseClient } from '@/lib/api-auth';
src/app/api/auth/profile/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/auth/test-profile/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/auth/test-profile/route.ts:import { createAdminSupabaseClient } from '@/lib/api-auth';
src/app/api/auth/create-profile/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/auth/create-profile/route.ts:import { createAdminSupabaseClient } from '@/lib/api-auth';
src/app/api/auth/check-barangay-admin/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/auth/check-barangay-admin/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/health/command-menu/route.ts:import { NextResponse } from 'next/server';
src/app/api/health/command-menu/route.ts:import { getCommandMenuHealth } from '@/lib/command-menu/analytics-utils';
src/app/api/health/command-menu/route.ts:import { withSecurityHeaders } from '@/lib/api-responses';
src/app/api/admin/users/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/admin/users/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/user/geographic-location/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/user/geographic-location/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/dashboard/stats/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/dashboard/stats/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/addresses/regions/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/addresses/regions/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/addresses/provinces/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/addresses/provinces/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/addresses/cities/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/addresses/cities/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/addresses/barangays/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/addresses/barangays/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/households/route.ts:import { NextRequest } from 'next/server';
src/app/api/households/route.ts:import { withAuth, applyGeographicFilter, createAdminSupabaseClient } from '@/lib/api-auth';
src/app/api/households/route.ts:import { createRateLimitHandler } from '@/lib/security/rate-limit';
src/app/api/households/route.ts:import { createHouseholdSchema } from '@/lib/api-validation';
src/app/api/households/route.ts:import { auditDataOperation } from '@/lib/api-audit';
src/app/api/households/route.ts:import { RequestContext, Role } from '@/lib/api/types';
src/app/api/households/route.ts:import { z } from 'zod';
src/app/api/households/[id]/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/households/[id]/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/psoc/search/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/psoc/search/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/debug/residents/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/debug/residents/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/api/debug/rbi-preflight/route.ts:import { createClient } from '@supabase/supabase-js';
src/app/api/debug/rbi-preflight/route.ts:import { NextRequest, NextResponse } from 'next/server';
src/app/loading.tsx:import { ReactElement } from 'react';
src/app/(dashboard)/settings/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/settings/page.tsx:import React, { useState } from 'react';
src/app/(dashboard)/settings/page.tsx:import { Button } from '@/components/atoms';
src/app/(dashboard)/settings/page.tsx:import { SelectField } from '@/components/molecules';
src/app/(dashboard)/settings/page.tsx:import { useTheme } from '@/contexts/ThemeContext';
src/app/(dashboard)/slow-page/page.tsx:import { Suspense } from 'react';
src/app/(dashboard)/residents/page.test.tsx:import React from 'react';
src/app/(dashboard)/residents/page.test.tsx:import { render, screen, waitFor, act } from '@testing-library/react';
src/app/(dashboard)/residents/page.test.tsx:import userEvent from '@testing-library/user-event';
src/app/(dashboard)/residents/page.test.tsx:import { useRouter } from 'next/navigation';
src/app/(dashboard)/residents/page.test.tsx:import ResidentsPage from './page';
src/app/(dashboard)/residents/page.test.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/(dashboard)/residents/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/residents/[id]/page.test.tsx:import React from 'react';
src/app/(dashboard)/residents/[id]/page.test.tsx:import { render, screen, waitFor } from '@testing-library/react';
src/app/(dashboard)/residents/[id]/page.test.tsx:import userEvent from '@testing-library/user-event';
src/app/(dashboard)/residents/[id]/page.test.tsx:import { useParams, useRouter } from 'next/navigation';
src/app/(dashboard)/residents/[id]/page.test.tsx:import ResidentDetailPage from './page';
src/app/(dashboard)/residents/[id]/page.test.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/(dashboard)/residents/[id]/edit/page.test.tsx:import React from 'react';
src/app/(dashboard)/residents/[id]/edit/page.test.tsx:import { render, screen, fireEvent, waitFor } from '@testing-library/react';
src/app/(dashboard)/residents/[id]/edit/page.test.tsx:import userEvent from '@testing-library/user-event';
src/app/(dashboard)/residents/[id]/edit/page.test.tsx:import { useParams, useRouter } from 'next/navigation';
src/app/(dashboard)/residents/[id]/edit/page.test.tsx:import ResidentEditPage from './page';
src/app/(dashboard)/residents/[id]/edit/page.test.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/(dashboard)/residents/[id]/edit/page.test.tsx:import { useResidentEditForm } from '@/hooks/useResidentEditForm';
src/app/(dashboard)/residents/[id]/edit/page.tsx:import React, { useState, useEffect } from 'react';
src/app/(dashboard)/residents/[id]/edit/page.tsx:import { useParams, useRouter } from 'next/navigation';
src/app/(dashboard)/residents/[id]/edit/page.tsx:import Link from 'next/link';
src/app/(dashboard)/residents/[id]/edit/page.tsx:import { Button } from '@/components/atoms';
src/app/(dashboard)/residents/[id]/edit/page.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/(dashboard)/residents/[id]/edit/page.tsx:import { supabase } from '@/lib/supabase';
src/app/(dashboard)/residents/[id]/edit/page.tsx:import { logError } from '@/lib/logging/secure-logger';
src/app/(dashboard)/residents/[id]/page.tsx:import React, { useState, useEffect } from 'react';
src/app/(dashboard)/residents/[id]/page.tsx:import Link from 'next/link';
src/app/(dashboard)/residents/[id]/page.tsx:import { useParams } from 'next/navigation';
src/app/(dashboard)/residents/[id]/page.tsx:import { supabase } from '@/lib/supabase';
src/app/(dashboard)/residents/[id]/page.tsx:import { PersonalInformationForm } from '@/components/organisms';
src/app/(dashboard)/residents/[id]/page.tsx:import { InputField } from '@/components/molecules';
src/app/(dashboard)/residents/[id]/page.tsx:import { logger, logError } from '@/lib/logging/secure-logger';
src/app/(dashboard)/residents/page.tsx:import React, { useState, useCallback, useEffect } from 'react';
src/app/(dashboard)/residents/page.tsx:import Link from 'next/link';
src/app/(dashboard)/residents/page.tsx:import { DataTable } from '@/components/organisms';
src/app/(dashboard)/residents/page.tsx:import type { TableColumn, TableAction } from '@/components/organisms';
src/app/(dashboard)/residents/page.tsx:import { SearchBar } from '@/components/molecules';
src/app/(dashboard)/residents/page.tsx:import { Button } from '@/components/atoms';
src/app/(dashboard)/residents/page.tsx:import { useResidents, type Resident } from '@/hooks/crud/useResidents';
src/app/(dashboard)/residents/create/page.test.tsx:import React from 'react';
src/app/(dashboard)/residents/create/page.test.tsx:import { render, screen, waitFor } from '@testing-library/react';
src/app/(dashboard)/residents/create/page.test.tsx:import userEvent from '@testing-library/user-event';
src/app/(dashboard)/residents/create/page.test.tsx:import { useRouter } from 'next/navigation';
src/app/(dashboard)/residents/create/page.test.tsx:import CreateResidentPage from './page';
src/app/(dashboard)/residents/create/page.test.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/(dashboard)/residents/create/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/residents/create/page.tsx:import React, { useState, useMemo } from 'react';
src/app/(dashboard)/residents/create/page.tsx:import { useSearchParams, useRouter } from 'next/navigation';
src/app/(dashboard)/residents/create/page.tsx:import Link from 'next/link';
src/app/(dashboard)/residents/create/page.tsx:import { ResidentForm } from '@/components/templates';
src/app/(dashboard)/residents/create/page.tsx:import { useResidentOperations } from '@/hooks/crud/useResidentOperations';
src/app/(dashboard)/residents/create/page.tsx:import { toast } from 'react-hot-toast';
src/app/(dashboard)/admin/create-user/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/admin/create-user/page.tsx:import React, { useState, useEffect } from 'react';
src/app/(dashboard)/admin/create-user/page.tsx:import { supabase } from '@/lib/supabase';
src/app/(dashboard)/admin/create-user/page.tsx:import { InputField, SelectField } from '@/components/molecules';
src/app/(dashboard)/admin/create-user/page.tsx:import Link from 'next/link';
src/app/(dashboard)/admin/create-user/page.tsx:import { logger, logError } from '@/lib/logging/secure-logger';
src/app/(dashboard)/admin/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/admin/users/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/admin/users/page.tsx:import { useState, useEffect } from 'react';
src/app/(dashboard)/admin/users/page.tsx:import { supabase } from '@/lib/supabase';
src/app/(dashboard)/admin/users/page.tsx:import { Button } from '@/components/atoms';
src/app/(dashboard)/admin/users/page.tsx:import { logger, logError } from '@/lib/logging/secure-logger';
src/app/(dashboard)/test-loading/page.tsx:import { useEffect, useState } from 'react';
src/app/(dashboard)/dashboard/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/dashboard/page.tsx:import React from 'react';
src/app/(dashboard)/dashboard/page.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/(dashboard)/dashboard/page.tsx:import { PopulationPyramid } from '@/components/organisms';
src/app/(dashboard)/dashboard/page.tsx:import { logger } from '@/lib/logging/secure-logger';
src/app/(dashboard)/dashboard/page.tsx:import { useDashboard } from '@/hooks/dashboard/useDashboard';
src/app/(dashboard)/layout.tsx:import { DashboardLayout } from '@/components/templates';
src/app/(dashboard)/layout.tsx:import { ProtectedRoute } from '@/components/organisms';
src/app/(dashboard)/households/__tests__/layout.test.tsx:import { metadata } from '../layout';
src/app/(dashboard)/households/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/households/[id]/page.tsx:import React, { useState, useEffect } from 'react';
src/app/(dashboard)/households/[id]/page.tsx:import Link from 'next/link';
src/app/(dashboard)/households/[id]/page.tsx:import { useParams } from 'next/navigation';
src/app/(dashboard)/households/[id]/page.tsx:import { supabase } from '@/lib/supabase';
src/app/(dashboard)/households/[id]/page.tsx:import { logger, logError } from '@/lib/logging/secure-logger';
src/app/(dashboard)/households/[id]/page.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/(dashboard)/households/page.tsx:import React, { useState } from 'react';
src/app/(dashboard)/households/page.tsx:import Link from 'next/link';
src/app/(dashboard)/households/page.tsx:import { Button } from '@/components/atoms';
src/app/(dashboard)/households/page.tsx:import { useHouseholds, type Household } from '@/hooks/crud/useHouseholds';
src/app/(dashboard)/households/create/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/households/create/page.tsx:import React, { useMemo } from 'react';
src/app/(dashboard)/households/create/page.tsx:import { useSearchParams } from 'next/navigation';
src/app/(dashboard)/households/create/page.tsx:import Link from 'next/link';
src/app/(dashboard)/households/create/page.tsx:import { HouseholdFormWizard } from '@/components/templates';
src/app/(dashboard)/reports/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/layout.tsx:import { Metadata } from 'next';
src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/page.tsx:import React, { useState, useEffect, useCallback } from 'react';
src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/page.tsx:import { useSearchParams } from 'next/navigation';
src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/page.tsx:import Link from 'next/link';
src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/page.tsx:import { supabase } from '@/lib/supabase';
src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/page.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/page.tsx:import { logError } from '@/lib/logging/secure-logger';
src/app/(dashboard)/reports/page.tsx:import React from 'react';
src/app/(dashboard)/reports/page.tsx:import Link from 'next/link';
src/app/(dashboard)/reports/page.tsx:import { Button } from '@/components/atoms';
src/app/page.tsx:import Link from 'next/link';
src/app/page.tsx:import { useRouter } from 'next/navigation';
src/app/page.tsx:import { Button } from '@/components/atoms';
src/app/page.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/page.tsx:import { useLastVisitedPage } from '@/hooks/utilities';
src/app/page.tsx:import { useEffect } from 'react';
src/app/login/layout.tsx:import { Metadata } from 'next';
src/app/login/page.tsx:import React, { useState, useEffect } from 'react';
src/app/login/page.tsx:import { useRouter } from 'next/navigation';
src/app/login/page.tsx:import { LoginForm, DevLogin } from '@/components/organisms';
src/app/login/page.tsx:import { ThemeToggle } from '@/components/molecules';
src/app/login/page.tsx:import { useAuth } from '@/contexts/AuthContext';
src/app/login/page.tsx:import { useLastVisitedPage } from '@/hooks/utilities';
src/app/offline/page.tsx:import React from 'react';
src/app/offline/page.tsx:import Link from 'next/link';
src/app/offline/page.tsx:import { Button } from '@/components/atoms';
src/app/not-found.tsx:import Link from 'next/link';
src/app/not-found.tsx:import { ReactElement } from 'react';
src/providers/index.tsx:import React, { ReactNode } from 'react';
src/providers/index.tsx:import { AppProvider } from './AppProvider';
src/providers/index.tsx:import { ErrorBoundary } from './ErrorBoundary';
src/providers/AppProvider.tsx:import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';
src/providers/AppProvider.tsx:import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
src/providers/AppProvider.tsx:import { ReactQueryDevtools } from '@tanstack/react-query-devtools';
src/providers/AppProvider.tsx:import { logger } from '@/lib/logging/secure-logger';
src/providers/ErrorBoundary.tsx:import React, { Component, ErrorInfo, ReactNode } from 'react';
src/providers/ErrorBoundary.tsx:import { logError } from '@/lib/logging/secure-logger';
src/providers/QueryProvider.tsx:import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
src/providers/QueryProvider.tsx:import { ReactQueryDevtools } from '@tanstack/react-query-devtools';
src/providers/QueryProvider.tsx:import { PersistQueryClientProvider } from '@tanstack/react-query-persist-client';
src/providers/QueryProvider.tsx:import { createSyncStoragePersister } from '@tanstack/query-sync-storage-persister';
src/providers/QueryProvider.tsx:import { useState } from 'react';
src/components/molecules/SearchBar/SearchBar.tsx:import React, { forwardRef, InputHTMLAttributes } from 'react';
src/components/molecules/SearchBar/SearchBar.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/molecules/SearchBar/SearchBar.tsx:import { cn } from '@/lib/utils';
src/components/molecules/SearchBar/SearchBar.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/SearchBar/SearchBar.stories.tsx:import { useState } from 'react';
src/components/molecules/SearchBar/SearchBar.stories.tsx:import { SearchBar } from './SearchBar';
src/components/molecules/FileUpload/FileUpload.tsx:import React, { forwardRef, InputHTMLAttributes, useState, useRef } from 'react';
src/components/molecules/FileUpload/FileUpload.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/molecules/FileUpload/FileUpload.tsx:import { cn } from '@/lib/utils';
src/components/molecules/FileUpload/FileUpload.tsx:import { validateUploadedFile, logFileOperation, scanFileForViruses } from '@/lib/security';
src/components/molecules/FileUpload/FileUpload.tsx:import { Button } from '@/components/atoms';
src/components/molecules/FileUpload/FileUpload.tsx:import { logger } from '@/lib/logging/secure-logger';
src/components/molecules/FileUpload/FileUpload.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/FileUpload/FileUpload.stories.tsx:import { useState } from 'react';
src/components/molecules/FileUpload/FileUpload.stories.tsx:import { FileUpload } from './FileUpload';
src/components/molecules/ConnectionStatus/ConnectionStatus.tsx:import React, { useState, useEffect } from 'react';
src/components/molecules/ConnectionStatus/ConnectionStatus.tsx:import { syncQueue } from '@/lib/storage';
src/components/molecules/ConnectionStatus/ConnectionStatus.tsx:import { offlineStorage } from '@/lib/storage';
src/components/molecules/PWAStatus/PWAStatus.tsx:import React, { useState, useEffect } from 'react';
src/components/molecules/PWAStatus/PWAStatus.tsx:import { Button } from '@/components/atoms';
src/components/molecules/SuccessModal/SuccessModal.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/SuccessModal/SuccessModal.stories.tsx:import { useState } from 'react';
src/components/molecules/SuccessModal/SuccessModal.stories.tsx:import { SuccessModal } from './SuccessModal';
src/components/molecules/SuccessModal/SuccessModal.tsx:import React from 'react';
src/components/molecules/ButtonGroup/ButtonGroup.tsx:import React, { forwardRef } from 'react';
src/components/molecules/ButtonGroup/ButtonGroup.tsx:import { cn } from '@/lib/utils';
src/components/molecules/ButtonGroup/ButtonGroup.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/ButtonGroup/ButtonGroup.stories.tsx:import { useState } from 'react';
src/components/molecules/ButtonGroup/ButtonGroup.stories.tsx:import { ButtonGroup } from './ButtonGroup';
src/components/molecules/ButtonGroup/ButtonGroup.stories.tsx:import { Button } from '../../atoms/Button/Button';
src/components/molecules/ErrorModal/ErrorModal.tsx:import React from 'react';
src/components/molecules/ErrorModal/ErrorModal.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/ErrorModal/ErrorModal.stories.tsx:import { useState } from 'react';
src/components/molecules/ErrorModal/ErrorModal.stories.tsx:import { ErrorModal } from './ErrorModal';
src/components/molecules/ThemeToggle/ThemeToggle.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/ThemeToggle/ThemeToggle.stories.tsx:import { useState } from 'react';
src/components/molecules/ThemeToggle/ThemeToggle.stories.tsx:import { ThemeToggle } from './ThemeToggle';
src/components/molecules/ThemeToggle/ThemeToggle.tsx:import React from 'react';
src/components/molecules/ThemeToggle/ThemeToggle.tsx:import { useTheme } from '@/contexts/ThemeContext';
src/components/molecules/ThemeToggle/ThemeToggle.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/molecules/ThemeToggle/ThemeToggle.tsx:import { cn } from '@/lib/utils';
src/components/molecules/PWADevTools/PWADevTools.tsx:import React, { useState, useEffect } from 'react';
src/components/molecules/PWADevTools/PWADevTools.tsx:import { pwaPerformance } from '@/lib/performance/pwaPerformanceUtils';
src/components/molecules/PWADevTools/PWADevTools.tsx:import { syncQueue } from '@/lib/storage';
src/components/molecules/PWADevTools/PWADevTools.tsx:import { offlineStorage } from '@/lib/storage';
src/components/molecules/CommandMenu/CommandMenu.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/CommandMenu/CommandMenu.stories.tsx:import React, { useState } from 'react';
src/components/molecules/CommandMenu/CommandMenu.stories.tsx:import { CommandMenu } from './CommandMenu';
src/components/molecules/CommandMenu/CommandMenu.stories.tsx:import type { CommandMenuItem } from './types';
src/components/molecules/CommandMenu/CommandMenuEmpty.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/CommandMenu/CommandMenuEmpty.stories.tsx:import { CommandMenuEmpty } from './CommandMenuEmpty';
src/components/molecules/CommandMenu/CommandMenuItem.tsx:import React from 'react';
src/components/molecules/CommandMenu/CommandMenuItem.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/molecules/CommandMenu/CommandMenuItem.tsx:import { cn } from '@/lib/utils';
src/components/molecules/CommandMenu/CommandMenuItem.tsx:import type { CommandMenuItem as CommandMenuItemType } from './types';
src/components/molecules/CommandMenu/InlineCommandMenu.tsx:import React, { useEffect, useRef, useState } from 'react';
src/components/molecules/CommandMenu/InlineCommandMenu.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/molecules/CommandMenu/InlineCommandMenu.tsx:import { cn } from '@/lib/utils';
src/components/molecules/CommandMenu/InlineCommandMenu.tsx:import { CommandMenuGroup } from './CommandMenuGroup';
src/components/molecules/CommandMenu/InlineCommandMenu.tsx:import { CommandMenuEmpty } from './CommandMenuEmpty';
src/components/molecules/CommandMenu/InlineCommandMenu.tsx:import { CommandMenuErrorBoundary } from './CommandMenuErrorBoundary';
src/components/molecules/CommandMenu/InlineCommandMenu.tsx:import { useCommandMenuWithApi } from './hooks/useCommandMenuWithApi';
src/components/molecules/CommandMenu/InlineCommandMenu.tsx:import { trackCommandMenuError, trackWorkflowSuggestion } from '@/lib/command-menu/analytics-utils';
src/components/molecules/CommandMenu/InlineCommandMenu.tsx:import type { CommandMenuItem, CommandMenuProps } from './types';
src/components/molecules/CommandMenu/InlineCommandMenu.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/CommandMenu/InlineCommandMenu.stories.tsx:import { InlineCommandMenu } from './InlineCommandMenu';
src/components/molecules/CommandMenu/CommandMenu.tsx:import React, { useEffect, useRef } from 'react';
src/components/molecules/CommandMenu/CommandMenu.tsx:import { Dialog } from '@headlessui/react';
src/components/molecules/CommandMenu/CommandMenu.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/molecules/CommandMenu/CommandMenu.tsx:import { cn } from '@/lib/utils';
src/components/molecules/CommandMenu/CommandMenu.tsx:import { CommandMenuGroup } from './CommandMenuGroup';
src/components/molecules/CommandMenu/CommandMenu.tsx:import { CommandMenuEmpty } from './CommandMenuEmpty';
src/components/molecules/CommandMenu/CommandMenu.tsx:import { useCommandMenuWithApi } from './hooks/useCommandMenuWithApi';
src/components/molecules/CommandMenu/CommandMenu.tsx:import type { CommandMenuItem, CommandMenuProps } from './types';
src/components/molecules/CommandMenu/hooks/useCommandMenuWithApi.ts:import { useState, useEffect, useCallback, useMemo } from 'react';
src/components/molecules/CommandMenu/hooks/useCommandMenuWithApi.ts:import { useRouter } from 'next/navigation';
src/components/molecules/CommandMenu/hooks/useCommandMenuWithApi.ts:import { toast } from 'react-hot-toast';
src/components/molecules/CommandMenu/hooks/useCommandMenuWithApi.ts:import type { CommandMenuItem } from '../types';
src/components/molecules/CommandMenu/hooks/useCommandMenuWithApi.ts:import { getCommandMenuItems, getAllCommandMenuItems } from '@/lib/command-menu/items-utils';
src/components/molecules/CommandMenu/hooks/useCommandMenuWithApi.ts:import { searchData, exportData, backupData, getRecentItems, clearRecentItems, createResident, createHousehold, findSeniorCitizens, findPWDs, findSoloParents, generateCertificate, generateReport } from '@/lib/command-menu/api-utils';
src/components/molecules/CommandMenu/hooks/useCommandMenuWithApi.ts:import { trackSearch, trackNavigation, trackAction } from '@/lib/storage';
src/components/molecules/CommandMenu/hooks/useCommandMenuWithApi.ts:import { trackCommandMenuSearch, trackCommandMenuNavigation, trackCommandMenuAction, trackCommandMenuError } from '@/lib/command-menu/analytics-utils';
src/components/molecules/CommandMenu/hooks/useCommandMenu.ts:import { useState, useEffect, useCallback, useMemo } from 'react';
src/components/molecules/CommandMenu/hooks/useCommandMenu.ts:import type { CommandMenuItem } from '../types';
src/components/molecules/CommandMenu/CommandMenuErrorBoundary.tsx:import React, { Component, ReactNode, ErrorInfo } from 'react';
src/components/molecules/CommandMenu/CommandMenuErrorBoundary.tsx:import { logger } from '@/lib/logging/secure-logger';
src/components/molecules/CommandMenu/CommandMenuEmpty.tsx:import React from 'react';
src/components/molecules/CommandMenu/CommandMenuEmpty.tsx:import { cn } from '@/lib/utils';
src/components/molecules/CommandMenu/CommandMenuGroup.tsx:import React from 'react';
src/components/molecules/CommandMenu/CommandMenuGroup.tsx:import { cn } from '@/lib/utils';
src/components/molecules/CommandMenu/CommandMenuGroup.tsx:import { CommandMenuItem } from './CommandMenuItem';
src/components/molecules/CommandMenu/CommandMenuGroup.tsx:import type { CommandMenuItem as CommandMenuItemType } from './types';
src/components/molecules/AccessibleModal/AccessibleModal.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/AccessibleModal/AccessibleModal.stories.tsx:import AccessibleModal from './AccessibleModal';
src/components/molecules/AccessibleModal/AccessibleModal.stories.tsx:import { Button } from '@/components/atoms/Button';
src/components/molecules/AccessibleModal/AccessibleModal.stories.tsx:import { useState } from 'react';
src/components/molecules/AccessibleModal/AccessibleModal.tsx:import React, { useEffect, useRef } from 'react';
src/components/molecules/AccessibleModal/AccessibleModal.tsx:import { createPortal } from 'react-dom';
src/components/molecules/AccessibleModal/AccessibleModal.tsx:import { useFocusTrap, announceToScreenReader } from '@/lib/ui/accessibility';
src/components/molecules/AccessibleModal/AccessibleModal.tsx:import { cn } from '@/lib/utils';
src/components/molecules/EmploymentStatusPieChart/EmploymentStatusPieChart.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/EmploymentStatusPieChart/EmploymentStatusPieChart.stories.tsx:import EmploymentStatusPieChart from './EmploymentStatusPieChart';
src/components/molecules/EmploymentStatusPieChart/EmploymentStatusPieChart.tsx:import React from 'react';
src/components/molecules/EmploymentStatusPieChart/EmploymentStatusPieChart.tsx:import GenericPieChart from '../GenericPieChart/GenericPieChart';
src/components/molecules/GenericPieChart/GenericPieChart.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/GenericPieChart/GenericPieChart.stories.tsx:import GenericPieChart from './GenericPieChart';
src/components/molecules/GenericPieChart/GenericPieChart.tsx:import React, { useState } from 'react';
src/components/molecules/FormSection/FormSection.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/FormSection/FormSection.stories.tsx:import FormSection from './FormSection';
src/components/molecules/FormSection/FormSection.stories.tsx:import { FieldSet } from '@/components/molecules/FieldSet/InputField';
src/components/molecules/FormSection/FormSection.stories.tsx:import { Button, Checkbox, Radio } from '@/components/atoms';
src/components/molecules/FormSection/FormSection.tsx:import React from 'react';
src/components/molecules/FormSection/FormSection.tsx:import { cn } from '@/lib/utils';
src/components/molecules/SexDistributionPieChart/SexDistributionPieChart.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/SexDistributionPieChart/SexDistributionPieChart.stories.tsx:import SexDistributionPieChart from './SexDistributionPieChart';
src/components/molecules/SexDistributionPieChart/SexDistributionPieChart.tsx:import React from 'react';
src/components/molecules/SexDistributionPieChart/SexDistributionPieChart.tsx:import GenericPieChart from '../GenericPieChart/GenericPieChart';
src/components/molecules/DependencyRatioPieChart/DependencyRatioPieChart.tsx:import React from 'react';
src/components/molecules/DependencyRatioPieChart/DependencyRatioPieChart.tsx:import GenericPieChart from '../GenericPieChart/GenericPieChart';
src/components/molecules/DependencyRatioPieChart/DependencyRatioPieChart.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/DependencyRatioPieChart/DependencyRatioPieChart.stories.tsx:import DependencyRatioPieChart from './DependencyRatioPieChart';
src/components/molecules/PWAInstallPrompt/PWAInstallPrompt.tsx:import React, { useState, useEffect } from 'react';
src/components/molecules/PWAInstallPrompt/PWAInstallPrompt.tsx:import { Button } from '@/components/atoms';
src/components/molecules/PWAInstallPrompt/PWAInstallPrompt.tsx:import { trackPWAEvents } from '@/lib/performance/pwaPerformanceUtils';
src/components/molecules/VersionTag/VersionTag.tsx:import React, { useState, useEffect } from 'react';
src/components/molecules/VersionTag/VersionTag.tsx:import { cn } from '@/lib/utils';
src/components/molecules/VersionTag/VersionTag.tsx:import packageJson from '../../../../package.json';
src/components/molecules/VersionTag/VersionTag.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/VersionTag/VersionTag.stories.tsx:import { VersionTag } from './VersionTag';
src/components/molecules/FieldSet/ControlField/ControlField.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/FieldSet/ControlField/ControlField.stories.tsx:import { useState } from 'react';
src/components/molecules/FieldSet/ControlField/ControlField.stories.tsx:import { ControlField, ControlGroup } from './ControlField';
src/components/molecules/FieldSet/ControlField/ControlField.tsx:import React from 'react';
src/components/molecules/FieldSet/ControlField/ControlField.tsx:import { cn } from '@/lib/utilities';
src/components/molecules/FieldSet/ControlField/ControlField.tsx:import { Label, HelperText } from '../../../atoms/Field';
src/components/molecules/FieldSet/ControlField/ControlField.tsx:import { Control } from '../../../atoms/Field/Control/Control';
src/components/molecules/FieldSet/ControlField/ControlField.tsx:import { getFieldId, getFieldIds, buildAriaDescribedBy, buildAriaLabelledBy } from '@/lib';
src/components/molecules/FieldSet/SelectField/SelectField.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/FieldSet/SelectField/SelectField.stories.tsx:import { SelectField } from './SelectField';
src/components/molecules/FieldSet/SelectField/SelectField.stories.tsx:import { SelectOption } from '../../Select';
src/components/molecules/FieldSet/SelectField/SelectField.tsx:import React from 'react';
src/components/molecules/FieldSet/SelectField/SelectField.tsx:import { cn } from '@/lib/utils';
src/components/molecules/FieldSet/SelectField/SelectField.tsx:import { Label, HelperText } from '../../../atoms/Field';
src/components/molecules/FieldSet/SelectField/SelectField.tsx:import { Select, SelectProps } from '../../../atoms/Field/Select';
src/components/molecules/FieldSet/ReadOnlyField/ReadOnlyField.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/FieldSet/ReadOnlyField/ReadOnlyField.stories.tsx:import { ReadOnlyField } from './ReadOnlyField';
src/components/molecules/FieldSet/ReadOnlyField/ReadOnlyField.tsx:import React from 'react';
src/components/molecules/FieldSet/ReadOnlyField/ReadOnlyField.tsx:import { cn } from '@/lib/utilities';
src/components/molecules/FieldSet/ReadOnlyField/ReadOnlyField.tsx:import { getFieldId, getFieldIds, buildAriaDescribedBy, buildAriaLabelledBy } from '@/lib';
src/components/molecules/FieldSet/ReadOnlyField/ReadOnlyField.tsx:import { Label, ReadOnly, HelperText } from '../../../atoms/Field';
src/components/molecules/FieldSet/InputField/InputField.tsx:import React from 'react';
src/components/molecules/FieldSet/InputField/InputField.tsx:import { cn } from '@/lib/utils';
src/components/molecules/FieldSet/InputField/InputField.tsx:import { Label, Input, HelperText } from '../../../atoms/Field';
src/components/molecules/FieldSet/InputField/InputField.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/FieldSet/InputField/InputField.stories.tsx:import { useState } from 'react';
src/components/molecules/FieldSet/InputField/InputField.stories.tsx:import { InputField, FormGroup, Form } from './InputField';
src/components/molecules/FieldSet/InputField/InputField.stories.tsx:import { Input, Textarea } from '../../../atoms/Field';
src/components/molecules/FieldSet/InputField/InputField.stories.tsx:import { Checkbox, Radio, RadioGroup, Toggle } from '../../../atoms/Field';
src/components/molecules/FieldSet/InputField/InputField.stories.tsx:import { Button } from '../../../atoms/Button/Button';
src/components/molecules/FieldSet/FieldSet.tsx:import React from 'react';
src/components/molecules/FieldSet/FieldSet.tsx:import { cn } from '@/lib/utilities';
src/components/molecules/FieldSet/FieldSet.tsx:import { CheckboxGroup } from '../../atoms/Field/Control/Checkbox/Checkbox';
src/components/molecules/FieldSet/FieldSet.tsx:import { RadioGroup } from '../../atoms/Field/Control/Radio/Radio';
src/components/molecules/FieldSet/FieldSet.tsx:import { ControlGroup } from './ControlField/ControlField';
src/components/molecules/FieldSet/FieldSet.tsx:import { Label } from '../../atoms/Field/Label/Label';
src/components/molecules/FieldSet/FieldErrorBoundary.tsx:import React, { Component, ReactNode } from 'react';
src/components/molecules/CivilStatusPieChart/CivilStatusPieChart.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/CivilStatusPieChart/CivilStatusPieChart.stories.tsx:import CivilStatusPieChart from './CivilStatusPieChart';
src/components/molecules/CivilStatusPieChart/CivilStatusPieChart.tsx:import React from 'react';
src/components/molecules/CivilStatusPieChart/CivilStatusPieChart.tsx:import GenericPieChart from '../GenericPieChart/GenericPieChart';
src/components/molecules/AuthDebug/AuthDebug.tsx:import React, { useState, useEffect } from 'react';
src/components/molecules/AuthDebug/AuthDebug.tsx:import { supabase } from '@/lib/supabase';
src/components/molecules/StatisticsChart/StatisticsChart.tsx:import React from 'react';
src/components/molecules/StatisticsChart/StatisticsChart.tsx:import GenericPieChart from '../GenericPieChart/GenericPieChart';
src/components/molecules/StatisticsChart/StatisticsChart.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/StatisticsChart/StatisticsChart.stories.tsx:import StatisticsChart from './StatisticsChart';
src/components/molecules/StatisticsChart/StatisticsChart.stories.tsx:import type { DependencyData, SexData, CivilStatusData, EmploymentStatusData } from '@/lib/charts';
src/components/molecules/StatsCard/StatsCard.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/molecules/StatsCard/StatsCard.stories.tsx:import StatsCard from './StatsCard';
src/components/molecules/StatsCard/StatsCard.tsx:import React from 'react';
src/components/atoms/LiveRegion/LiveRegion.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/LiveRegion/LiveRegion.stories.tsx:import { useState } from 'react';
src/components/atoms/LiveRegion/LiveRegion.stories.tsx:import { LiveRegion } from './LiveRegion';
src/components/atoms/LiveRegion/LiveRegion.tsx:import React, { useEffect, useState } from 'react';
src/components/atoms/Chart/ChartEmptyState/ChartEmptyState.tsx:import React from 'react';
src/components/atoms/Chart/ChartEmptyState/ChartEmptyState.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Chart/ChartEmptyState/ChartEmptyState.stories.tsx:import ChartEmptyState from './ChartEmptyState';
src/components/atoms/Chart/ChartTitle/ChartTitle.tsx:import React from 'react';
src/components/atoms/Chart/ChartTitle/ChartTitle.tsx:import { cn } from '@/lib/utilities';
src/components/atoms/Chart/ChartTitle/ChartTitle.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Chart/ChartTitle/ChartTitle.stories.tsx:import ChartTitle from './ChartTitle';
src/components/atoms/Chart/ChartContainer/ChartContainer.tsx:import React from 'react';
src/components/atoms/Chart/ChartContainer/ChartContainer.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Chart/ChartContainer/ChartContainer.stories.tsx:import ChartContainer from './ChartContainer';
src/components/atoms/Chart/ChartTooltip/ChartTooltip.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Chart/ChartTooltip/ChartTooltip.stories.tsx:import ChartTooltip from './ChartTooltip';
src/components/atoms/Chart/ChartTooltip/ChartTooltip.tsx:import React from 'react';
src/components/atoms/Chart/ChartTooltip/ChartTooltip.tsx:import { cn } from '@/lib/utilities';
src/components/atoms/Chart/ChartLegend/ChartLegend.tsx:import React from 'react';
src/components/atoms/Chart/ChartLegend/ChartLegend.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Chart/ChartLegend/ChartLegend.stories.tsx:import React, { useState } from 'react';
src/components/atoms/Chart/ChartLegend/ChartLegend.stories.tsx:import ChartLegend from './ChartLegend';
src/components/atoms/Field/ReadOnly/ReadOnly.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/ReadOnly/ReadOnly.stories.tsx:import { ReadOnly } from './ReadOnly';
src/components/atoms/Field/ReadOnly/ReadOnly.tsx:import React from 'react';
src/components/atoms/Field/ReadOnly/ReadOnly.tsx:import { cn } from '@/lib/utilities';
src/components/atoms/Field/HelperText/HelperText.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/HelperText/HelperText.stories.tsx:import { HelperText } from './HelperText';
src/components/atoms/Field/HelperText/HelperText.tsx:import React from 'react';
src/components/atoms/Field/Input/Input.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Input/Input.stories.tsx:import { useState } from 'react';
src/components/atoms/Field/Input/Input.stories.tsx:import { Input } from './Input';
src/components/atoms/Field/Input/Input.stories.tsx:import { Input } from '@/components/atoms';
src/components/atoms/Field/Input/Input.tsx:import React, { forwardRef, useState } from 'react';
src/components/atoms/Field/Label/Label.tsx:import React from 'react';
src/components/atoms/Field/Label/Label.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Label/Label.stories.tsx:import { Label } from './Label';
src/components/atoms/Field/Textarea/Textarea.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Textarea/Textarea.stories.tsx:import { useState } from 'react';
src/components/atoms/Field/Textarea/Textarea.stories.tsx:import { Textarea } from './Textarea';
src/components/atoms/Field/Textarea/Textarea.stories.tsx:import { Textarea } from '@/components/atoms';
src/components/atoms/Field/Textarea/Textarea.tsx:import React, { forwardRef } from 'react';
src/components/atoms/Field/Select/Option/Option.tsx:import React, { forwardRef } from 'react';
src/components/atoms/Field/Select/Option/Option.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Select/Option/Option.stories.tsx:import { Option } from './Option';
src/components/atoms/Field/Select/Option/Option.stories.tsx:import { Option } from '@/components/atoms';
src/components/atoms/Field/Select/Select.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Select/Select.stories.tsx:import { useState, useCallback, useMemo, useRef, useEffect } from 'react';
src/components/atoms/Field/Select/Select.stories.tsx:import Select from './Select';
src/components/atoms/Field/Select/Select.stories.tsx:import { Select } from '@/components/atoms/Field';
src/components/atoms/Field/Select/Select.stories.tsx:import { SEX_OPTIONS } from '@/lib/constants/resident-enums';
src/components/atoms/Field/Select/Select.tsx:import { useState, useEffect, useRef, useCallback } from 'react';
src/components/atoms/Field/Select/Select.tsx:import { Input } from '../';
src/components/atoms/Field/Select/Select.tsx:import { Option } from './Option';
src/components/atoms/Field/Control/TitleDescription.tsx:import React from 'react';
src/components/atoms/Field/Control/TitleDescription.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/atoms/Field/Control/TitleDescription.tsx:import { cn } from '@/lib/utils';
src/components/atoms/Field/Control/Radio/Radio.tsx:import React, { forwardRef, InputHTMLAttributes } from 'react';
src/components/atoms/Field/Control/Radio/Radio.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/atoms/Field/Control/Radio/Radio.tsx:import { cn } from '@/lib/utils';
src/components/atoms/Field/Control/Radio/Radio.tsx:import { TitleDescription } from '../TitleDescription';
src/components/atoms/Field/Control/Radio/Radio.tsx:import { Button, type ButtonProps } from '@/components/atoms/Button/Button';
src/components/atoms/Field/Control/Radio/Radio.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Control/Radio/Radio.stories.tsx:import { useState } from 'react';
src/components/atoms/Field/Control/Radio/Radio.stories.tsx:import { Radio, RadioGroup } from './Radio';
src/components/atoms/Field/Control/Control.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Control/Control.stories.tsx:import { useState } from 'react';
src/components/atoms/Field/Control/Control.stories.tsx:import { Control } from './Control';
src/components/atoms/Field/Control/Checkbox/Checkbox.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Control/Checkbox/Checkbox.stories.tsx:import { useState } from 'react';
src/components/atoms/Field/Control/Checkbox/Checkbox.stories.tsx:import { Checkbox } from './Checkbox';
src/components/atoms/Field/Control/Checkbox/Checkbox.tsx:import React, { forwardRef, InputHTMLAttributes } from 'react';
src/components/atoms/Field/Control/Checkbox/Checkbox.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/atoms/Field/Control/Checkbox/Checkbox.tsx:import { cn } from '@/lib/utils';
src/components/atoms/Field/Control/Checkbox/Checkbox.tsx:import { TitleDescription } from '../TitleDescription';
src/components/atoms/Field/Control/Control.tsx:import React, { forwardRef, InputHTMLAttributes } from 'react';
src/components/atoms/Field/Control/Control.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/atoms/Field/Control/Control.tsx:import { cn } from '@/lib/utils';
src/components/atoms/Field/Control/Control.tsx:import { TitleDescription } from './TitleDescription';
src/components/atoms/Field/Control/Toggle/Toggle.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Control/Toggle/Toggle.stories.tsx:import { useState } from 'react';
src/components/atoms/Field/Control/Toggle/Toggle.stories.tsx:import { Toggle } from './Toggle';
src/components/atoms/Field/Control/Toggle/Toggle.tsx:import React, { forwardRef, InputHTMLAttributes } from 'react';
src/components/atoms/Field/Control/Toggle/Toggle.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/atoms/Field/Control/Toggle/Toggle.tsx:import { cn } from '@/lib/utils';
src/components/atoms/Field/Control/Toggle/Toggle.tsx:import { TitleDescription } from '../TitleDescription';
src/components/atoms/Field/Control/TitleDescription.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Field/Control/TitleDescription.stories.tsx:import { TitleDescription } from './TitleDescription';
src/components/atoms/Button/Button.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Button/Button.stories.tsx:import { Button } from './Button';
src/components/atoms/Button/__tests__/Button.test.tsx:import React from 'react';
src/components/atoms/Button/__tests__/Button.test.tsx:import { render, screen, fireEvent } from '@testing-library/react';
src/components/atoms/Button/__tests__/Button.test.tsx:import { Button } from '../Button';
src/components/atoms/Button/Button.tsx:import React, { forwardRef, ButtonHTMLAttributes } from 'react';
src/components/atoms/Button/Button.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/atoms/Button/Button.tsx:import { cn } from '@/lib/utils';
src/components/atoms/Link/Link.tsx:import React, { forwardRef, AnchorHTMLAttributes } from 'react';
src/components/atoms/Link/Link.tsx:import NextLink from 'next/link';
src/components/atoms/Link/Link.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/atoms/Link/Link.tsx:import { cn } from '@/lib/utilities';
src/components/atoms/Link/Link.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Link/Link.stories.tsx:import { Link } from './Link';
src/components/atoms/KeyboardNavigableList/KeyboardNavigableList.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/KeyboardNavigableList/KeyboardNavigableList.stories.tsx:import { useState } from 'react';
src/components/atoms/KeyboardNavigableList/KeyboardNavigableList.stories.tsx:import { KeyboardNavigableList, ListItem } from './KeyboardNavigableList';
src/components/atoms/KeyboardNavigableList/KeyboardNavigableList.tsx:import React, { useCallback } from 'react';
src/components/atoms/KeyboardNavigableList/KeyboardNavigableList.tsx:import { useArrowKeyNavigation } from '@/lib/ui/accessibility';
src/components/atoms/KeyboardNavigableList/KeyboardNavigableList.tsx:import { cn } from '@/lib/utils';
src/components/atoms/Typography/Typography.tsx:import React, { ElementType, HTMLAttributes } from 'react';
src/components/atoms/Typography/Typography.tsx:import { typography, type TypographyVariant } from '@/lib/ui/typography';
src/components/atoms/Typography/Typography.tsx:import { cn } from '@/lib/utils';
src/components/atoms/Typography/Typography.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/IconButton/IconButton.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/IconButton/IconButton.stories.tsx:import { IconButton } from './IconButton';
src/components/atoms/IconButton/IconButton.tsx:import React, { forwardRef } from 'react';
src/components/atoms/IconButton/IconButton.tsx:import { Button, ButtonProps } from '../Button/Button';
src/components/atoms/IconButton/IconButton.tsx:import { cn } from '@/lib/utils';
src/components/atoms/SkipNavigation/SkipNavigation.tsx:import React from 'react';
src/components/atoms/SkipNavigation/SkipNavigation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/SkipNavigation/SkipNavigation.stories.tsx:import { SkipNavigation, SkipLinks } from './SkipNavigation';
src/components/atoms/Icon/Icon.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Icon/Icon.stories.tsx:import Icon from './Icon';
src/components/atoms/Icon/Icon.tsx:import React from 'react';
src/components/atoms/Icon/Icon.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/atoms/Icon/Icon.tsx:import { clsx } from 'clsx';
src/components/atoms/ErrorMessage/ErrorMessage.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/ErrorMessage/ErrorMessage.stories.tsx:import { ErrorMessage } from './ErrorMessage';
src/components/atoms/ErrorMessage/ErrorMessage.tsx:import React from 'react';
src/components/atoms/ErrorMessage/ErrorMessage.tsx:import { cn } from '@/lib/utils';
src/components/atoms/Badge/Badge.tsx:import React from 'react';
src/components/atoms/Badge/Badge.tsx:import { cn } from '@/lib/utilities';
src/components/atoms/Badge/Badge.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/atoms/Badge/Badge.stories.tsx:import { Badge } from './Badge';
src/components/types/form-field.ts:import { ReactNode } from 'react';
src/components/providers/Providers/ErrorBoundary.tsx:import React from 'react';
src/components/providers/Providers/Providers.tsx:import { AuthProvider } from '@/contexts/AuthContext';
src/components/providers/Providers/Providers.tsx:import { ThemeProvider } from '@/contexts/ThemeContext';
src/components/providers/Providers/Providers.tsx:import QueryProvider from '@/providers/QueryProvider';
src/components/providers/Providers/Providers.tsx:import ErrorBoundary from './ErrorBoundary';
src/components/providers/ClientProviders/ClientProviders.tsx:import { AuthProvider } from '@/contexts/AuthContext';
src/components/providers/LastVisitedTracker.tsx:import { useLastVisitedPage } from '@/hooks/utilities';
src/components/lazy-index.ts:import { createLazyComponent, LazyLoadingPresets } from '@/lib/lazy-components';
src/components/lazy/LazyComponents.tsx:import { lazy, Suspense, ComponentType, ReactNode } from 'react';
src/components/templates/ResidentForm/components/FormHeader.tsx:import React from 'react';
src/components/templates/ResidentForm/components/FormHeader.tsx:import type { FormMode } from '@/lib/types/forms';
src/components/templates/ResidentForm/components/FormValidationFeedback.tsx:import React from 'react';
src/components/templates/ResidentForm/components/FormActions.tsx:import React from 'react';
src/components/templates/ResidentForm/components/FormActions.tsx:import type { FormMode } from '@/lib/types/forms';
src/components/templates/ResidentForm/ResidentForm.tsx:import React, { useState, useCallback, useRef } from 'react';
src/components/templates/ResidentForm/ResidentForm.tsx:import { PersonalInformationForm, ContactInformationForm, PhysicalPersonalDetailsForm, SectoralInformationForm, MigrationInformation } from '@/components/organisms/Form';
src/components/templates/ResidentForm/ResidentForm.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/templates/ResidentForm/ResidentForm.tsx:import { ResidentFormState } from '@/types/resident-form';
src/components/templates/ResidentForm/ResidentForm.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/templates/ResidentForm/ResidentForm.stories.tsx:import { ResidentForm } from './ResidentForm';
src/components/templates/DashboardLayout/DashboardLayout.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/templates/DashboardLayout/DashboardLayout.stories.tsx:import React, { useState } from 'react';
src/components/templates/DashboardLayout/DashboardLayout.stories.tsx:import DashboardLayout from './DashboardLayout';
src/components/templates/DashboardLayout/DashboardLayout.tsx:import React, { useState, useEffect } from 'react';
src/components/templates/DashboardLayout/DashboardLayout.tsx:import Link from 'next/link';
src/components/templates/DashboardLayout/DashboardLayout.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/templates/DashboardLayout/DashboardLayout.tsx:import { supabase } from '@/lib/supabase/supabase';
src/components/templates/DashboardLayout/DashboardLayout.tsx:import { InlineCommandMenu } from '@/components/molecules/CommandMenu/InlineCommandMenu';
src/components/templates/DashboardLayout/DashboardLayout.tsx:import { Navigation } from '@/components/organisms';
src/components/templates/DashboardLayout/DashboardLayout.tsx:import { Toaster } from 'react-hot-toast';
src/components/templates/DashboardLayout/DashboardLayout.tsx:import { logger, logError } from '@/lib/logging/secure-logger';
src/components/templates/DashboardLayout/DashboardLayout.tsx:import SkipNavigation from '@/components/atoms/SkipNavigation';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.stories.tsx:import React, { useState } from 'react';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.stories.tsx:import HouseholdFormWizard, { type HouseholdFormData } from './HouseholdFormWizard';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import React, { useState, useEffect } from 'react';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import { useRouter } from 'next/navigation';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import { useQueryClient } from '@tanstack/react-query';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import { supabase } from '@/lib/supabase';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import { useUserBarangay } from '@/hooks/utilities';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import { useCSRFToken } from '@/lib/auth/csrf';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import { logger, logError, dbLogger } from '@/lib/logging/secure-logger';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import { HouseholdTypeSelector } from '@/components/organisms';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import { Button } from '@/components/atoms';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.tsx:import { SelectField, InputField } from '@/components/molecules';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.refactored.tsx:import React, { useState } from 'react';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.refactored.tsx:import { useRouter } from 'next/navigation';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.refactored.tsx:import { HouseholdFormData } from '@/lib/services/household.service';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.refactored.tsx:import { Button } from '@/components/atoms';
src/components/templates/HouseholdFormWizard/HouseholdFormWizard.refactored.tsx:import { InputField, SelectField } from '@/components/molecules';
src/components/templates/AppShell/AppShell.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/templates/AppShell/AppShell.stories.tsx:import React from 'react';
src/components/templates/AppShell/AppShell.stories.tsx:import AppShell from './AppShell';
src/components/templates/AppShell/AppShell.tsx:import React, { useState } from 'react';
src/components/templates/AppShell/AppShell.tsx:import { Button } from '@/components/atoms';
src/components/templates/AppShell/AppShell.tsx:import { Navigation } from '@/components/organisms/Navigation';
src/components/templates/HouseholdRegistrationForm/HouseholdRegistrationForm.tsx:import React, { useState } from 'react';
src/components/templates/HouseholdRegistrationForm/HouseholdRegistrationForm.tsx:import { useForm, useFieldArray } from 'react-hook-form';
src/components/templates/HouseholdRegistrationForm/HouseholdRegistrationForm.tsx:import { zodResolver } from '@hookform/resolvers/zod';
src/components/templates/HouseholdRegistrationForm/HouseholdRegistrationForm.tsx:import { z } from 'zod';
src/components/templates/HouseholdRegistrationForm/HouseholdRegistrationForm.tsx:import { supabase } from '@/lib/supabase';
src/components/templates/HouseholdRegistrationForm/HouseholdRegistrationForm.tsx:import { Button } from '@/components/atoms';
src/components/templates/HouseholdRegistrationForm/HouseholdRegistrationForm.tsx:import { ErrorBoundary } from '@/providers';
src/components/templates/HouseholdRegistrationForm/HouseholdRegistrationForm.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/templates/HouseholdRegistrationForm/HouseholdRegistrationForm.stories.tsx:import HouseholdRegistrationForm from './HouseholdRegistrationForm';
src/components/templates/Header/Header.tsx:import React, { useState } from 'react';
src/components/templates/Header/Header.tsx:import Link from 'next/link';
src/components/templates/Header/Header.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/templates/Header/Header.tsx:import { UserProfile } from '@/components/organisms';
src/components/templates/Header/Header.tsx:import { Button } from '@/components/atoms';
src/components/templates/Header/Header.tsx:import { logError } from '@/lib/logging/secure-logger';
src/components/templates/Header/Header.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/templates/Header/Header.stories.tsx:import React from 'react';
src/components/templates/Header/Header.stories.tsx:import Header from './Header';
src/components/templates/MainLayout/MainLayout.tsx:import React from 'react';
src/components/templates/MainLayout/MainLayout.tsx:import { Header } from '../Header';
src/components/templates/MainLayout/MainLayout.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/templates/MainLayout/MainLayout.stories.tsx:import React from 'react';
src/components/templates/MainLayout/MainLayout.stories.tsx:import MainLayout from './MainLayout';
src/components/tokens/Shadows/Shadows.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/tokens/Shadows/Shadows.tsx:import React from 'react';
src/components/tokens/Layout/Layout.tsx:import React from 'react';
src/components/tokens/Layout/Layout.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/tokens/Colors/Colors.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/tokens/Colors/Colors.stories.tsx:import React from 'react';
src/components/tokens/Spacing/Spacing.tsx:import React from 'react';
src/components/tokens/Spacing/Spacing.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/tokens/Typography/Typography.tsx:import React from 'react';
src/components/tokens/Typography/Typography.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Sidebar/Sidebar.tsx:import React, { useState, useEffect } from 'react';
src/components/organisms/Sidebar/Sidebar.tsx:import Link from 'next/link';
src/components/organisms/Sidebar/Sidebar.tsx:import { usePathname } from 'next/navigation';
src/components/organisms/Sidebar/Sidebar.tsx:import { cva, type VariantProps } from 'class-variance-authority';
src/components/organisms/Sidebar/Sidebar.tsx:import { clsx } from 'clsx';
src/components/organisms/Sidebar/Sidebar.tsx:import Navigation, { type NavigationItem } from '../Navigation/Navigation';
src/components/organisms/Sidebar/Sidebar.tsx:import Icon from '../../atoms/Icon/Icon';
src/components/organisms/Sidebar/Sidebar.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Sidebar/Sidebar.stories.tsx:import Sidebar from './Sidebar';
src/components/organisms/Sidebar/Sidebar.stories.tsx:import { NavigationItem } from '../Navigation/Navigation';
src/components/organisms/HouseholdsContent/HouseholdsContent.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/HouseholdsContent/HouseholdsContent.stories.tsx:import { useState } from 'react';
src/components/organisms/HouseholdsContent/HouseholdsContent.stories.tsx:import HouseholdsContent from './HouseholdsContent';
src/components/organisms/HouseholdsContent/HouseholdsContent.tsx:import { useState, useEffect } from 'react';
src/components/organisms/HouseholdsContent/HouseholdsContent.tsx:import { useRouter } from 'next/navigation';
src/components/organisms/HouseholdsContent/HouseholdsContent.tsx:import { DataTable } from '@/components/organisms';
src/components/organisms/HouseholdsContent/HouseholdsContent.tsx:import { SearchBar } from '@/components/molecules';
src/components/organisms/HouseholdsContent/HouseholdsContent.tsx:import type { TableColumn, TableAction } from '@/components/organisms';
src/components/organisms/HouseholdsContent/HouseholdsContent.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/organisms/Form/Resident/MigrationInformation/MigrationInformation.tsx:import React, { useEffect } from 'react';
src/components/organisms/Form/Resident/MigrationInformation/MigrationInformation.tsx:import { InputField, SelectField, ControlField } from '@/components/molecules';
src/components/organisms/Form/Resident/MigrationInformation/MigrationInformation.tsx:import { useMigrationInformation, MigrationInformationData } from '@/hooks/utilities/useMigrationInformation';
src/components/organisms/Form/Resident/MigrationInformation/MigrationInformation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/MigrationInformation/MigrationInformation.stories.tsx:import { useState } from 'react';
src/components/organisms/Form/Resident/MigrationInformation/MigrationInformation.stories.tsx:import { MigrationInformation, MigrationInformationData } from './MigrationInformation';
src/components/organisms/Form/Resident/SectoralInformation/SectoralInformation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/SectoralInformation/SectoralInformation.stories.tsx:import { SectoralInformationForm } from './SectoralInformation';
src/components/organisms/Form/Resident/SectoralInformation/SectoralInformation.tsx:import React from 'react';
src/components/organisms/Form/Resident/SectoralInformation/SectoralInformation.tsx:import SectoralInfo, { SectoralInformation, SectoralContext } from '@/components/organisms/SectoralInfo/SectoralInfo';
src/components/organisms/Form/Resident/utils/fieldRenderers.tsx:import React from 'react';
src/components/organisms/Form/Resident/utils/fieldRenderers.tsx:import { InputField, SelectField, ControlField } from '@/components/molecules/FieldSet';
src/components/organisms/Form/Resident/utils/fieldRenderers.tsx:import { ReadOnlyField } from '@/components/molecules/FieldSet';
src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.stories.tsx:import { PersonalInformationForm } from './PersonalInformation';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.stories.tsx:import { BirthInformation } from './BirthInformation';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.tsx:import React from 'react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.tsx:import { InputField, SelectField } from '@/components/molecules';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.tsx:import { useOptimizedPsgcSearch } from '@/hooks/search/useOptimizedPsgcSearch';
src/components/organisms/Form/Resident/PersonalInformation/FormField/EducationInformation.tsx:import React from 'react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/EducationInformation.tsx:import { SelectField, ControlFieldSet } from '@/components/molecules';
src/components/organisms/Form/Resident/PersonalInformation/FormField/EducationInformation.tsx:import { Radio } from '@/components/atoms/Field/Control/Radio/Radio';
src/components/organisms/Form/Resident/PersonalInformation/FormField/EducationInformation.tsx:import { EDUCATION_LEVEL_OPTIONS_WITH_EMPTY } from '@/lib/constants/resident-enums';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.stories.tsx:import { useState } from 'react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.stories.tsx:import { BasicInformation, BasicInformationData } from './BasicInformation';
src/components/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.tsx:import React from 'react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.tsx:import { InputField } from '@/components/molecules';
src/components/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.stories.tsx:import { useState } from 'react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.stories.tsx:import { PhilSysCardField } from './PhilSysCardField';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.tsx:import React from 'react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.tsx:import { InputField, SelectField, ControlFieldSet } from '@/components/molecules';
src/components/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.tsx:import { Radio } from '@/components/atoms/Field/Control/Radio/Radio';
src/components/organisms/Form/Resident/PersonalInformation/FormField/EmploymentInformation.tsx:import React from 'react';
src/components/organisms/Form/Resident/PersonalInformation/FormField/EmploymentInformation.tsx:import { SelectField } from '@/components/molecules';
src/components/organisms/Form/Resident/PersonalInformation/FormField/EmploymentInformation.tsx:import { EMPLOYMENT_STATUS_OPTIONS_WITH_EMPTY } from '@/lib/constants/resident-enums';
src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.tsx:import React from 'react';
src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.tsx:import { PhilSysCardField } from './FormField/PhilSysCardField';
src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.tsx:import { BasicInformation, BasicInformationData } from './FormField/BasicInformation';
src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.tsx:import { BirthInformation, BirthInformationData } from './FormField/BirthInformation';
src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.tsx:import { EducationInformation, EducationInformationData } from './FormField/EducationInformation';
src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.tsx:import { EmploymentInformation, EmploymentInformationData } from './FormField/EmploymentInformation';
src/components/organisms/Form/Resident/ContactInformation/ContactInformation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/ContactInformation/ContactInformation.stories.tsx:import { ContactInformationForm } from './ContactInformation';
src/components/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.tsx:import React from 'react';
src/components/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.tsx:import HouseholdSelector from '@/components/organisms/HouseholdSelector/HouseholdSelector';
src/components/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.stories.tsx:import { useState } from 'react';
src/components/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.stories.tsx:import { HouseholdInformation, HouseholdInformationData } from './HouseholdInformation';
src/components/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.tsx:import React from 'react';
src/components/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.tsx:import { InputField } from '@/components/molecules';
src/components/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.stories.tsx:import { useState } from 'react';
src/components/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.stories.tsx:import { ContactDetails, ContactDetailsData } from './ContactDetails';
src/components/organisms/Form/Resident/ContactInformation/ContactInformation.tsx:import React from 'react';
src/components/organisms/Form/Resident/ContactInformation/ContactInformation.tsx:import { ContactDetails, ContactDetailsData } from './FormField/ContactDetails';
src/components/organisms/Form/Resident/ContactInformation/ContactInformation.tsx:import { HouseholdInformation, HouseholdInformationData } from './FormField/HouseholdInformation';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.tsx:import React from 'react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.tsx:import { InputField, SelectField } from '@/components/molecules';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.tsx:import { BLOOD_TYPE_OPTIONS_WITH_DEFAULT, ETHNICITY_OPTIONS_WITH_DEFAULT, RELIGION_OPTIONS_WITH_DEFAULT, CITIZENSHIP_OPTIONS_WITH_DEFAULT } from '@/lib/constants/resident-enums';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.stories.tsx:import { useState } from 'react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.stories.tsx:import { PhysicalCharacteristics, PhysicalCharacteristicsData } from './PhysicalCharacteristics';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.stories.tsx:import { useState } from 'react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.stories.tsx:import { VotingInformation, VotingInformationData } from './VotingInformation';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.stories.tsx:import { useState } from 'react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.stories.tsx:import { MotherMaidenName, MotherMaidenNameData } from './MotherMaidenName';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.tsx:import React from 'react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.tsx:import { InputField, ControlFieldSet } from '@/components/molecules';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.tsx:import { Radio } from '@/components/atoms/Field/Control/Radio/Radio';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.tsx:import React from 'react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.tsx:import { InputField } from '@/components/molecules';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.stories.tsx:import { PhysicalPersonalDetailsForm } from './PhysicalPersonalDetails';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.tsx:import React from 'react';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.tsx:import { PhysicalCharacteristics, PhysicalCharacteristicsData } from './FormField/PhysicalCharacteristics';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.tsx:import { VotingInformation, VotingInformationData } from './FormField/VotingInformation';
src/components/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.tsx:import { MotherMaidenName, MotherMaidenNameData } from './FormField/MotherMaidenName';
src/components/organisms/Form/Household/HouseholdForm.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Household/HouseholdForm.stories.tsx:import { HouseholdForm } from './HouseholdForm';
src/components/organisms/Form/Household/HouseholdForm.tsx:import React, { useState, useCallback } from 'react';
src/components/organisms/Form/Household/HouseholdForm.tsx:import { HouseholdDetails } from './HouseholdDetails';
src/components/organisms/Form/Household/HouseholdForm.tsx:import { ExtendedHouseholdFormData, FormMode } from './types';
src/components/organisms/Form/Household/types.ts:import { HouseholdFormData } from '@/lib/types/database';
src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.stories.tsx:import { useState } from 'react';
src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.stories.tsx:import { HouseholdDetails } from './HouseholdDetails';
src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.stories.tsx:import { HouseholdDetailsData } from '../types';
src/components/organisms/Form/Household/HouseholdDetails/FormField/GeographicLocation.tsx:import React, { useEffect } from 'react';
src/components/organisms/Form/Household/HouseholdDetails/FormField/GeographicLocation.tsx:import { SelectField } from '@/components/molecules/FieldSet';
src/components/organisms/Form/Household/HouseholdDetails/FormField/GeographicLocation.tsx:import { HouseholdDetailsData } from '../../types';
src/components/organisms/Form/Household/HouseholdDetails/FormField/GeographicLocation.tsx:import { useGeographicData } from '@/hooks/api/useGeographicData';
src/components/organisms/Form/Household/HouseholdDetails/FormField/HouseholdStatistics.tsx:import React from 'react';
src/components/organisms/Form/Household/HouseholdDetails/FormField/HouseholdStatistics.tsx:import { InputField } from '@/components/molecules/FieldSet';
src/components/organisms/Form/Household/HouseholdDetails/FormField/HouseholdStatistics.tsx:import { HouseholdDetailsData } from '../../types';
src/components/organisms/Form/Household/HouseholdDetails/FormField/AddressDetails.tsx:import React, { useEffect } from 'react';
src/components/organisms/Form/Household/HouseholdDetails/FormField/AddressDetails.tsx:import { InputField, SelectField } from '@/components/molecules/FieldSet';
src/components/organisms/Form/Household/HouseholdDetails/FormField/AddressDetails.tsx:import { HouseholdDetailsData } from '../../types';
src/components/organisms/Form/Household/HouseholdDetails/FormField/AddressDetails.tsx:import { useGeographicData } from '@/hooks/api/useGeographicData';
src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.tsx:import React from 'react';
src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.tsx:import { AddressDetails } from './FormField/AddressDetails';
src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.tsx:import { GeographicLocation } from './FormField/GeographicLocation';
src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.tsx:import { HouseholdStatistics } from './FormField/HouseholdStatistics';
src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.tsx:import { FormMode, HouseholdDetailsData } from '../types';
src/components/organisms/ProtectedRoute/ProtectedRoute.tsx:import React from 'react';
src/components/organisms/ProtectedRoute/ProtectedRoute.tsx:import { useRouter } from 'next/navigation';
src/components/organisms/ProtectedRoute/ProtectedRoute.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/organisms/ProtectedRoute/ProtectedRoute.tsx:import { Button } from '@/components/atoms';
src/components/organisms/ProtectedRoute/ProtectedRoute.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ProtectedRoute/ProtectedRoute.stories.tsx:import { fn } from 'storybook/test';
src/components/organisms/ProtectedRoute/ProtectedRoute.stories.tsx:import ProtectedRoute from './ProtectedRoute';
src/components/organisms/GeographicLocationStep/GeographicLocationStep.tsx:import React, { useState, useEffect } from 'react';
src/components/organisms/GeographicLocationStep/GeographicLocationStep.tsx:import { supabase } from '@/lib/supabase';
src/components/organisms/GeographicLocationStep/GeographicLocationStep.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/GeographicLocationStep/GeographicLocationStep.stories.tsx:import { GeographicLocationStep } from './GeographicLocationStep';
src/components/organisms/PopulationPyramid/PopulationPyramid.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/PopulationPyramid/PopulationPyramid.stories.tsx:import PopulationPyramid from './PopulationPyramid';
src/components/organisms/PopulationPyramid/PopulationPyramid.tsx:import { useState, useEffect } from 'react';
src/components/organisms/RbiSpecific/PhysicalCharacteristics/PhysicalCharacteristics.tsx:import { Textarea } from '../../../atoms';
src/components/organisms/RbiSpecific/PhysicalCharacteristics/PhysicalCharacteristics.tsx:import { FormGroup, InputField, SelectField } from '../../../molecules';
src/components/organisms/RbiSpecific/PhysicalCharacteristics/PhysicalCharacteristics.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/RbiSpecific/PhysicalCharacteristics/PhysicalCharacteristics.stories.tsx:import { useState } from 'react';
src/components/organisms/RbiSpecific/MotherMaidenName/MotherMaidenName.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/RbiSpecific/MotherMaidenName/MotherMaidenName.stories.tsx:import { useState } from 'react';
src/components/organisms/RbiSpecific/MotherMaidenName/MotherMaidenName.stories.tsx:import MotherMaidenName, { MotherInformation } from './MotherMaidenName';
src/components/organisms/RbiSpecific/MotherMaidenName/MotherMaidenName.tsx:import React, { useState } from 'react';
src/components/organisms/RbiSpecific/MotherMaidenName/MotherMaidenName.tsx:import { Checkbox, Button } from '../../../atoms';
src/components/organisms/RbiSpecific/MotherMaidenName/MotherMaidenName.tsx:import { FormGroup, InputField, SelectField } from '../../../molecules';
src/components/organisms/RbiSpecific/FamilyRelationshipSelector/FamilyRelationshipSelector.tsx:import React, { useState, useEffect } from 'react';
src/components/organisms/RbiSpecific/FamilyRelationshipSelector/FamilyRelationshipSelector.tsx:import { FormGroup, SelectField } from '../../../molecules';
src/components/organisms/RbiSpecific/FamilyRelationshipSelector/FamilyRelationshipSelector.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/RbiSpecific/FamilyRelationshipSelector/FamilyRelationshipSelector.stories.tsx:import { useState } from 'react';
src/components/organisms/RbiSpecific/FamilyRelationshipSelector/FamilyRelationshipSelector.stories.tsx:import FamilyRelationshipSelector from './FamilyRelationshipSelector';
src/components/organisms/RbiSpecific/HouseholdTypeSelector/HouseholdTypeSelector.tsx:import { Radio, RadioGroup } from '../../../atoms';
src/components/organisms/RbiSpecific/HouseholdTypeSelector/HouseholdTypeSelector.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/RbiSpecific/HouseholdTypeSelector/HouseholdTypeSelector.stories.tsx:import { useState } from 'react';
src/components/organisms/RbiSpecific/HouseholdTypeSelector/HouseholdTypeSelector.stories.tsx:import HouseholdTypeSelector from './HouseholdTypeSelector';
src/components/organisms/RbiSpecific/ResidentStatusSelector/ResidentStatusSelector.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/RbiSpecific/ResidentStatusSelector/ResidentStatusSelector.stories.tsx:import { useState } from 'react';
src/components/organisms/RbiSpecific/ResidentStatusSelector/ResidentStatusSelector.stories.tsx:import ResidentStatusSelector, { ResidentStatus } from './ResidentStatusSelector';
src/components/organisms/RbiSpecific/ResidentStatusSelector/ResidentStatusSelector.tsx:import { Radio, RadioGroup, Textarea } from '../../../atoms';
src/components/organisms/RbiSpecific/ResidentStatusSelector/ResidentStatusSelector.tsx:import { FormGroup, InputField } from '../../../molecules';
src/components/organisms/RbiSpecific/MigrantInformation/MigrantInformation.tsx:import React, { useState } from 'react';
src/components/organisms/RbiSpecific/MigrantInformation/MigrantInformation.tsx:import { Textarea, Radio, RadioGroup } from '../../../atoms';
src/components/organisms/RbiSpecific/MigrantInformation/MigrantInformation.tsx:import { FormGroup, InputField } from '../../../molecules';
src/components/organisms/RbiSpecific/MigrantInformation/MigrantInformation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/RbiSpecific/MigrantInformation/MigrantInformation.stories.tsx:import { useState } from 'react';
src/components/organisms/RbiSpecific/MigrantInformation/MigrantInformation.stories.tsx:import MigrantInformation, { MigrationInformation } from './MigrantInformation';
src/components/organisms/LoginForm/LoginForm.tsx:import React, { useState } from 'react';
src/components/organisms/LoginForm/LoginForm.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/organisms/LoginForm/LoginForm.tsx:import { InputField } from '@/components/molecules';
src/components/organisms/LoginForm/LoginForm.tsx:import { Button } from '@/components/atoms';
src/components/organisms/LoginForm/LoginForm.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/LoginForm/LoginForm.stories.tsx:import { fn } from 'storybook/test';
src/components/organisms/LoginForm/LoginForm.stories.tsx:import LoginForm from './LoginForm';
src/components/organisms/Navigation/Navigation.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Navigation/Navigation.stories.tsx:import { action } from 'storybook/actions';
src/components/organisms/Navigation/Navigation.stories.tsx:import Navigation, { NavigationItem } from './Navigation';
src/components/organisms/Navigation/Navigation.tsx:import React from 'react';
src/components/organisms/Navigation/Navigation.tsx:import Link from 'next/link';
src/components/organisms/Navigation/Navigation.tsx:import { usePathname } from 'next/navigation';
src/components/organisms/Navigation/Navigation.tsx:import Icon from '../../atoms/Icon/Icon';
src/components/organisms/DevLogin/DevLogin.tsx:import React, { useState, useEffect } from 'react';
src/components/organisms/DevLogin/DevLogin.tsx:import { supabase } from '@/lib/supabase';
src/components/organisms/DevLogin/DevLogin.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/DevLogin/DevLogin.stories.tsx:import { fn, within, expect } from 'storybook/test';
src/components/organisms/DevLogin/DevLogin.stories.tsx:import DevLogin from './DevLogin';
src/components/organisms/CreateHouseholdModal/HouseholdAddressForm.tsx:import React from 'react';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.tsx:import React, { useState, useEffect } from 'react';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.tsx:import { supabase } from '@/lib/supabase';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.tsx:import { Button } from '../../atoms';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.tsx:import AccessibleModal from '../../molecules/AccessibleModal';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.tsx:import { SelectField } from '../../molecules/FieldSet/SelectField';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.tsx:import { logger, logError } from '@/lib/logging/secure-logger';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.stories.tsx:import { action } from 'storybook/actions';
src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.stories.tsx:import CreateHouseholdModal from './CreateHouseholdModal';
src/components/organisms/CreateHouseholdModal/HouseholdLocationInfo.tsx:import React from 'react';
src/components/organisms/Table/Table.tsx:import React from 'react';
src/components/organisms/Table/Table.tsx:import Image from 'next/image';
src/components/organisms/Table/Table.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/Table/Table.stories.tsx:import { action } from 'storybook/actions';
src/components/organisms/Table/Table.stories.tsx:import { Table, TableBody, TableRow, TableCell, TableControls } from './Table';
src/components/organisms/HouseholdDetailContent/HouseholdDetailContent.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/HouseholdDetailContent/HouseholdDetailContent.stories.tsx:import HouseholdDetailContent from './HouseholdDetailContent';
src/components/organisms/HouseholdDetailContent/HouseholdDetailContent.tsx:import { useState, useEffect } from 'react';
src/components/organisms/HouseholdDetailContent/HouseholdDetailContent.tsx:import { useParams, useRouter } from 'next/navigation';
src/components/organisms/HouseholdDetailContent/HouseholdDetailContent.tsx:import { Button } from '@/components/atoms';
src/components/organisms/HouseholdDetailContent/HouseholdDetailContent.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/organisms/ResidentDetailSections/ContactInfoCard.tsx:import React from 'react';
src/components/organisms/ResidentDetailSections/HealthPhysicalCard.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ResidentDetailSections/HealthPhysicalCard.stories.tsx:import HealthPhysicalCard from './HealthPhysicalCard';
src/components/organisms/ResidentDetailSections/AdminInfoCard.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ResidentDetailSections/AdminInfoCard.stories.tsx:import AdminInfoCard from './AdminInfoCard';
src/components/organisms/ResidentDetailSections/AdminInfoCard.tsx:import React from 'react';
src/components/organisms/ResidentDetailSections/SectoralInfoCard.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ResidentDetailSections/SectoralInfoCard.stories.tsx:import SectoralInfoCard from './SectoralInfoCard';
src/components/organisms/ResidentDetailSections/PersonalInfoCard.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ResidentDetailSections/PersonalInfoCard.stories.tsx:import PersonalInfoCard from './PersonalInfoCard';
src/components/organisms/ResidentDetailSections/SectoralInfoCard.tsx:import React from 'react';
src/components/organisms/ResidentDetailSections/ContactInfoCard.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ResidentDetailSections/ContactInfoCard.stories.tsx:import ContactInfoCard from './ContactInfoCard';
src/components/organisms/ResidentDetailSections/PersonalInfoCard.tsx:import React from 'react';
src/components/organisms/ResidentDetailSections/HealthPhysicalCard.tsx:import React from 'react';
src/components/organisms/ResidentDetailSections/FamilyVoterCard.tsx:import React from 'react';
src/components/organisms/ResidentDetailSections/MigrationInfoCard.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ResidentDetailSections/MigrationInfoCard.stories.tsx:import MigrationInfoCard from './MigrationInfoCard';
src/components/organisms/ResidentDetailSections/MigrationInfoCard.tsx:import React from 'react';
src/components/organisms/ResidentDetailSections/FamilyVoterCard.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ResidentDetailSections/FamilyVoterCard.stories.tsx:import FamilyVoterCard from './FamilyVoterCard';
src/components/organisms/UserProfile/UserProfile.tsx:import React, { useState } from 'react';
src/components/organisms/UserProfile/UserProfile.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/organisms/UserProfile/UserProfile.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/UserProfile/UserProfile.stories.tsx:import { fn } from 'storybook/test';
src/components/organisms/UserProfile/UserProfile.stories.tsx:import UserProfile from './UserProfile';
src/components/organisms/SectoralInfo/SectoralInfo.tsx:import React, { useEffect, useState } from 'react';
src/components/organisms/SectoralInfo/SectoralInfo.tsx:import { Checkbox } from '../../atoms';
src/components/organisms/SectoralInfo/SectoralInfo.tsx:import { FormGroup } from '../../molecules';
src/components/organisms/SectoralInfo/SectoralInfo.tsx:import { isIndigenousPeople } from '@/lib/business-rules/sectoral-classification';
src/components/organisms/SectoralInfo/SectoralInfo.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/SectoralInfo/SectoralInfo.stories.tsx:import { action } from 'storybook/actions';
src/components/organisms/SectoralInfo/SectoralInfo.stories.tsx:import SectoralInfo, { SectoralInformation, SectoralContext } from './SectoralInfo';
src/components/organisms/DataTable/DataTable.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/DataTable/DataTable.stories.tsx:import { action } from 'storybook/actions';
src/components/organisms/DataTable/DataTable.stories.tsx:import DataTable from './DataTable';
src/components/organisms/DataTable/DataTable.tsx:import React, { useState, useMemo } from 'react';
src/components/organisms/DataTable/DataTable.tsx:import { Button } from '@/components/atoms';
src/components/organisms/DataTable/DataTable.tsx:import Link from 'next/link';
src/components/organisms/ResidentFormSections/CulturalInfoSection.tsx:import React from 'react';
src/components/organisms/ResidentFormSections/CulturalInfoSection.tsx:import { FieldSet, FormSection } from '@/components/molecules';
src/components/organisms/ResidentFormSections/CulturalInfoSection.tsx:import { Input } from '@/components/atoms';
src/components/organisms/ResidentFormSections/CulturalInfoSection.tsx:import { ResidentEditFormData } from '@/lib/validation/resident-schema';
src/components/organisms/ResidentFormSections/CulturalInfoSection.tsx:import { RELIGION_OPTIONS, ETHNICITY_OPTIONS } from '@/lib/constants/resident-enums';
src/components/organisms/ResidentFormSections/PersonalInfoSection.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ResidentFormSections/PersonalInfoSection.stories.tsx:import PersonalInfoSection from './PersonalInfoSection';
src/components/organisms/ResidentFormSections/VotingInfoSection.tsx:import React from 'react';
src/components/organisms/ResidentFormSections/VotingInfoSection.tsx:import { FieldSet, FormSection } from '@/components/molecules';
src/components/organisms/ResidentFormSections/VotingInfoSection.tsx:import { Input } from '@/components/atoms';
src/components/organisms/ResidentFormSections/VotingInfoSection.tsx:import { ResidentEditFormData } from '@/lib/validation/resident-schema';
src/components/organisms/ResidentFormSections/AddressInfoSection.tsx:import React from 'react';
src/components/organisms/ResidentFormSections/AddressInfoSection.tsx:import { FieldSet, FormSection } from '@/components/molecules';
src/components/organisms/ResidentFormSections/AddressInfoSection.tsx:import { Input } from '@/components/atoms';
src/components/organisms/ResidentFormSections/AddressInfoSection.tsx:import { ResidentEditFormData } from '@/lib/validation/resident-schema';
src/components/organisms/ResidentFormSections/PhysicalInfoSection.tsx:import React from 'react';
src/components/organisms/ResidentFormSections/PhysicalInfoSection.tsx:import { FieldSet, FormSection } from '@/components/molecules';
src/components/organisms/ResidentFormSections/PhysicalInfoSection.tsx:import { Input } from '@/components/atoms';
src/components/organisms/ResidentFormSections/PhysicalInfoSection.tsx:import { ResidentEditFormData } from '@/lib/validation/resident-schema';
src/components/organisms/ResidentFormSections/PhysicalInfoSection.tsx:import { BLOOD_TYPE_OPTIONS, RELIGION_OPTIONS, ETHNICITY_OPTIONS, CITIZENSHIP_OPTIONS } from '@/lib/constants/resident-enums';
src/components/organisms/ResidentFormSections/BirthPlaceSection.tsx:import React from 'react';
src/components/organisms/ResidentFormSections/BirthPlaceSection.tsx:import { InputField as FieldSet, FormSection, SelectField } from '@/components/molecules';
src/components/organisms/ResidentFormSections/BirthPlaceSection.tsx:import { Input } from '@/components/atoms';
src/components/organisms/ResidentFormSections/BirthPlaceSection.tsx:import { ResidentEditFormData } from '@/lib/validation/resident-schema';
src/components/organisms/ResidentFormSections/BirthPlaceSection.tsx:import { useOptimizedPsgcSearch } from '@/hooks/search/useOptimizedPsgcSearch';
src/components/organisms/ResidentFormSections/MotherMaidenNameSection.tsx:import React from 'react';
src/components/organisms/ResidentFormSections/MotherMaidenNameSection.tsx:import { FieldSet, FormSection } from '@/components/molecules';
src/components/organisms/ResidentFormSections/MotherMaidenNameSection.tsx:import { Input } from '@/components/atoms';
src/components/organisms/ResidentFormSections/MotherMaidenNameSection.tsx:import { ResidentEditFormData } from '@/lib/validation/resident-schema';
src/components/organisms/ResidentFormSections/PersonalInfoSection.tsx:import React from 'react';
src/components/organisms/ResidentFormSections/PersonalInfoSection.tsx:import { InputField, SelectField, FormSection } from '@/components/molecules';
src/components/organisms/ResidentFormSections/PersonalInfoSection.tsx:import { ResidentEditFormData } from '@/lib/validation/resident-schema';
src/components/organisms/ResidentFormSections/AddressInfoSection.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/ResidentFormSections/AddressInfoSection.stories.tsx:import AddressInfoSection from './AddressInfoSection';
src/components/organisms/ResidentFormSections/SectoralInfoSection.tsx:import React from 'react';
src/components/organisms/ResidentFormSections/SectoralInfoSection.tsx:import { FormSection } from '@/components/molecules';
src/components/organisms/ResidentFormSections/SectoralInfoSection.tsx:import { ResidentEditFormData } from '@/lib/validation/resident-schema';
src/components/organisms/ResidentFormSections/ContactInfoSection.tsx:import React from 'react';
src/components/organisms/ResidentFormSections/ContactInfoSection.tsx:import { FieldSet, FormSection } from '@/components/molecules';
src/components/organisms/ResidentFormSections/ContactInfoSection.tsx:import { Input } from '@/components/atoms';
src/components/organisms/ResidentFormSections/ContactInfoSection.tsx:import { ResidentEditFormData } from '@/lib/validation/resident-schema';
src/components/organisms/HouseholdSelector/HouseholdSelector.tsx:import React, { useState, useEffect, useCallback } from 'react';
src/components/organisms/HouseholdSelector/HouseholdSelector.tsx:import { supabase } from '@/lib/supabase';
src/components/organisms/HouseholdSelector/HouseholdSelector.tsx:import { useAuth } from '@/contexts/AuthContext';
src/components/organisms/HouseholdSelector/HouseholdSelector.tsx:import { CreateHouseholdModal } from '../CreateHouseholdModal';
src/components/organisms/HouseholdSelector/HouseholdSelector.tsx:import { logger, logError } from '@/lib/logging/secure-logger';
src/components/organisms/HouseholdSelector/HouseholdSelector.stories.tsx:import type { Meta, StoryObj } from '@storybook/react';
src/components/organisms/HouseholdSelector/HouseholdSelector.stories.tsx:import { action } from 'storybook/actions';
src/components/organisms/HouseholdSelector/HouseholdSelector.stories.tsx:import HouseholdSelector from './HouseholdSelector';
src/__tests__/test-utils.tsx:import React, { ReactElement } from 'react';
src/__tests__/test-utils.tsx:import { render, RenderOptions, RenderResult } from '@testing-library/react';
src/__tests__/test-utils.tsx:import userEvent from '@testing-library/user-event';
src/__tests__/test-utils.tsx:import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
src/__tests__/setup.tsx:import { beforeEach, afterEach, vi } from 'vitest';
src/__tests__/setup.tsx:import { cleanup } from '@testing-library/react';
src/__tests__/accessibility.test.ts:import React from 'react';
src/__tests__/accessibility.test.ts:import { render } from '@testing-library/react';
src/hooks/workflows/useHouseholdCreationWorkflow.ts:import { useCallback } from 'react';
src/hooks/workflows/useHouseholdCreationWorkflow.ts:import { logger } from '@/lib/logging/secure-logger';
src/hooks/workflows/useHouseholdCreationWorkflow.ts:import { useHouseholdForm } from '../utilities/useHouseholdForm';
src/hooks/workflows/useHouseholdCreationWorkflow.ts:import { useHouseholdCodeGeneration } from '../utilities/useHouseholdCodeGeneration';
src/hooks/workflows/useHouseholdCreationWorkflow.ts:import { useAddressResolution } from '../utilities/useAddressResolution';
src/hooks/workflows/useHouseholdCreationWorkflow.ts:import { useHouseholdCreationOperation } from './useHouseholdCreationOperation';
src/hooks/workflows/useHouseholdCreationOperation.ts:import { useState, useCallback } from 'react';
src/hooks/workflows/useHouseholdCreationOperation.ts:import { supabase } from '@/lib/supabase';
src/hooks/workflows/useHouseholdCreationOperation.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/workflows/useHouseholdCreationOperation.ts:import { logger, logError } from '@/lib/logging/secure-logger';
src/hooks/workflows/useHouseholdCreationOperation.ts:import type { HouseholdFormData } from '../utilities/useHouseholdForm';
src/hooks/workflows/useResidentFormState.ts:import { useState, useCallback, useEffect } from 'react';
src/hooks/workflows/useResidentFormState.ts:import type { ResidentFormData as ResidentEditFormData } from '@/lib/types/resident';
src/hooks/workflows/useHouseholdCreationService.ts:import { useState, useCallback } from 'react';
src/hooks/workflows/useHouseholdCreationService.ts:import { householdService, HouseholdFormData } from '@/lib/services/household.service';
src/hooks/workflows/useHouseholdCreationService.ts:import { useCSRFToken } from '@/lib/auth';
src/hooks/workflows/useHouseholdCreationService.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/workflows/useResidentEditWorkflow.ts:import { useCallback } from 'react';
src/hooks/workflows/useResidentEditWorkflow.ts:import type { ResidentFormData as ResidentEditFormData } from '@/lib/types/resident';
src/hooks/workflows/useResidentEditWorkflow.ts:import { useResidentFormState, UseResidentFormStateOptions } from './useResidentFormState';
src/hooks/workflows/useResidentEditWorkflow.ts:import { useResidentValidationErrors } from '../validation/useResidentValidationErrors';
src/hooks/workflows/useResidentEditWorkflow.ts:import { useResidentSubmission, UseResidentSubmissionOptions } from '../utilities/useResidentSubmission';
src/hooks/workflows/useHouseholdOperationsWorkflow.ts:import { useCallback } from 'react';
src/hooks/workflows/useHouseholdOperationsWorkflow.ts:import { HouseholdFormData } from '@/lib/services/household.service';
src/hooks/workflows/useHouseholdOperationsWorkflow.ts:import { useHouseholdCrud, UseHouseholdCrudOptions } from '../crud/useHouseholdCrud';
src/hooks/workflows/useHouseholdOperationsWorkflow.ts:import { useHouseholdValidation } from '../validation/useOptimizedHouseholdValidation';
src/hooks/workflows/useHouseholdOperationsWorkflow.ts:import { useHouseholdCreationService, UseHouseholdCreationServiceOptions } from './useHouseholdCreationService';
src/hooks/search/useOptimizedPsgcSearch.ts:import { useCallback, useState } from 'react';
src/hooks/search/useOptimizedPsgcSearch.ts:import { useGenericSearch } from './useGenericSearch';
src/hooks/search/useOptimizedPsgcSearch.ts:import { useSearchCache, searchFormatters } from '@/lib/utilities';
src/hooks/search/useOptimizedHouseholdSearch.ts:import { useCallback } from 'react';
src/hooks/search/useOptimizedHouseholdSearch.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/search/useOptimizedHouseholdSearch.ts:import { useGenericSearch } from './useGenericSearch';
src/hooks/search/useOptimizedHouseholdSearch.ts:import { searchFormatters } from '@/lib/utilities';
src/hooks/search/useGenericSearch.ts:import { useState, useEffect, useMemo, useCallback } from 'react';
src/hooks/search/useGenericSearch.ts:import { useDebounce } from '../utilities/useDebounce';
src/hooks/search/useGenericPaginatedSearch.ts:import { useState, useEffect } from 'react';
src/hooks/search/useGenericPaginatedSearch.ts:import { useDebounce } from '../utilities/useDebounce';
src/hooks/search/useFormSearches.ts:import { useState, useCallback } from 'react';
src/hooks/search/useFormSearches.ts:import { HouseholdOption, PsocOption, PsgcOption } from '@/lib/types/resident';
src/hooks/search/useFormSearches.ts:import { formatPsocOption, formatPsgcOption } from '@/lib/mappers/residentMapper';
src/hooks/search/useFormSearches.ts:import { searchHouseholdsCached } from '@/lib/optimizers/household-fetcher';
src/hooks/dashboard/useDashboardCalculations.ts:import { useMemo } from 'react';
src/hooks/dashboard/useDashboardCalculations.ts:import type { AgeGroup } from './useDashboardApi';
src/hooks/dashboard/useDashboard.ts:import { useMemo } from 'react';
src/hooks/dashboard/useDashboardApi.ts:import { useQuery, useQueryClient } from '@tanstack/react-query';
src/hooks/dashboard/useDashboardApi.ts:import { supabase } from '@/lib/supabase';
src/hooks/dashboard/useDashboardApi.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/dashboard/useDashboardApi.ts:import { useAsyncErrorBoundary } from '../utilities/useAsyncErrorBoundary';
src/hooks/dashboard/useDashboardApi.ts:import { useRetryLogic, RetryStrategies } from '../utilities/useRetryLogic';
src/hooks/utilities/useResidentSubmission.ts:import { useState, useCallback } from 'react';
src/hooks/utilities/useResidentSubmission.ts:import { useQueryClient } from '@tanstack/react-query';
src/hooks/utilities/useResidentSubmission.ts:import { ValidationResult } from '@/lib/validation';
src/hooks/utilities/useResidentSubmission.ts:import type { ResidentFormData as ResidentEditFormData } from '@/lib/types/resident';
src/hooks/utilities/useFormSubmission.ts:import { useState, useCallback } from 'react';
src/hooks/utilities/useFormSubmission.ts:import type { ResidentFormData } from '@/lib/types/resident';
src/hooks/utilities/useFormSubmission.ts:import { useResidentFormValidation } from '../validation/useOptimizedResidentValidation';
src/hooks/utilities/useFormSubmission.ts:import { createFormSubmitHandler } from '@/lib/forms';
src/hooks/utilities/useSelector.ts:import { useState, useEffect, useRef, useCallback } from 'react';
src/hooks/utilities/useSelector.ts:import { logger } from '@/lib/logging/secure-logger';
src/hooks/utilities/useMigrationInformation.ts:import { useState, useCallback, useEffect } from 'react';
src/hooks/utilities/useMigrationInformation.ts:import { usePsgcSearch, PsgcSearchResult } from '../search/useOptimizedPsgcSearch';
src/hooks/utilities/useAsyncUtils.ts:import { useCallback, useRef, useEffect } from 'react';
src/hooks/utilities/useAsyncUtils.ts:import { debounce, throttle, retry } from '@/lib/utilities/async-utils';
src/hooks/utilities/useHouseholdCodeGeneration.ts:import { useCallback } from 'react';
src/hooks/utilities/useHouseholdCodeGeneration.ts:import { supabase } from '@/lib/supabase';
src/hooks/utilities/useHouseholdCodeGeneration.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/utilities/useHouseholdCodeGeneration.ts:import { logger } from '@/lib/logging/secure-logger';
src/hooks/utilities/useLogger.ts:import { useCallback, useRef } from 'react';
src/hooks/utilities/useConnectionStatus.ts:import { useState, useEffect } from 'react';
src/hooks/utilities/useConnectionStatus.ts:import { syncQueue } from '@/lib/storage';
src/hooks/utilities/useAsyncErrorBoundary.ts:import { useCallback, useState } from 'react';
src/hooks/utilities/useAsyncErrorBoundary.ts:import { useRetryLogic, RetryStrategies } from './useRetryLogic';
src/hooks/utilities/useHouseholdForm.ts:import { useState, useCallback } from 'react';
src/hooks/utilities/usePerformanceMonitor.ts:import { useRef, useEffect, useCallback } from 'react';
src/hooks/utilities/usePerformanceMonitor.ts:import { useLogger } from './useLogger';
src/hooks/utilities/useLastVisitedPage.ts:import { useEffect } from 'react';
src/hooks/utilities/useLastVisitedPage.ts:import { usePathname } from 'next/navigation';
src/hooks/utilities/useFieldErrorHandler.ts:import { useCallback } from 'react';
src/hooks/utilities/useFieldErrorHandler.ts:import { logError } from '@/lib/error-handling';
src/hooks/utilities/createValidationHook.ts:import { useState, useCallback, useMemo } from 'react';
src/hooks/utilities/createValidationHook.ts:import { z, ZodSchema, ZodError } from 'zod';
src/hooks/utilities/createValidationHook.ts:import { useAsyncErrorBoundary } from '../utilities/useAsyncErrorBoundary';
src/hooks/utilities/createValidationHook.ts:import { useLogger } from '../utilities/useLogger';
src/hooks/utilities/createValidationHook.ts:import { ZodValidationResult } from '@/lib/validation/types';
src/hooks/utilities/useResidentCrossFieldValidation.ts:import { useMemo } from 'react';
src/hooks/utilities/useResidentCrossFieldValidation.ts:import type { ResidentFormData } from '@/lib/types/resident';
src/hooks/utilities/useDebounce.ts:import { useState, useEffect } from 'react';
src/hooks/utilities/useUserBarangay.ts:import { useState, useEffect } from 'react';
src/hooks/utilities/useUserBarangay.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/utilities/useUserBarangay.ts:import { getCompleteAddress, type AddressHierarchy } from '@/lib/database';
src/hooks/utilities/useResidentAsyncValidation.ts:import { useState, useCallback, useRef } from 'react';
src/hooks/utilities/useResidentAsyncValidation.ts:import { asyncValidationUtils } from '@/lib/utilities';
src/hooks/utilities/useResidentAsyncValidation.ts:import { useAsyncErrorBoundary } from './useAsyncErrorBoundary';
src/hooks/utilities/usePersistedState.ts:import { useState, useEffect } from 'react';
src/hooks/utilities/usePreloadOnHover.ts:import { preloadComponents } from '@/components/lazy/LazyComponents';
src/hooks/utilities/useAddressResolution.ts:import { useState, useCallback, useEffect } from 'react';
src/hooks/utilities/useAddressResolution.ts:import { supabase } from '@/lib/supabase';
src/hooks/utilities/useAddressResolution.ts:import { logger } from '@/lib/logging/secure-logger';
src/hooks/utilities/useAddressResolution.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/utilities/useRetryLogic.ts:import { useState, useCallback, useRef } from 'react';
src/hooks/utilities/useRetryLogic.ts:import { useLogger } from './useLogger';
src/hooks/__tests__/useAsyncErrorBoundary.test.ts:import { renderHook, act } from '@testing-library/react';
src/hooks/__tests__/useAsyncErrorBoundary.test.ts:import { useAsyncErrorBoundary } from '../utilities/useAsyncErrorBoundary';
src/hooks/__tests__/useOptimizedResidentValidation.test.ts:import { renderHook, act } from '@testing-library/react';
src/hooks/__tests__/useOptimizedResidentValidation.test.ts:import { useOptimizedResidentValidation } from '../validation/useOptimizedResidentValidation';
src/hooks/crud/useResidents.ts:import { useQuery, useQueryClient } from '@tanstack/react-query';
src/hooks/crud/useResidents.ts:import { supabase } from '@/lib/supabase';
src/hooks/crud/useResidents.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/crud/useHouseholdCrud.ts:import { useState, useCallback } from 'react';
src/hooks/crud/useHouseholdCrud.ts:import { householdService, HouseholdFormData } from '@/lib/services/household.service';
src/hooks/crud/useHouseholds.ts:import { useQuery, useQueryClient } from '@tanstack/react-query';
src/hooks/crud/useHouseholds.ts:import { supabase } from '@/lib/supabase';
src/hooks/crud/useHouseholds.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/crud/useResidentOperations.ts:import { useState, useCallback } from 'react';
src/hooks/crud/useResidentOperations.ts:import { residentService, ResidentFormData } from '@/lib/services/resident.service';
src/hooks/crud/useResidentOperations.ts:import { useCSRFToken } from '@/lib/auth';
src/hooks/crud/useResidentOperations.ts:import { useAuth } from '@/contexts/AuthContext';
src/hooks/command-menu/useCommandMenuActions.ts:import { useCallback } from 'react';
src/hooks/command-menu/useCommandMenuActions.ts:import { useRouter } from 'next/navigation';
src/hooks/command-menu/useCommandMenuActions.ts:import { toast } from 'react-hot-toast';
src/hooks/command-menu/useCommandMenuActions.ts:import type { CommandMenuItemType as CommandMenuItem } from '@/components';
src/hooks/command-menu/useCommandMenuActions.ts:import { trackNavigation, trackAction } from '@/lib/storage';
src/hooks/command-menu/useCommandMenuActions.ts:import { useAsyncErrorBoundary } from '../utilities/useAsyncErrorBoundary';
src/hooks/command-menu/useCommandMenuRecents.ts:import { useState, useCallback } from 'react';
src/hooks/command-menu/useCommandMenuRecents.ts:import { toast } from 'react-hot-toast';
src/hooks/command-menu/useCommandMenuRecents.ts:import type { CommandMenuItemType as CommandMenuItem } from '@/components';
src/hooks/command-menu/useCommandMenuRecents.ts:import { getRecentApiItems as getRecentItems, clearRecentApiItems as clearRecentItems } from '@/lib/command-menu';
src/hooks/command-menu/useCommandMenuRecents.ts:import { useAsyncErrorBoundary } from '../utilities/useAsyncErrorBoundary';
src/hooks/command-menu/useCommandMenuWithApi.ts:import { useState, useEffect, useCallback, useMemo } from 'react';
src/hooks/command-menu/useCommandMenuWithApi.ts:import type { CommandMenuItemType as CommandMenuItem } from '@/components';
src/hooks/command-menu/useCommandMenuWithApi.ts:import { getCommandMenuItems } from '@/lib/command-menu';
src/hooks/command-menu/useCommandMenuWithApi.ts:import { useCommandMenu } from './useCommandMenu';
src/hooks/command-menu/useCommandMenuSearch.ts:import { useState, useEffect, useCallback } from 'react';
src/hooks/command-menu/useCommandMenuSearch.ts:import type { CommandMenuItemType as CommandMenuItem } from '@/components';
src/hooks/command-menu/useCommandMenuSearch.ts:import { searchData } from '@/lib/command-menu';
src/hooks/command-menu/useCommandMenuSearch.ts:import { trackSearch } from '@/lib/storage';
src/hooks/command-menu/useCommandMenuSearch.ts:import { trackCommandMenuSearch, trackCommandMenuError } from '@/lib/command-menu';
src/hooks/command-menu/useCommandMenuSearch.ts:import { useAsyncErrorBoundary } from '../utilities/useAsyncErrorBoundary';
src/hooks/command-menu/useCommandMenu.ts:import { useState, useEffect, useCallback, useMemo } from 'react';
src/hooks/command-menu/useCommandMenu.ts:import { useRouter } from 'next/navigation';
src/hooks/command-menu/useCommandMenu.ts:import type { CommandMenuItemType as CommandMenuItem } from '@/components';
src/hooks/api/useGeographicData.ts:import { useState, useEffect, useCallback } from 'react';
src/hooks/api/useGeographicData.ts:import { supabase } from '@/lib/supabase';
src/hooks/accessibility/useFieldAccessibility.ts:import { useMemo } from 'react';
src/hooks/accessibility/useFieldAccessibility.ts:import { generateId } from '@/lib';
src/hooks/validation/useResidentValidationProgress.ts:import { useMemo } from 'react';
src/hooks/validation/useResidentValidationProgress.ts:import { REQUIRED_FIELDS, getRequiredFieldsForSection } from '@/lib/validation/fieldLevelSchemas';
src/hooks/validation/useResidentValidationProgress.ts:import { CRITICAL_VALIDATION_FIELDS } from '@/lib/constants/resident-form-defaults';
src/hooks/validation/useOptimizedHouseholdValidation.ts:import { useCallback } from 'react';
src/hooks/validation/useOptimizedHouseholdValidation.ts:import { householdService, HouseholdFormData } from '@/lib/services/household.service';
src/hooks/validation/useResidentValidationErrors.ts:import { useState, useCallback } from 'react';
src/hooks/validation/useResidentValidationErrors.ts:import { validateResidentData, ValidationResult } from '@/lib/validation';
src/hooks/validation/useResidentValidationErrors.ts:import type { ResidentFormData as ResidentEditFormData } from '@/lib/types/resident';
src/hooks/validation/useResidentValidation.ts:import { z } from 'zod';
src/hooks/validation/useResidentValidation.ts:import { createValidationHook } from '../utilities/createValidationHook';
src/hooks/validation/useOptimizedResidentValidation.ts:import { useCallback } from 'react';
src/hooks/validation/useOptimizedResidentValidation.ts:import type { ResidentFormData } from '@/lib/types/resident';
src/hooks/validation/useOptimizedResidentValidation.ts:import { REQUIRED_FIELDS } from '@/lib/validation/fieldLevelSchemas';
src/hooks/validation/useGenericValidation.ts:import { useCallback } from 'react';
src/hooks/validation/useResidentValidationCore.ts:import { useCallback, useMemo, useRef, useEffect, useState } from 'react';
src/hooks/validation/useResidentValidationCore.ts:import type { ResidentFormData } from '@/lib/types/resident';
src/hooks/validation/useResidentValidationCore.ts:import { ResidentFormSchema } from '@/lib/validation';
src/hooks/validation/useResidentValidationCore.ts:import { VALIDATION_DEBOUNCE_MS } from '@/lib/constants/resident-form-defaults';
src/hooks/validation/useResidentValidationCore.ts:import { useResidentCrossFieldValidation } from '../utilities/useResidentCrossFieldValidation';
src/hooks/validation/useResidentValidationCore.ts:import { useResidentAsyncValidation } from '../utilities/useResidentAsyncValidation';
src/hooks/validation/useResidentValidationCore.ts:import { useResidentValidationProgress } from './useResidentValidationProgress';
src/lib/api-responses.ts:import { NextResponse, NextRequest } from 'next/server';
src/lib/api-responses.ts:import { auditError, auditSecurityViolation, AuditEventType } from './api-audit';
src/lib/api-responses.ts:import { sanitizeSearchInput } from './api-validation';
src/lib/api-responses.ts:import { logger } from "./logging/secure-logger";
src/lib/ui/lazy-components.tsx:import React, { lazy, Suspense, ComponentType, ReactNode } from 'react';
src/lib/ui/lazy-components.tsx:import { ErrorBoundary } from '@/providers/ErrorBoundary';
src/lib/ui/accessibility.ts:import { useEffect, useRef, useCallback } from 'react';
src/lib/ui/lazy-components-alt.tsx:import React, { lazy, Suspense, ComponentType, ReactNode } from 'react';
src/lib/ui/lazy-components-alt.tsx:import { ErrorBoundary } from '@/providers/ErrorBoundary';
src/lib/database/database-utils.ts:import { supabase } from '../supabase';
src/lib/database/query-utils.ts:import { supabase } from '@/lib/supabase';
src/lib/database/query-utils.ts:import { logError } from '@/lib/logging/secure-logger';
src/lib/error-handling/error-utils.ts:import { ErrorSeverity, ErrorCode } from './error-types';
src/lib/error-handling/error-utils.ts:import { retry } from '../utilities/async-utils';
src/lib/error-handling/error-utils.ts:import { generateId } from '../utilities/id-generators';
src/lib/error-handling/error-types.ts:import type { ReactNode } from 'react';
src/lib/error-handling/ErrorBoundaries.tsx:import React from 'react';
src/lib/error-handling/ErrorBoundaries.tsx:import { logError, errorUtils, getErrorMessage } from './error-utils';
src/lib/types/resident-listing.ts:import { Resident } from './resident-detail';
src/lib/types/forms.ts:import { ReactNode } from 'react';
src/lib/types/index.ts:import * as ResidentTypes from './resident';
src/lib/forms/field-logic.ts:import type { FormMode } from '../types/forms';
src/lib/forms/form-handlers.ts:import React from 'react';
src/lib/forms/form-handlers.ts:import { logError } from '../error-handling/error-utils';
src/lib/business-rules/sectoral-classification.ts:import { SectoralInformation, SectoralContext } from '@/lib/types/resident';
src/lib/api-auth.ts:import { createClient } from '@supabase/supabase-js';
src/lib/api-auth.ts:import { NextRequest } from 'next/server';
src/lib/api-auth.ts:import { Role, ROLE_PERMISSIONS, ErrorCode, RequestContext } from './api-types';
src/lib/api-auth.ts:import { v4 as uuidv4 } from 'uuid';
src/lib/api-auth.ts:import { logger } from "./logging/secure-logger";
src/lib/api-auth.ts:import { AuthUserProfile } from '@/lib/types/database';
src/lib/api-audit.ts:import { createClient } from '@supabase/supabase-js';
src/lib/api-audit.ts:import { RequestContext, ErrorCode } from './api-types';
src/lib/api-audit.ts:import { logger } from "./logging/secure-logger";
src/lib/security/crypto.ts:import bcrypt from 'bcryptjs';
src/lib/security/file-security.ts:import { createHash } from 'crypto';
src/lib/security/threat-detection.ts:import { logger } from '../logging/secure-logger';
src/lib/security/threat-detection.ts:import { storeThreatDetectionEvent, ThreatDetectionEvent } from './audit-storage';
src/lib/security/rate-limit.ts:import { logger } from '../logging/secure-logger';
src/lib/security/rate-limit.ts:import { ErrorCode } from '../api/types';
src/lib/security/audit-storage.ts:import { createClient } from '@supabase/supabase-js';
src/lib/security/audit-storage.ts:import { logger } from '../logging/secure-logger';
src/lib/security/audit-storage.ts:import { ErrorCode as ApiErrorCode } from '../api/types';
src/lib/auth/auth-helpers.ts:import { supabase } from '../supabase/supabase';
src/lib/auth/auth-helpers.ts:import { createLogger } from '../environment/environmentUtils';
src/lib/auth/auth-helpers.ts:import type { User, Session, AuthError } from '@supabase/supabase-js';
src/lib/auth/csrf.ts:import { randomBytes, createHash, timingSafeEqual } from 'crypto';
src/lib/auth/auth.ts:import { supabase } from '../supabase';
src/lib/auth/auth.ts:import { createLogger } from '../environment';
src/lib/auth/auth.ts:import type { User, Session, AuthError } from '@supabase/supabase-js';
src/lib/auth/csrf-utils.ts:import { randomBytes, createHash, timingSafeEqual } from 'crypto';
src/lib/constants/resident-form-defaults.ts:import type { ResidentFormData } from '@/lib/types/resident';
src/lib/utils.ts:import { clsx, type ClassValue } from 'clsx';
src/lib/utils.ts:import { twMerge } from 'tailwind-merge';
src/lib/repositories/resident-repository.ts:import { BaseRepository, type QueryOptions, type RepositoryResult } from './base-repository';
src/lib/repositories/resident-repository.ts:import { validateResidentData } from '../validation/schemas';
src/lib/repositories/resident-repository.ts:import type { ValidationContext } from '../validation/types';
src/lib/repositories/user-repository.ts:import { BaseRepository, type QueryOptions, type RepositoryResult } from './base-repository';
src/lib/repositories/user-repository.ts:import { validateUserData } from '../validation/schemas';
src/lib/repositories/user-repository.ts:import type { ValidationContext } from '../validation/types';
src/lib/repositories/household-repository.ts:import { BaseRepository, type QueryOptions, type RepositoryResult } from './base-repository';
src/lib/repositories/household-repository.ts:import { validateHouseholdData } from '../validation/schemas';
src/lib/repositories/household-repository.ts:import type { ValidationContext } from '../validation/types';
src/lib/repositories/index.ts:import { ResidentRepository } from './resident-repository';
src/lib/repositories/index.ts:import { HouseholdRepository } from './household-repository';
src/lib/repositories/index.ts:import { UserRepository } from './user-repository';
src/lib/repositories/base-repository.ts:import { createClient, SupabaseClient } from '@supabase/supabase-js';
src/lib/repositories/base-repository.ts:import { logger } from '../logging/secure-logger';
src/lib/repositories/base-repository.ts:import { storeSecurityAuditLog } from '../security/audit-storage';
src/lib/repositories/base-repository.ts:import type { ValidationContext } from '../validation/types';
src/lib/api-validation.ts:import { z } from 'zod';
src/lib/api-validation.ts:import { ErrorCode } from './api-types';
src/lib/optimizers/__tests__/household-fetcher.test.ts:import type { HouseholdData, HouseholdHead } from '@/lib/types/resident';
src/lib/optimizers/resident-details-fetcher.ts:import { supabase } from '@/lib/supabase';
src/lib/optimizers/resident-details-fetcher.ts:import { logger } from '@/lib/logging/secure-logger';
src/lib/optimizers/household-fetcher.ts:import { supabase } from '@/lib/supabase';
src/lib/optimizers/household-fetcher.ts:import { HouseholdData, HouseholdHead, HouseholdOption } from '@/lib/types/resident';
src/lib/optimizers/household-fetcher.ts:import { formatHouseholdOption } from '@/lib/mappers/residentMapper';
src/lib/storage/sync-queue.ts:import { offlineStorage } from './offline-storage';
src/lib/storage/sync-queue.ts:import { createAppError } from '../error-handling/error-utils';
src/lib/storage/sync-queue.ts:import { ErrorCode, ErrorSeverity } from '../error-handling/error-types';
src/lib/storage/query-cache.ts:import { logger } from '../logging/secure-logger';
src/lib/supabase/supabase.ts:import { createClient } from '@supabase/supabase-js';
src/lib/search/public-search.ts:import { supabase } from '../supabase/supabase';
src/lib/search/public-search.ts:import { createLogger } from '../environment';
src/lib/utilities/resident-listing-helpers.ts:import { ResidentListItem } from '@/lib/types/resident-listing';
src/lib/utilities/resident-listing-helpers.ts:import { formatDate as libFormatDate } from './dataTransformers';
src/lib/utilities/search-utilities.ts:import { useState, useCallback, useEffect, useMemo } from 'react';
src/lib/utilities/search-utilities.ts:import { useDebounce } from '@/hooks/utilities/useDebounce';
src/lib/utilities/async-utils.ts:import { createAppError } from '../error-handling/error-utils';
src/lib/utilities/async-utils.ts:import { ErrorCode, ErrorSeverity } from '../error-handling/error-types';
src/lib/utilities/residentHelpers.ts:import { ResidentWithRelations } from '@/lib/types/resident';
src/lib/utilities/validation-utilities.ts:import { useState, useCallback } from 'react';
src/lib/utilities/css-utils.ts:import { type ClassValue, clsx } from 'clsx';
src/lib/utilities/css-utils.ts:import { twMerge } from 'tailwind-merge';
src/lib/utilities/residentDetailHelpers.ts:import { Resident } from '@/lib/types/resident-detail';
src/lib/utilities/residentDetailHelpers.ts:import { formatDate as libFormatDate } from './dataTransformers';
src/lib/__tests__/utils.test.ts:import { cn } from '../utils';
src/lib/__tests__/rate-limit.test.ts:import { createRateLimitHandler, RATE_LIMIT_RULES } from '../rate-limit';
src/lib/__tests__/api-responses.test.ts:import { ErrorCode, Role } from '.../api-types';
src/lib/command-menu/items-utils.ts:import type { CommandMenuItemType as CommandMenuItem } from '@/components';
src/lib/command-menu/items-utils.ts:import React from 'react';
src/lib/command-menu/analytics-utils.ts:import { logger } from '@/lib/logging/secure-logger';
src/lib/command-menu/api-utils.ts:import { supabase } from '@/lib/supabase';
src/lib/command-menu/api-utils.ts:import { logger } from '@/lib/logging/secure-logger';
src/lib/command-menu/api-utils.ts:import { startCommandMenuSearchTimer, endCommandMenuSearchTimer } from '@/lib/command-menu/analytics-utils';
src/lib/api/validationUtils.ts:import { z } from 'zod';
src/lib/api/validationUtils.ts:import { ErrorCode } from './types';
src/lib/api/responseUtils.ts:import { NextResponse, NextRequest } from 'next/server';
src/lib/api/responseUtils.ts:import { auditError, auditSecurityViolation, AuditEventType } from '../security/audit-storage';
src/lib/api/responseUtils.ts:import { sanitizeSearchQuery } from '../validation/sanitizers';
src/lib/api/responseUtils.ts:import { logger } from '../logging/secure-logger';
src/lib/api/authUtils.ts:import { createClient } from '@supabase/supabase-js';
src/lib/api/authUtils.ts:import { NextRequest } from 'next/server';
src/lib/api/authUtils.ts:import { Role, ROLE_PERMISSIONS, ErrorCode, RequestContext } from './types';
src/lib/api/authUtils.ts:import { v4 as uuidv4 } from 'uuid';
src/lib/api/authUtils.ts:import { logger } from '../logging/secure-logger';
src/lib/api/authUtils.ts:import { AuthUserProfile } from '@/lib/types/database';
src/lib/api/auditUtils.ts:import { createClient } from '@supabase/supabase-js';
src/lib/api/auditUtils.ts:import { RequestContext, ErrorCode } from './types';
src/lib/api/auditUtils.ts:import { logger } from '../logging/secure-logger';
src/lib/mappers/formDataTransformers.ts:import type { ResidentFormData } from '@/lib/types/resident';
src/lib/mappers/formDataTransformers.ts:import { MigrationInformationData } from '@/hooks/utilities/useMigrationInformation';
src/lib/performance/performanceMonitor.ts:import React from 'react';
src/lib/performance/performanceMonitor.ts:import { logger } from '../logging/secure-logger';
src/lib/performance/performanceUtils.ts:import { logger } from '../logging/secure-logger';
src/lib/performance/optimizationUtils.ts:import { useCallback, useMemo, useRef, useEffect, useState } from 'react';
src/lib/performance/optimizationUtils.ts:import { logInfo } from '@/lib/logging/client-logger';
src/lib/services/geographic.service.ts:import { supabase } from '@/lib/supabase';
src/lib/services/geographic.service.ts:import { logger, logError } from '@/lib/logging/secure-logger';
src/lib/services/resident.service.ts:import { supabase } from '@/lib/supabase';
src/lib/services/resident.service.ts:import { validateResidentData } from '@/lib/validation';
src/lib/services/resident.service.ts:import { logger, logError, dbLogger } from '@/lib/logging/secure-logger';
src/lib/services/resident.service.ts:import type { ValidationResult as BaseValidationResult } from '../validation/types';
src/lib/services/household.service.ts:import { supabase } from '@/lib/supabase';
src/lib/services/household.service.ts:import { logger, logError, dbLogger } from '@/lib/logging/secure-logger';
src/lib/validation/validation.ts:import { z } from 'zod';
src/lib/validation/fieldLevelSchemas.ts:import { z } from 'zod';
src/lib/validation/sanitizers.ts:import type { SanitizationOptions } from './types';
src/lib/validation/utilities.ts:import type { ValidationResult, FieldValidationResult, ValidationError } from './types';
src/lib/validation/utilities.ts:import { debounce } from '../utilities/async-utils';
src/lib/validation/generated-schemas.ts:import { z } from 'zod';
src/lib/validation/schemas.ts:import type { FormValidator, ValidationResult, ValidationContext } from './types';
src/lib/validation/resident-schema.ts:import { z } from 'zod';
src/lib/validation/fieldValidators.ts:import type { FieldValidator, FieldValidationResult, ValidationContext } from './types';
src/design-system/utils.ts:import { designTokens } from './tokens';
