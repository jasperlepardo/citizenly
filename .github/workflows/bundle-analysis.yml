name: Bundle Analysis

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Advanced caching for faster builds
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/.eslintcache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          CSRF_SECRET: 'dev-csrf-secret-for-build-only'
          NEXT_PUBLIC_SUPABASE_URL: 'https://placeholder.supabase.co'
          NEXT_PUBLIC_SUPABASE_ANON_KEY: 'placeholder-key'

      - name: Analyze bundle size
        run: npx bundlesize
        continue-on-error: true

      - name: Bundle analysis with webpack-bundle-analyzer
        run: |
          npx webpack-bundle-analyzer .next/static/chunks/*.js --mode json > bundle-analysis.json || true

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: bundle-analysis.json
          retention-days: 30

      - name: Comment bundle size
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Get bundle stats
            let bundleComment = '## ðŸ“¦ Bundle Size Analysis\\n\\n';
            
            try {
              // Check if bundlesize results exist
              bundleComment += '### Bundle Size Check\\n';
              bundleComment += '- Bundle size analysis completed\\n';
              bundleComment += '- Check the workflow logs for detailed results\\n\\n';
              
              bundleComment += '### Build Status\\n';
              bundleComment += 'âœ… Build completed successfully\\n\\n';
              
              bundleComment += '---\\n*Bundle analysis by GitHub Actions*';
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: bundleComment
              });
            } catch (error) {
              console.log('Bundle analysis comment failed:', error);
            }