name: Pull Request Checks

on:
  pull_request:
    branches:
      - main
      - develop
      - 'release/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  # Environment Detection
  environment-info:
    name: Environment Detection
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env-detect.outputs.environment }}
      tier: ${{ steps.env-detect.outputs.tier }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Detect environment and quality tier
        id: env-detect
        run: |
          echo "environment=ci" >> $GITHUB_OUTPUT
          echo "tier=2" >> $GITHUB_OUTPUT
          npm run env:check

  # Tier 2: CI/CD Comprehensive Validation
  tier2-validation:
    name: Tier 2 - CI Comprehensive Validation
    runs-on: ubuntu-latest
    needs: environment-info
    strategy:
      matrix:
        check-group: [static-analysis, security-deps, testing]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      # Static Analysis Group
      - name: Run static analysis
        if: matrix.check-group == 'static-analysis'
        run: |
          echo "üîç Running Tier 2 Static Analysis"
          npm run lint -- --format json --output-file eslint-report.json
          npm run type-check

      # Security & Dependencies Group  
      - name: Run security and dependency checks
        if: matrix.check-group == 'security-deps'
        run: |
          echo "üîí Running Tier 2 Security & Dependencies"
          npm run security:scan
          npm run security:check
          npm run analyze:deps

      # Testing Group
      - name: Run comprehensive testing
        if: matrix.check-group == 'testing'
        run: |
          echo "üß™ Running Tier 2 Comprehensive Testing"
          npm run test:ci -- --config jest.config.ci.js
          npm run bundle:check

  # Quick checks job for faster feedback
  quick-checks:
    name: Quick Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Quick lint check
        run: npm run lint:fast || echo "Lint check failed but continuing"

      - name: Quick type check
        run: npm run type-check:fast

      - name: Upload test results
        if: matrix.check-group == 'testing' && always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            test-results/
            eslint-report.json

      - name: Validate commit messages
        if: matrix.check-group == 'static-analysis'
        run: |
          git log --format="%s" origin/${{ github.base_ref }}..${{ github.sha }} | \
          grep -E "^(feat|fix|docs|style|refactor|perf|test|build|ci|chore)(\(.+\))?: .+" || \
          (echo "‚ùå Commits must follow conventional commit format" && exit 1)

  # Parallel static analysis
  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache ESLint
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.eslintcache
          key: ${{ runner.os }}-eslint-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run type check
        run: npm run type-check

  # Parallel testing
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Jest
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-jest-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.test.{js,jsx,ts,tsx}') }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:fast

  # Quick basic checks for fast feedback
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Quick lint check
        run: npm run lint

      - name: Quick type check
        run: npm run type-check

  # Build job that depends on other checks
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [static-analysis]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

  # Final status check
  pr-status:
    name: PR Status
    runs-on: ubuntu-latest
    needs: [static-analysis, test, build]
    if: always()
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.static-analysis.result }}" == "success" && "${{ needs.test.result }}" == "success" && "${{ needs.build.result }}" == "success" ]]; then
            echo "‚úÖ All checks passed!"
          else
            echo "‚ùå Some checks failed"
            exit 1
          fi

      - name: Comment PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ All checks passed! This pull request is ready for review.'
            })