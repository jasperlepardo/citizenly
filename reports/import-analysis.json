{
  "timestamp": "2025-08-24T23:52:51.889Z",
  "summary": {
    "filesAnalyzed": 613,
    "totalUnused": 138,
    "circularDependencies": 0,
    "heavyDependencies": 10
  },
  "filesAnalyzed": 613,
  "imports": {
    "src/__tests__/setup.tsx": [
      {
        "type": "named",
        "names": [
          "beforeEach",
          "afterEach",
          "vi"
        ],
        "from": "vitest",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "cleanup"
        ],
        "from": "@testing-library/react",
        "line": 2
      },
      {
        "type": "side-effect",
        "names": [],
        "from": "@testing-library/jest-dom",
        "line": 3
      }
    ],
    "src/__tests__/test-utils.tsx": [
      {
        "type": "named",
        "names": [
          "render",
          "RenderOptions",
          "RenderResult"
        ],
        "from": "@testing-library/react",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "QueryClient",
          "QueryClientProvider"
        ],
        "from": "@tanstack/react-query",
        "line": 9
      },
      {
        "type": "default",
        "names": [
          "userEvent"
        ],
        "from": "@testing-library/user-event",
        "line": 8
      }
    ],
    "src/app/(dashboard)/admin/create-user/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/admin/create-user/page.tsx": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField"
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 7
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 6
      }
    ],
    "src/app/(dashboard)/admin/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/admin/loading.tsx": [],
    "src/app/(dashboard)/admin/users/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/admin/users/page.tsx": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 6
      }
    ],
    "src/app/(dashboard)/dashboard/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/dashboard/loading.tsx": [],
    "src/app/(dashboard)/dashboard/page.tsx": [
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "StatsCard",
          "DependencyRatioPieChart",
          "SexDistributionPieChart",
          "CivilStatusPieChart",
          "EmploymentStatusPieChart",
          ""
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "PopulationPyramid"
        ],
        "from": "@/components",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "useDashboard"
        ],
        "from": "@/hooks/dashboard/useDashboard",
        "line": 14
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/app/(dashboard)/households/[id]/page.tsx": [
      {
        "type": "named",
        "names": [
          "useParams",
          "useRouter"
        ],
        "from": "next/navigation",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "lookupAddressLabels",
          "lookupHouseholdTypeLabels",
          "lookupHouseholdHeadLabel"
        ],
        "from": "@/lib/utilities/address-lookup",
        "line": 10
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 4
      }
    ],
    "src/app/(dashboard)/households/create/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/households/create/page.tsx": [
      {
        "type": "named",
        "names": [
          "useSearchParams"
        ],
        "from": "next/navigation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "NewHouseholdForm"
        ],
        "from": "@/components",
        "line": 6
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 5
      }
    ],
    "src/app/(dashboard)/households/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/households/loading.tsx": [],
    "src/app/(dashboard)/households/page.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "useHouseholds",
          "type Household"
        ],
        "from": "@/hooks/crud/useHouseholds",
        "line": 6
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 4
      }
    ],
    "src/app/(dashboard)/layout.tsx": [
      {
        "type": "named",
        "names": [
          "DashboardLayout"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "ProtectedRoute"
        ],
        "from": "@/components",
        "line": 4
      }
    ],
    "src/app/(dashboard)/loading.tsx": [],
    "src/app/(dashboard)/reports/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/reports/page.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 3
      }
    ],
    "src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/page.tsx": [
      {
        "type": "named",
        "names": [
          "useSearchParams"
        ],
        "from": "next/navigation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "logError"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 5
      }
    ],
    "src/app/(dashboard)/residents/[id]/page.tsx": [
      {
        "type": "named",
        "names": [
          "useParams"
        ],
        "from": "next/navigation",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "PersonalInformationForm"
        ],
        "from": "@/components",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "ResidentForm"
        ],
        "from": "@/components/templates/ResidentForm",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "InputField"
        ],
        "from": "@/components",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "CivilStatusEnum",
          "CitizenshipEnum",
          "EducationLevelEnum",
          "EmploymentStatusEnum",
          "BloodTypeEnum",
          "EthnicityEnum",
          "ReligionEnum"
        ],
        "from": "@/types",
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "SEX_OPTIONS",
          "CIVIL_STATUS_OPTIONS",
          "CITIZENSHIP_OPTIONS",
          "EDUCATION_LEVEL_OPTIONS",
          "EDUCATION_STATUS_OPTIONS",
          "EMPLOYMENT_STATUS_OPTIONS",
          "RELIGION_OPTIONS",
          "ETHNICITY_OPTIONS",
          "extractValues",
          ""
        ],
        "from": "@/lib/constants/resident-enums",
        "line": 23
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 4
      }
    ],
    "src/app/(dashboard)/residents/create/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/residents/create/page.tsx": [
      {
        "type": "named",
        "names": [
          "useSearchParams",
          "useRouter"
        ],
        "from": "next/navigation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "ResidentForm"
        ],
        "from": "@/components",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "useResidentOperations"
        ],
        "from": "@/hooks/crud/useResidentOperations",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "EducationLevelEnum"
        ],
        "from": "@/types",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "ResidentFormData"
        ],
        "from": "@/services/resident.service",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "toast"
        ],
        "from": "react-hot-toast",
        "line": 10
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 5
      }
    ],
    "src/app/(dashboard)/residents/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/residents/loading.tsx": [],
    "src/app/(dashboard)/residents/page.tsx": [
      {
        "type": "named",
        "names": [
          "DataTable"
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "SearchBar"
        ],
        "from": "@/components",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "useResidents",
          "type Resident"
        ],
        "from": "@/hooks/crud/useResidents",
        "line": 9
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 4
      }
    ],
    "src/app/(dashboard)/settings/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/(dashboard)/settings/loading.tsx": [],
    "src/app/(dashboard)/settings/page.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "SelectField"
        ],
        "from": "@/components",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useTheme"
        ],
        "from": "@/contexts",
        "line": 11
      }
    ],
    "src/app/(dashboard)/slow-page/page.tsx": [
      {
        "type": "named",
        "names": [
          "Suspense"
        ],
        "from": "react",
        "line": 7
      }
    ],
    "src/app/(dashboard)/test-loading/page.tsx": [
      {
        "type": "named",
        "names": [
          "useEffect",
          "useState"
        ],
        "from": "react",
        "line": 9
      }
    ],
    "src/app/api/addresses/barangays/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/addresses/cities/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/addresses/provinces/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/addresses/regions/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/addresses/streets/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 2
      }
    ],
    "src/app/api/addresses/subdivisions/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 2
      }
    ],
    "src/app/api/admin/users/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/auth/assign-role/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 2
      }
    ],
    "src/app/api/auth/check-barangay-admin/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 2
      }
    ],
    "src/app/api/auth/create-profile/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "createAdminSupabaseClient"
        ],
        "from": "@/lib",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "getErrorMessage",
          "getStatusCodeForError",
          "DatabaseResponse"
        ],
        "from": "@/lib/auth-errors",
        "line": 4
      }
    ],
    "src/app/api/auth/create-profile-fallback/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "createAdminSupabaseClient"
        ],
        "from": "@/lib",
        "line": 2
      }
    ],
    "src/app/api/auth/process-notifications/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "createAdminSupabaseClient"
        ],
        "from": "@/lib",
        "line": 2
      }
    ],
    "src/app/api/auth/profile/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "createAdminSupabaseClient"
        ],
        "from": "@/lib",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "createSuccessResponse",
          "createUnauthorizedResponse",
          "createNotFoundResponse",
          "handleDatabaseError",
          "handleUnexpectedError",
          ""
        ],
        "from": "@/lib/api/responseUtils",
        "line": 4
      }
    ],
    "src/app/api/auth/test-profile/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "createAdminSupabaseClient"
        ],
        "from": "@/lib",
        "line": 2
      }
    ],
    "src/app/api/auth/webhook/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "WebhookUserRecord"
        ],
        "from": "@/types/auth",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "createAdminSupabaseClient"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "crypto"
        ],
        "from": "crypto",
        "line": 2
      }
    ],
    "src/app/api/dashboard/stats/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/debug/rbi-preflight/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/debug/residents/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/health/command-menu/route.ts": [
      {
        "type": "named",
        "names": [
          "NextResponse"
        ],
        "from": "next/server",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "getCommandMenuHealth"
        ],
        "from": "@/lib/command-menu/analytics-utils",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "withSecurityHeaders"
        ],
        "from": "@/lib/api/responseUtils",
        "line": 8
      }
    ],
    "src/app/api/households/[id]/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/households/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest"
        ],
        "from": "next/server",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "withAuth",
          "applyGeographicFilter",
          "createAdminSupabaseClient"
        ],
        "from": "@/lib",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "createRateLimitHandler"
        ],
        "from": "@/lib/security/rate-limit",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "createHouseholdSchema"
        ],
        "from": "@/lib/api/validationUtils",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "createPaginatedResponse",
          "createCreatedResponse",
          "createValidationErrorResponse",
          "processSearchParams",
          "applySearchFilter",
          "withNextRequestErrorHandling",
          "withSecurityHeaders",
          ""
        ],
        "from": "@/lib/api/responseUtils",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "auditDataOperation"
        ],
        "from": "@/lib/api/auditUtils",
        "line": 19
      },
      {
        "type": "named",
        "names": [
          "RequestContext",
          "Role"
        ],
        "from": "@/lib/api/types",
        "line": 20
      },
      {
        "type": "named",
        "names": [
          "z"
        ],
        "from": "zod",
        "line": 21
      }
    ],
    "src/app/api/psgc/lookup/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/psgc/search/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/psoc/search/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/residents/[id]/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/api/residents/route.ts": [
      {
        "type": "named",
        "names": [
          "NextRequest"
        ],
        "from": "next/server",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "withAuth",
          "applyGeographicFilter",
          "createAdminSupabaseClient",
          "getAccessLevel"
        ],
        "from": "@/lib",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "createRateLimitHandler"
        ],
        "from": "@/lib/security/rate-limit",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "createResidentSchema"
        ],
        "from": "@/lib/api/validationUtils",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "createPaginatedResponse",
          "createCreatedResponse",
          "createValidationErrorResponse",
          "processSearchParams",
          "applySearchFilter",
          "withNextRequestErrorHandling",
          "withSecurityHeaders",
          ""
        ],
        "from": "@/lib/api/responseUtils",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "auditDataOperation"
        ],
        "from": "@/lib/api/auditUtils",
        "line": 19
      },
      {
        "type": "named",
        "names": [
          "RequestContext",
          "Role"
        ],
        "from": "@/lib/api/types",
        "line": 20
      },
      {
        "type": "named",
        "names": [
          "ResidentFormData"
        ],
        "from": "@/types",
        "line": 21
      },
      {
        "type": "named",
        "names": [
          "z"
        ],
        "from": "zod",
        "line": 22
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 23
      }
    ],
    "src/app/api/user/geographic-location/route.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "NextRequest",
          "NextResponse"
        ],
        "from": "next/server",
        "line": 2
      }
    ],
    "src/app/error.js": [],
    "src/app/error.tsx": [],
    "src/app/global-error.js": [],
    "src/app/global-error.tsx": [],
    "src/app/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Montserrat"
        ],
        "from": "next/font/google",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "VersionTag"
        ],
        "from": "@/components/molecules/VersionTag",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "PWAInstallPrompt"
        ],
        "from": "@/components/molecules/PWAInstallPrompt",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "PWAStatus"
        ],
        "from": "@/components/molecules/PWAStatus",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "AuthDebug"
        ],
        "from": "@/components/molecules/AuthDebug",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "ConnectionStatus",
          "PWADevTools"
        ],
        "from": "@/components",
        "line": 9
      },
      {
        "type": "default",
        "names": [
          "Providers"
        ],
        "from": "@/components/providers/Providers",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "LastVisitedTracker"
        ],
        "from": "@/components/providers/LastVisitedTracker",
        "line": 10
      },
      {
        "type": "side-effect",
        "names": [],
        "from": "./globals.css",
        "line": 3
      }
    ],
    "src/app/loading.js": [],
    "src/app/loading.tsx": [
      {
        "type": "named",
        "names": [
          "ReactElement"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/app/login/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/login/page.tsx": [
      {
        "type": "named",
        "names": [
          "useRouter"
        ],
        "from": "next/navigation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "LoginForm",
          "DevLogin"
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "ThemeToggle"
        ],
        "from": "@/components",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "useLastVisitedPage"
        ],
        "from": "@/hooks/utilities",
        "line": 8
      }
    ],
    "src/app/not-found.js": [],
    "src/app/not-found.tsx": [
      {
        "type": "named",
        "names": [
          "ReactElement"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 1
      }
    ],
    "src/app/offline/page.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 4
      }
    ],
    "src/app/page.tsx": [
      {
        "type": "named",
        "names": [
          "useRouter"
        ],
        "from": "next/navigation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "useLastVisitedPage"
        ],
        "from": "@/hooks/utilities",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "useEffect"
        ],
        "from": "react",
        "line": 8
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 3
      }
    ],
    "src/app/signup/layout.tsx": [
      {
        "type": "named",
        "names": [
          "Metadata"
        ],
        "from": "next",
        "line": 1
      }
    ],
    "src/app/signup/page.tsx": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField"
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "getErrorMessage"
        ],
        "from": "@/lib/auth-errors",
        "line": 9
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 7
      }
    ],
    "src/app/template.tsx": [],
    "src/components/atoms/Badge/Badge.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Badge/index.ts": [],
    "src/components/atoms/Button/Button.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 30
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 31
      }
    ],
    "src/components/atoms/Button/index.ts": [],
    "src/components/atoms/Chart/ChartContainer/ChartContainer.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Chart/ChartContainer/index.ts": [],
    "src/components/atoms/Chart/ChartEmptyState/ChartEmptyState.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Chart/ChartEmptyState/index.ts": [],
    "src/components/atoms/Chart/ChartLegend/ChartLegend.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Chart/ChartLegend/index.ts": [],
    "src/components/atoms/Chart/ChartTitle/ChartTitle.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Chart/ChartTitle/index.ts": [],
    "src/components/atoms/Chart/ChartTooltip/ChartTooltip.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Chart/ChartTooltip/index.ts": [],
    "src/components/atoms/Chart/index.ts": [],
    "src/components/atoms/Field/Control/Checkbox/Checkbox.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "TitleDescription"
        ],
        "from": "../TitleDescription",
        "line": 6
      }
    ],
    "src/components/atoms/Field/Control/Checkbox/index.ts": [],
    "src/components/atoms/Field/Control/Control.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "TitleDescription"
        ],
        "from": "./TitleDescription",
        "line": 6
      }
    ],
    "src/components/atoms/Field/Control/Radio/Radio.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "TitleDescription"
        ],
        "from": "../TitleDescription",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "Button",
          "type ButtonProps"
        ],
        "from": "@/components/atoms/Button/Button",
        "line": 7
      }
    ],
    "src/components/atoms/Field/Control/Radio/index.ts": [],
    "src/components/atoms/Field/Control/TitleDescription.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 5
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Field/Control/Toggle/Toggle.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "TitleDescription"
        ],
        "from": "../TitleDescription",
        "line": 6
      }
    ],
    "src/components/atoms/Field/Control/Toggle/index.ts": [],
    "src/components/atoms/Field/Control/index.ts": [],
    "src/components/atoms/Field/HelperText/HelperText.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Field/HelperText/index.ts": [],
    "src/components/atoms/Field/Input/Input.tsx": [],
    "src/components/atoms/Field/Input/index.ts": [],
    "src/components/atoms/Field/Label/Label.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Field/Label/index.ts": [],
    "src/components/atoms/Field/ReadOnly/ReadOnly.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/atoms/Field/ReadOnly/index.ts": [],
    "src/components/atoms/Field/Select/Option/Option.tsx": [],
    "src/components/atoms/Field/Select/Option/index.ts": [],
    "src/components/atoms/Field/Select/Select.tsx": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useRef",
          "useCallback"
        ],
        "from": "react",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "Input"
        ],
        "from": "../",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "Option"
        ],
        "from": "./Option",
        "line": 11
      }
    ],
    "src/components/atoms/Field/Select/index.ts": [],
    "src/components/atoms/Field/Textarea/Textarea.tsx": [],
    "src/components/atoms/Field/Textarea/index.ts": [],
    "src/components/atoms/Field/index.ts": [],
    "src/components/atoms/Link/Link.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 31
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 32
      },
      {
        "type": "default",
        "names": [
          "NextLink"
        ],
        "from": "next/link",
        "line": 30
      }
    ],
    "src/components/atoms/Link/index.ts": [],
    "src/components/atoms/Loading/FormSkeleton/FormSkeleton.tsx": [],
    "src/components/atoms/Loading/FormSkeleton/index.ts": [],
    "src/components/atoms/Loading/LoadingFallback/LoadingFallback.tsx": [],
    "src/components/atoms/Loading/LoadingFallback/index.ts": [],
    "src/components/atoms/Loading/TableSkeleton/TableSkeleton.tsx": [],
    "src/components/atoms/Loading/TableSkeleton/index.ts": [],
    "src/components/atoms/Loading/index.ts": [],
    "src/components/atoms/SkipNavigation/SkipNavigation.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 8
      }
    ],
    "src/components/atoms/SkipNavigation/index.ts": [],
    "src/components/atoms/index.ts": [],
    "src/components/index.ts": [],
    "src/components/lazy-index.ts": [
      {
        "type": "named",
        "names": [
          "DataTable"
        ],
        "from": "@/components/lazy-index",
        "line": 48
      },
      {
        "type": "named",
        "names": [
          "FormSkeleton"
        ],
        "from": "@/components/lazy-index",
        "line": 49
      }
    ],
    "src/components/molecules/AccessibleModal/AccessibleModal.tsx": [
      {
        "type": "named",
        "names": [
          "createPortal"
        ],
        "from": "react-dom",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "useFocusTrap",
          "announceToScreenReader"
        ],
        "from": "@/lib/ui/accessibility",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 11
      }
    ],
    "src/components/molecules/AccessibleModal/index.ts": [],
    "src/components/molecules/AuthDebug/AuthDebug.tsx": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 4
      }
    ],
    "src/components/molecules/AuthDebug/index.ts": [],
    "src/components/molecules/ButtonGroup/ButtonGroup.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      }
    ],
    "src/components/molecules/ButtonGroup/index.ts": [],
    "src/components/molecules/CivilStatusPieChart/CivilStatusPieChart.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "GenericPieChart"
        ],
        "from": "../GenericPieChart/GenericPieChart",
        "line": 4
      }
    ],
    "src/components/molecules/CivilStatusPieChart/index.ts": [],
    "src/components/molecules/CommandMenu/CommandMenu.tsx": [
      {
        "type": "named",
        "names": [
          "Dialog"
        ],
        "from": "@headlessui/react",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "CommandMenuGroup"
        ],
        "from": "./CommandMenuGroup",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "CommandMenuEmpty"
        ],
        "from": "./CommandMenuEmpty",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "useCommandMenuWithApi"
        ],
        "from": "@/hooks/ui/useCommandMenuWithApi",
        "line": 9
      }
    ],
    "src/components/molecules/CommandMenu/CommandMenuEmpty.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/CommandMenu/CommandMenuErrorBoundary.tsx": [
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 4
      }
    ],
    "src/components/molecules/CommandMenu/CommandMenuGroup.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "CommandMenuItem"
        ],
        "from": "./CommandMenuItem",
        "line": 5
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/CommandMenu/CommandMenuItem.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 5
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/CommandMenu/InlineCommandMenu.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "CommandMenuGroup"
        ],
        "from": "./CommandMenuGroup",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "CommandMenuEmpty"
        ],
        "from": "./CommandMenuEmpty",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "CommandMenuErrorBoundary"
        ],
        "from": "./CommandMenuErrorBoundary",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "useCommandMenuWithApi"
        ],
        "from": "@/hooks/ui/useCommandMenuWithApi",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "trackCommandMenuError",
          "trackWorkflowSuggestion"
        ],
        "from": "@/lib/command-menu/analytics-utils",
        "line": 10
      }
    ],
    "src/components/molecules/CommandMenu/index.ts": [],
    "src/components/molecules/ConnectionStatus/ConnectionStatus.tsx": [
      {
        "type": "named",
        "names": [
          "syncQueue"
        ],
        "from": "@/lib/data",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "useConnectionStatus"
        ],
        "from": "@/hooks/utilities/useConnectionStatus",
        "line": 5
      }
    ],
    "src/components/molecules/ConnectionStatus/index.ts": [],
    "src/components/molecules/DependencyRatioPieChart/DependencyRatioPieChart.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "GenericPieChart"
        ],
        "from": "../GenericPieChart/GenericPieChart",
        "line": 4
      }
    ],
    "src/components/molecules/DependencyRatioPieChart/index.ts": [],
    "src/components/molecules/EmploymentStatusPieChart/EmploymentStatusPieChart.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "GenericPieChart"
        ],
        "from": "../GenericPieChart/GenericPieChart",
        "line": 4
      }
    ],
    "src/components/molecules/EmploymentStatusPieChart/index.ts": [],
    "src/components/molecules/ErrorModal/ErrorModal.lazy.tsx": [
      {
        "type": "named",
        "names": [
          "lazy"
        ],
        "from": "react",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading"
        ],
        "from": "@/lib",
        "line": 8
      }
    ],
    "src/components/molecules/ErrorModal/ErrorModal.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/ErrorModal/index.tsx": [],
    "src/components/molecules/FieldSet/ControlField/ControlField.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "Label",
          "HelperText",
          "ReadOnly"
        ],
        "from": "../../../atoms/Field",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "Control"
        ],
        "from": "../../../atoms/Field/Control/Control",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "getFieldId",
          "getFieldIds",
          "buildAriaDescribedBy",
          "buildAriaLabelledBy"
        ],
        "from": "@/lib/utilities/id-generators",
        "line": 7
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/FieldSet/ControlField/index.ts": [],
    "src/components/molecules/FieldSet/FieldErrorBoundary.tsx": [],
    "src/components/molecules/FieldSet/FieldSet.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "CheckboxGroup"
        ],
        "from": "../../atoms/Field/Control/Checkbox/Checkbox",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "RadioGroup"
        ],
        "from": "../../atoms/Field/Control/Radio/Radio",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "ControlGroup"
        ],
        "from": "./ControlField/ControlField",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "Label"
        ],
        "from": "../../atoms/Field/Label/Label",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "ReadOnlyField"
        ],
        "from": "./ReadOnlyField/ReadOnlyField",
        "line": 9
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/FieldSet/InputField/InputField.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "Label",
          "Input",
          "HelperText",
          "ReadOnly"
        ],
        "from": "../../../atoms/Field",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "getFieldId",
          "getFieldIds",
          "buildAriaDescribedBy",
          "buildAriaLabelledBy"
        ],
        "from": "@/lib/utilities/id-generators",
        "line": 6
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/FieldSet/InputField/index.ts": [],
    "src/components/molecules/FieldSet/ReadOnlyField/ReadOnlyField.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "getFieldId",
          "getFieldIds",
          "buildAriaDescribedBy",
          "buildAriaLabelledBy"
        ],
        "from": "@/lib/utilities/id-generators",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "Label",
          "ReadOnly",
          "HelperText"
        ],
        "from": "../../../atoms/Field",
        "line": 6
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/FieldSet/ReadOnlyField/index.ts": [],
    "src/components/molecules/FieldSet/SelectField/SelectField.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "Label",
          "HelperText",
          "ReadOnly"
        ],
        "from": "../../../atoms/Field",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "Select",
          "SelectProps"
        ],
        "from": "../../../atoms/Field/Select",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "getFieldId",
          "getFieldIds",
          "buildAriaDescribedBy",
          "buildAriaLabelledBy"
        ],
        "from": "@/lib/utilities/id-generators",
        "line": 7
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/FieldSet/SelectField/index.ts": [],
    "src/components/molecules/FieldSet/index.ts": [],
    "src/components/molecules/FileUpload/FileUpload.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cn",
          "formatFileSize"
        ],
        "from": "@/lib/utilities",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "validateUploadedFile",
          "logFileOperation",
          "scanFileForViruses"
        ],
        "from": "@/lib/security",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 8
      }
    ],
    "src/components/molecules/FileUpload/index.ts": [],
    "src/components/molecules/GenericPieChart/GenericPieChart.tsx": [],
    "src/components/molecules/GenericPieChart/index.ts": [],
    "src/components/molecules/PWADevTools/PWADevTools.tsx": [
      {
        "type": "named",
        "names": [
          "pwaPerformance"
        ],
        "from": "@/lib/performance/pwaPerformanceUtils",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "syncQueue"
        ],
        "from": "@/lib/data",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "offlineStorage"
        ],
        "from": "@/lib/data",
        "line": 6
      }
    ],
    "src/components/molecules/PWADevTools/index.ts": [],
    "src/components/molecules/PWAInstallPrompt/PWAInstallPrompt.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "trackPWAEvents"
        ],
        "from": "@/lib/performance/pwaPerformanceUtils",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "loadUserMetrics",
          "updatePageViewMetrics",
          "trackUserInteraction",
          "trackTimeSpent",
          "shouldShowInstallPrompt",
          "getPersonalizedInstallMessage",
          "isPWAInstalled",
          "recordInstallDismissal",
          "getInstallPromptDelay",
          "setupUserInteractionTracking",
          "setupTimeTracking",
          "type UserBehaviorMetrics"
        ],
        "from": "@/lib/analytics/user-behavior",
        "line": 6
      }
    ],
    "src/components/molecules/PWAInstallPrompt/index.ts": [],
    "src/components/molecules/PWAStatus/PWAStatus.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 4
      }
    ],
    "src/components/molecules/PWAStatus/index.ts": [],
    "src/components/molecules/SearchBar/SearchBar.tsx": [
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 5
      }
    ],
    "src/components/molecules/SearchBar/index.ts": [],
    "src/components/molecules/SexDistributionPieChart/SexDistributionPieChart.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "GenericPieChart"
        ],
        "from": "../GenericPieChart/GenericPieChart",
        "line": 4
      }
    ],
    "src/components/molecules/SexDistributionPieChart/index.ts": [],
    "src/components/molecules/StatisticsChart/StatisticsChart.tsx": [
      {
        "type": "named",
        "names": [
          "transformChartData",
          "getChartTitle",
          "type ChartType",
          "type DependencyData",
          "type SexData",
          "type CivilStatusData",
          "type EmploymentStatusData",
          ""
        ],
        "from": "@/lib/charts",
        "line": 5
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "GenericPieChart"
        ],
        "from": "../GenericPieChart/GenericPieChart",
        "line": 4
      }
    ],
    "src/components/molecules/StatisticsChart/index.ts": [],
    "src/components/molecules/StatsCard/StatsCard.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 15
      }
    ],
    "src/components/molecules/StatsCard/index.ts": [],
    "src/components/molecules/SuccessModal/SuccessModal.lazy.tsx": [
      {
        "type": "named",
        "names": [
          "lazy"
        ],
        "from": "react",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading"
        ],
        "from": "@/lib",
        "line": 8
      }
    ],
    "src/components/molecules/SuccessModal/SuccessModal.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/SuccessModal/index.tsx": [],
    "src/components/molecules/ThemeToggle/ThemeToggle.tsx": [
      {
        "type": "named",
        "names": [
          "useTheme"
        ],
        "from": "@/contexts",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/molecules/ThemeToggle/index.ts": [],
    "src/components/molecules/VersionTag/VersionTag.tsx": [
      {
        "type": "named",
        "names": [
          "cn"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "packageJson"
        ],
        "from": "../../../../package.json",
        "line": 5
      }
    ],
    "src/components/molecules/VersionTag/index.ts": [],
    "src/components/molecules/index.ts": [],
    "src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.lazy.tsx": [
      {
        "type": "named",
        "names": [
          "lazy"
        ],
        "from": "react",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "FormSkeleton"
        ],
        "from": "@/components/atoms/Loading",
        "line": 9
      }
    ],
    "src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.tsx": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "../../atoms",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "SelectField"
        ],
        "from": "../../molecules/FieldSet/SelectField",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 9
      },
      {
        "type": "default",
        "names": [
          "AccessibleModal"
        ],
        "from": "../../molecules/AccessibleModal",
        "line": 7
      }
    ],
    "src/components/organisms/CreateHouseholdModal/HouseholdAddressForm.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 6
      },
      {
        "type": "default",
        "names": [
          "StreetSelector"
        ],
        "from": "../StreetSelector/StreetSelector",
        "line": 8
      },
      {
        "type": "default",
        "names": [
          "SubdivisionSelector"
        ],
        "from": "../SubdivisionSelector/SubdivisionSelector",
        "line": 9
      }
    ],
    "src/components/organisms/CreateHouseholdModal/HouseholdLocationInfo.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 6
      }
    ],
    "src/components/organisms/CreateHouseholdModal/index.ts": [],
    "src/components/organisms/DataTable/DataTable.lazy.tsx": [
      {
        "type": "named",
        "names": [
          "lazy"
        ],
        "from": "react",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "TableSkeleton"
        ],
        "from": "@/components/atoms/Loading",
        "line": 9
      }
    ],
    "src/components/organisms/DataTable/DataTable.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 5
      }
    ],
    "src/components/organisms/DataTable/index.ts": [],
    "src/components/organisms/DevLogin/DevLogin.tsx": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "isDevFeatureEnabled",
          "getDevCredentials",
          "getDemoUserConfig",
          "logDevModeWarning",
          "validateDevEnvironment",
          ""
        ],
        "from": "@/lib/config/dev-config",
        "line": 5
      }
    ],
    "src/components/organisms/DevLogin/index.ts": [],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/AddressDetails.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField"
        ],
        "from": "@/components/molecules/FieldSet",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "HouseholdDetailsData"
        ],
        "from": "../../types",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useGeographicData"
        ],
        "from": "@/hooks/api/useGeographicData",
        "line": 4
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/GeographicLocation.tsx": [
      {
        "type": "named",
        "names": [
          "SelectField"
        ],
        "from": "@/components/molecules/FieldSet",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "HouseholdDetailsData"
        ],
        "from": "../../types",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useGeographicData"
        ],
        "from": "@/hooks/api/useGeographicData",
        "line": 4
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/HouseholdStatistics.tsx": [
      {
        "type": "named",
        "names": [
          "InputField"
        ],
        "from": "@/components/molecules/FieldSet",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "HouseholdDetailsData"
        ],
        "from": "../../types",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/HouseholdTypeInformation.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/IncomeAndHeadInformation.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.tsx": [
      {
        "type": "named",
        "names": [
          "HouseholdTypeInformation",
          "HouseholdTypeInformationData"
        ],
        "from": "./FormField/HouseholdTypeInformation",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "IncomeAndHeadInformation",
          "IncomeAndHeadInformationData"
        ],
        "from": "./FormField/IncomeAndHeadInformation",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/index.ts": [],
    "src/components/organisms/Form/Household/HouseholdForm.tsx": [
      {
        "type": "named",
        "names": [
          "HouseholdDetailsForm"
        ],
        "from": "./HouseholdDetails",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "ExtendedHouseholdFormData",
          "FormMode"
        ],
        "from": "./types",
        "line": 3
      }
    ],
    "src/components/organisms/Form/Household/LocationAndDemographics/FormField/AddressInformation.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useSubdivisionsSearch"
        ],
        "from": "@/hooks/search/useSubdivisionsSearch",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "useStreetsSearch"
        ],
        "from": "@/hooks/search/useStreetsSearch",
        "line": 5
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Household/LocationAndDemographics/FormField/DemographicsInformation.tsx": [
      {
        "type": "named",
        "names": [
          "InputField"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Household/LocationAndDemographics/LocationAndDemographics.tsx": [
      {
        "type": "named",
        "names": [
          "AddressInformation",
          "AddressInformationData"
        ],
        "from": "./FormField/AddressInformation",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "DemographicsInformation",
          "DemographicsInformationData"
        ],
        "from": "./FormField/DemographicsInformation",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Household/LocationAndDemographics/index.ts": [],
    "src/components/organisms/Form/Household/index.ts": [],
    "src/components/organisms/Form/Household/types.ts": [],
    "src/components/organisms/Form/Resident/ContactInformation/ContactInformation.tsx": [
      {
        "type": "named",
        "names": [
          "ContactDetails",
          "ContactDetailsData"
        ],
        "from": "./FormField/ContactDetails",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "HouseholdInformation",
          "HouseholdInformationData"
        ],
        "from": "./FormField/HouseholdInformation",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.tsx": [
      {
        "type": "named",
        "names": [
          "InputField"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.tsx": [
      {
        "type": "named",
        "names": [
          "SelectField"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useOptimizedHouseholdSearch"
        ],
        "from": "@/hooks/search/useOptimizedHouseholdSearch",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/ContactInformation/index.ts": [],
    "src/components/organisms/Form/Resident/MigrationInformation/MigrationInformation.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField",
          "ControlField"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useMigrationInformation",
          "MigrationInformationData"
        ],
        "from": "@/hooks/utilities/useMigrationInformation",
        "line": 4
      }
    ],
    "src/components/organisms/Form/Resident/MigrationInformation/index.ts": [],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField",
          "ControlFieldSet"
        ],
        "from": "@/components",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Radio"
        ],
        "from": "@/components/atoms/Field/Control/Radio/Radio",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "SEX_OPTIONS_WITH_DEFAULT",
          "CIVIL_STATUS_OPTIONS_WITH_DEFAULT"
        ],
        "from": "@/lib/constants/resident-enums",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField"
        ],
        "from": "@/components",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "useOptimizedPsgcSearch"
        ],
        "from": "@/hooks/search/useOptimizedPsgcSearch",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/EducationInformation.tsx": [
      {
        "type": "named",
        "names": [
          "SelectField",
          "ControlFieldSet"
        ],
        "from": "@/components",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Radio"
        ],
        "from": "@/components/atoms/Field/Control/Radio/Radio",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "EDUCATION_LEVEL_OPTIONS_WITH_EMPTY"
        ],
        "from": "@/lib/constants/resident-enums",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/EmploymentInformation.tsx": [
      {
        "type": "named",
        "names": [
          "SelectField"
        ],
        "from": "@/components",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "EMPLOYMENT_STATUS_OPTIONS_WITH_EMPTY"
        ],
        "from": "@/lib/constants/resident-enums",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.tsx": [
      {
        "type": "named",
        "names": [
          "InputField"
        ],
        "from": "@/components",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.lazy.tsx": [
      {
        "type": "named",
        "names": [
          "lazy"
        ],
        "from": "react",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "FormSkeleton"
        ],
        "from": "@/components/atoms/Loading",
        "line": 9
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.tsx": [
      {
        "type": "named",
        "names": [
          "PhilSysCardField"
        ],
        "from": "./FormField/PhilSysCardField",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "BasicInformation",
          "BasicInformationData"
        ],
        "from": "./FormField/BasicInformation",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "BirthInformation",
          "BirthInformationData"
        ],
        "from": "./FormField/BirthInformation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "EducationInformation",
          "EducationInformationData"
        ],
        "from": "./FormField/EducationInformation",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "EmploymentInformation",
          "EmploymentInformationData"
        ],
        "from": "./FormField/EmploymentInformation",
        "line": 6
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/index.ts": [],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.tsx": [
      {
        "type": "named",
        "names": [
          "InputField"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "BLOOD_TYPE_OPTIONS_WITH_DEFAULT",
          "ETHNICITY_OPTIONS_WITH_DEFAULT",
          "RELIGION_OPTIONS_WITH_DEFAULT",
          "CITIZENSHIP_OPTIONS_WITH_DEFAULT"
        ],
        "from": "@/lib/constants/resident-enums",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "ControlFieldSet"
        ],
        "from": "@/components",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "Radio"
        ],
        "from": "@/components/atoms/Field/Control/Radio/Radio",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.tsx": [
      {
        "type": "named",
        "names": [
          "PhysicalCharacteristics",
          "PhysicalCharacteristicsData"
        ],
        "from": "./FormField/PhysicalCharacteristics",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "VotingInformation",
          "VotingInformationData"
        ],
        "from": "./FormField/VotingInformation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "MotherMaidenName",
          "MotherMaidenNameData"
        ],
        "from": "./FormField/MotherMaidenName",
        "line": 5
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/index.ts": [],
    "src/components/organisms/Form/Resident/SectoralInformation/FormField/SectoralClassifications.tsx": [
      {
        "type": "named",
        "names": [
          "ControlField"
        ],
        "from": "@/components",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "isIndigenousPeople"
        ],
        "from": "@/lib/business-rules/sectoral-classification",
        "line": 11
      }
    ],
    "src/components/organisms/Form/Resident/SectoralInformation/SectoralInformation.lazy.tsx": [
      {
        "type": "named",
        "names": [
          "lazy"
        ],
        "from": "react",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "FormSkeleton"
        ],
        "from": "@/components/atoms/Loading",
        "line": 9
      }
    ],
    "src/components/organisms/Form/Resident/SectoralInformation/SectoralInformation.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/SectoralInformation/index.ts": [],
    "src/components/organisms/Form/Resident/index.ts": [],
    "src/components/organisms/Form/Resident/types.ts": [],
    "src/components/organisms/Form/Resident/utils/fieldRenderers.tsx": [],
    "src/components/organisms/Form/index.ts": [],
    "src/components/organisms/LoginForm/LoginForm.tsx": [
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "InputField"
        ],
        "from": "@/components",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 6
      }
    ],
    "src/components/organisms/LoginForm/index.ts": [],
    "src/components/organisms/Navigation/Navigation.tsx": [
      {
        "type": "named",
        "names": [
          "usePathname"
        ],
        "from": "next/navigation",
        "line": 10
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 8
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 9
      }
    ],
    "src/components/organisms/Navigation/index.ts": [],
    "src/components/organisms/PopulationPyramid/PopulationPyramid.lazy.tsx": [
      {
        "type": "named",
        "names": [
          "lazy"
        ],
        "from": "react",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "LoadingFallback"
        ],
        "from": "@/components/atoms/Loading",
        "line": 9
      }
    ],
    "src/components/organisms/PopulationPyramid/PopulationPyramid.tsx": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/organisms/PopulationPyramid/index.ts": [],
    "src/components/organisms/ProtectedRoute/ProtectedRoute.tsx": [
      {
        "type": "named",
        "names": [
          "useRouter"
        ],
        "from": "next/navigation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 6
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/components/organisms/ProtectedRoute/index.ts": [],
    "src/components/organisms/Sidebar/Sidebar.tsx": [
      {
        "type": "named",
        "names": [
          "usePathname"
        ],
        "from": "next/navigation",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "cva",
          "type VariantProps"
        ],
        "from": "class-variance-authority",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "clsx"
        ],
        "from": "clsx",
        "line": 13
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 10
      }
    ],
    "src/components/organisms/Sidebar/index.ts": [],
    "src/components/organisms/Table/Table.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "Image"
        ],
        "from": "next/image",
        "line": 4
      }
    ],
    "src/components/organisms/Table/index.ts": [],
    "src/components/organisms/UserProfile/UserProfile.lazy.tsx": [
      {
        "type": "named",
        "names": [
          "lazy"
        ],
        "from": "react",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "FormSkeleton"
        ],
        "from": "@/components/atoms/Loading",
        "line": 9
      }
    ],
    "src/components/organisms/UserProfile/UserProfile.tsx": [
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 4
      }
    ],
    "src/components/organisms/UserProfile/index.ts": [],
    "src/components/organisms/index.ts": [],
    "src/components/templates/AppShell/AppShell.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "Navigation"
        ],
        "from": "@/components/organisms/Navigation",
        "line": 10
      }
    ],
    "src/components/templates/AppShell/index.ts": [],
    "src/components/templates/DashboardLayout/DashboardLayout.tsx": [
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib/supabase/supabase",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "InlineCommandMenu"
        ],
        "from": "@/components/molecules/CommandMenu/InlineCommandMenu",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "Navigation"
        ],
        "from": "@/components",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "Toaster"
        ],
        "from": "react-hot-toast",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 10
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "SkipNavigation"
        ],
        "from": "@/components/atoms/SkipNavigation",
        "line": 11
      }
    ],
    "src/components/templates/DashboardLayout/index.ts": [],
    "src/components/templates/Header/Header.tsx": [
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "UserProfile"
        ],
        "from": "@/components",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "logError"
        ],
        "from": "@/lib",
        "line": 13
      },
      {
        "type": "default",
        "names": [
          "Link"
        ],
        "from": "next/link",
        "line": 9
      }
    ],
    "src/components/templates/Header/index.ts": [],
    "src/components/templates/HouseholdForm/NewHouseholdForm.tsx": [
      {
        "type": "named",
        "names": [
          "useRouter"
        ],
        "from": "next/navigation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "useQueryClient"
        ],
        "from": "@tanstack/react-query",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "useUserBarangay"
        ],
        "from": "@/hooks/utilities",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "useCSRFToken"
        ],
        "from": "@/lib/auth/csrf",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "useQuery"
        ],
        "from": "@tanstack/react-query",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "geographicService"
        ],
        "from": "@/services/geographic.service",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "LocationAndDemographicsForm",
          "HouseholdDetailsForm"
        ],
        "from": "@/components/organisms/Form/Household",
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 21
      }
    ],
    "src/components/templates/HouseholdForm/index.ts": [],
    "src/components/templates/MainLayout/MainLayout.tsx": [
      {
        "type": "named",
        "names": [
          "Header"
        ],
        "from": "../Header",
        "line": 7
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 6
      }
    ],
    "src/components/templates/MainLayout/index.ts": [],
    "src/components/templates/ResidentForm/ResidentForm.tsx": [
      {
        "type": "named",
        "names": [
          "PersonalInformationForm",
          "ContactInformationForm",
          "PhysicalPersonalDetailsForm",
          "SectoralInformationForm",
          "MigrationInformation"
        ],
        "from": "@/components/organisms/Form",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "ReadOnly"
        ],
        "from": "@/components/atoms/Field/ReadOnly",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "FormHeader"
        ],
        "from": "./components/FormHeader",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "FormActions"
        ],
        "from": "./components/FormActions",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "ResidentFormState"
        ],
        "from": "@/types/resident-form",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "isIndigenousPeople"
        ],
        "from": "@/lib/business-rules/sectoral-classification",
        "line": 11
      }
    ],
    "src/components/templates/ResidentForm/components/FormActions.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/templates/ResidentForm/components/FormHeader.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/templates/ResidentForm/components/FormValidationFeedback.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/components/templates/ResidentForm/components/index.ts": [],
    "src/components/templates/ResidentForm/index.ts": [],
    "src/components/templates/index.ts": [],
    "src/components/utils/index.ts": [],
    "src/contexts/AuthContext.tsx": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 4
      }
    ],
    "src/contexts/ThemeContext.tsx": [],
    "src/contexts/index.ts": [],
    "src/design-system/index.ts": [
      {
        "type": "named",
        "names": [
          "getColor",
          "getRBIColor"
        ],
        "from": "@/design-system",
        "line": 60
      },
      {
        "type": "named",
        "names": [
          "getSpacing",
          "getResponsiveSpacing"
        ],
        "from": "@/design-system",
        "line": 69
      },
      {
        "type": "named",
        "names": [
          "getButtonStyles",
          "getInputStyles"
        ],
        "from": "@/design-system",
        "line": 77
      },
      {
        "type": "named",
        "names": [
          "getSectoralBadgeColor",
          "getHouseholdTypeStyle"
        ],
        "from": "@/design-system",
        "line": 93
      }
    ],
    "src/design-system/tokens/Colors/Colors.stories.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 2
      }
    ],
    "src/design-system/tokens/Colors/index.ts": [],
    "src/design-system/tokens/Layout/Layout.stories.tsx": [],
    "src/design-system/tokens/Layout/Layout.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/design-system/tokens/Layout/index.ts": [],
    "src/design-system/tokens/Shadows/Shadows.stories.tsx": [],
    "src/design-system/tokens/Shadows/Shadows.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/design-system/tokens/Shadows/index.ts": [],
    "src/design-system/tokens/Spacing/Spacing.stories.tsx": [],
    "src/design-system/tokens/Spacing/Spacing.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/design-system/tokens/Spacing/index.ts": [],
    "src/design-system/tokens/Typography/Typography.stories.tsx": [],
    "src/design-system/tokens/Typography/Typography.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/design-system/tokens/Typography/index.ts": [],
    "src/design-system/tokens/index.ts": [],
    "src/design-system/tokens.ts": [],
    "src/design-system/utils.ts": [
      {
        "type": "named",
        "names": [
          "designTokens"
        ],
        "from": "./tokens",
        "line": 6
      }
    ],
    "src/hooks/accessibility/index.ts": [],
    "src/hooks/accessibility/useFieldAccessibility.ts": [
      {
        "type": "named",
        "names": [
          "useMemo"
        ],
        "from": "react",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "generateId"
        ],
        "from": "@/lib/utilities/id-generators",
        "line": 6
      }
    ],
    "src/hooks/api/useGeographicData.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useCallback"
        ],
        "from": "react",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 7
      }
    ],
    "src/hooks/command-menu/index.ts": [],
    "src/hooks/command-menu/useCommandMenu.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useCallback",
          "useMemo"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useRouter"
        ],
        "from": "next/navigation",
        "line": 4
      }
    ],
    "src/hooks/command-menu/useCommandMenuActions.ts": [
      {
        "type": "named",
        "names": [
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useRouter"
        ],
        "from": "next/navigation",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "toast"
        ],
        "from": "react-hot-toast",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "exportData",
          "backupData",
          "createResident",
          "createHousehold",
          "findSeniorCitizens",
          "findPWDs",
          "findSoloParents",
          "generateCertificate",
          "generateReport"
        ],
        "from": "@/lib/command-menu",
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "trackNavigation",
          "trackAction"
        ],
        "from": "@/lib/data",
        "line": 25
      },
      {
        "type": "named",
        "names": [
          "trackCommandMenuNavigation",
          "trackCommandMenuAction"
        ],
        "from": "@/lib/command-menu",
        "line": 26
      },
      {
        "type": "named",
        "names": [
          "useAsyncErrorBoundary"
        ],
        "from": "../utilities/useAsyncErrorBoundary",
        "line": 30
      }
    ],
    "src/hooks/command-menu/useCommandMenuRecents.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "toast"
        ],
        "from": "react-hot-toast",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "getRecentApiItems as getRecentItems",
          "clearRecentApiItems as clearRecentItems"
        ],
        "from": "@/lib/command-menu",
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "useAsyncErrorBoundary"
        ],
        "from": "../utilities/useAsyncErrorBoundary",
        "line": 14
      }
    ],
    "src/hooks/command-menu/useCommandMenuSearch.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "searchData"
        ],
        "from": "@/lib/command-menu",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "trackSearch"
        ],
        "from": "@/lib/data",
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "trackCommandMenuSearch",
          "trackCommandMenuError"
        ],
        "from": "@/lib/command-menu",
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "useAsyncErrorBoundary"
        ],
        "from": "../utilities/useAsyncErrorBoundary",
        "line": 15
      }
    ],
    "src/hooks/command-menu/useCommandMenuWithApi.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useCallback",
          "useMemo"
        ],
        "from": "react",
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "getCommandMenuItems"
        ],
        "from": "@/lib/command-menu",
        "line": 18
      },
      {
        "type": "named",
        "names": [
          "useCommandMenuSearch",
          "type UseCommandMenuSearchReturn"
        ],
        "from": "./useCommandMenuSearch",
        "line": 19
      },
      {
        "type": "named",
        "names": [
          "useCommandMenuRecents",
          "type UseCommandMenuRecentsReturn"
        ],
        "from": "./useCommandMenuRecents",
        "line": 23
      },
      {
        "type": "named",
        "names": [
          "useCommandMenuActions",
          "type UseCommandMenuActionsReturn"
        ],
        "from": "./useCommandMenuActions",
        "line": 27
      },
      {
        "type": "named",
        "names": [
          "useCommandMenu"
        ],
        "from": "./useCommandMenu",
        "line": 31
      }
    ],
    "src/hooks/crud/index.ts": [],
    "src/hooks/crud/useHouseholdCrud.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "householdService",
          "HouseholdFormData"
        ],
        "from": "@/services/household.service",
        "line": 11
      }
    ],
    "src/hooks/crud/useHouseholds.ts": [
      {
        "type": "named",
        "names": [
          "useQuery",
          "useQueryClient"
        ],
        "from": "@tanstack/react-query",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "HouseholdRecord"
        ],
        "from": "@/types",
        "line": 12
      }
    ],
    "src/hooks/crud/useResidentOperations.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "residentService",
          "ResidentFormData"
        ],
        "from": "@/services/resident.service",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useCSRFToken"
        ],
        "from": "@/lib/auth",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 13
      }
    ],
    "src/hooks/crud/useResidents.ts": [
      {
        "type": "named",
        "names": [
          "useQuery",
          "useQueryClient"
        ],
        "from": "@tanstack/react-query",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "ResidentRecord"
        ],
        "from": "@/types/database",
        "line": 12
      }
    ],
    "src/hooks/dashboard/index.ts": [],
    "src/hooks/dashboard/useDashboard.ts": [
      {
        "type": "named",
        "names": [
          "useMemo"
        ],
        "from": "react",
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "useDashboardApi",
          "type DashboardResponse",
          "type DashboardStats",
          "type AgeGroup"
        ],
        "from": "./useDashboardApi",
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "useDashboardCalculations",
          "type UseDashboardCalculationsReturn"
        ],
        "from": "./useDashboardCalculations",
        "line": 21
      }
    ],
    "src/hooks/dashboard/useDashboardApi.ts": [
      {
        "type": "named",
        "names": [
          "useQuery",
          "useQueryClient"
        ],
        "from": "@tanstack/react-query",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useAsyncErrorBoundary"
        ],
        "from": "../utilities/useAsyncErrorBoundary",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useRetryLogic",
          "RetryStrategies"
        ],
        "from": "../utilities/useRetryLogic",
        "line": 12
      }
    ],
    "src/hooks/dashboard/useDashboardCalculations.ts": [
      {
        "type": "named",
        "names": [
          "useMemo"
        ],
        "from": "react",
        "line": 10
      }
    ],
    "src/hooks/index.ts": [],
    "src/hooks/search/index.ts": [],
    "src/hooks/search/useFormSearches.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "PsocOption",
          "PsgcOption"
        ],
        "from": "@/types",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "HouseholdOption"
        ],
        "from": "@/types",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "formatPsocOption",
          "formatPsgcOption"
        ],
        "from": "@/services/residentMapper",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "searchHouseholdsCached"
        ],
        "from": "@/services/household-fetcher",
        "line": 7
      }
    ],
    "src/hooks/search/useGenericPaginatedSearch.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useDebounce"
        ],
        "from": "../utilities/useDebounce",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "PaginatedSearchConfig",
          "PaginatedSearchState",
          "PaginatedSearchFunction",
          "createPaginatedSearchState",
          "createPaginatedSearchExecutor",
          "createPaginatedSearchUtilities",
          ""
        ],
        "from": "@/lib/utilities/search-utilities",
        "line": 12
      }
    ],
    "src/hooks/search/useGenericSearch.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useMemo",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useDebounce"
        ],
        "from": "../utilities/useDebounce",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "BaseSearchConfig",
          "SearchState",
          "SearchFunction",
          "createSearchState",
          "createSearchUtilities",
          ""
        ],
        "from": "@/lib/utilities/search-utilities",
        "line": 12
      }
    ],
    "src/hooks/search/useOptimizedHouseholdSearch.ts": [
      {
        "type": "named",
        "names": [
          "useCallback",
          "useState"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useGenericSearch"
        ],
        "from": "./useGenericSearch",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useSearchCache",
          "searchFormatters"
        ],
        "from": "@/lib/utilities/search-utilities",
        "line": 13
      }
    ],
    "src/hooks/search/useOptimizedPsgcSearch.ts": [
      {
        "type": "named",
        "names": [
          "useCallback",
          "useState"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useGenericSearch"
        ],
        "from": "./useGenericSearch",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useSearchCache",
          "searchFormatters"
        ],
        "from": "@/lib/utilities/search-utilities",
        "line": 12
      }
    ],
    "src/hooks/search/useStreetsSearch.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useCallback"
        ],
        "from": "react",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "useQuery"
        ],
        "from": "@tanstack/react-query",
        "line": 2
      }
    ],
    "src/hooks/search/useSubdivisionsSearch.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useCallback"
        ],
        "from": "react",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "useQuery"
        ],
        "from": "@tanstack/react-query",
        "line": 2
      }
    ],
    "src/hooks/ui/useCommandMenu.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useCallback",
          "useMemo"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/hooks/ui/useCommandMenuWithApi.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useCallback",
          "useMemo"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useRouter"
        ],
        "from": "next/navigation",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "toast"
        ],
        "from": "react-hot-toast",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "getCommandMenuItems",
          "getAllCommandMenuItems"
        ],
        "from": "@/lib/command-menu/items-utils",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "searchData",
          "exportData",
          "backupData",
          "getRecentItems",
          "clearRecentItems",
          "createResident",
          "createHousehold",
          "findSeniorCitizens",
          "findPWDs",
          "findSoloParents",
          "generateCertificate",
          "generateReport"
        ],
        "from": "@/lib/command-menu/api-utils",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "trackSearch",
          "trackNavigation",
          "trackAction"
        ],
        "from": "@/lib/data",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "trackCommandMenuSearch",
          "trackCommandMenuNavigation",
          "trackCommandMenuAction",
          "trackCommandMenuError"
        ],
        "from": "@/lib/command-menu/analytics-utils",
        "line": 10
      }
    ],
    "src/hooks/utilities/createValidationHook.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback",
          "useMemo"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "z",
          "ZodSchema",
          "ZodError"
        ],
        "from": "zod",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useAsyncErrorBoundary"
        ],
        "from": "../utilities/useAsyncErrorBoundary",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useLogger"
        ],
        "from": "../utilities/useLogger",
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "ZodValidationResult"
        ],
        "from": "@/lib/validation/types",
        "line": 14
      }
    ],
    "src/hooks/utilities/index.ts": [],
    "src/hooks/utilities/useAddressResolution.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback",
          "useEffect"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 13
      }
    ],
    "src/hooks/utilities/useAsyncErrorBoundary.ts": [
      {
        "type": "named",
        "names": [
          "useCallback",
          "useState"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useRetryLogic",
          "RetryStrategies"
        ],
        "from": "./useRetryLogic",
        "line": 11
      }
    ],
    "src/hooks/utilities/useAsyncUtils.ts": [
      {
        "type": "named",
        "names": [
          "useCallback",
          "useRef",
          "useEffect"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "debounce",
          "throttle",
          "retry"
        ],
        "from": "@/lib/utilities/async-utils",
        "line": 11
      }
    ],
    "src/hooks/utilities/useConnectionStatus.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "syncQueue"
        ],
        "from": "@/lib/data",
        "line": 11
      }
    ],
    "src/hooks/utilities/useDebounce.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/hooks/utilities/useFieldErrorHandler.ts": [
      {
        "type": "named",
        "names": [
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "logError"
        ],
        "from": "@/lib/error-handling",
        "line": 11
      }
    ],
    "src/hooks/utilities/useFormSubmission.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useResidentFormValidation"
        ],
        "from": "../validation/useOptimizedResidentValidation",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "createFormSubmitHandler"
        ],
        "from": "@/lib/forms",
        "line": 8
      }
    ],
    "src/hooks/utilities/useHouseholdCodeGeneration.ts": [
      {
        "type": "named",
        "names": [
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 13
      }
    ],
    "src/hooks/utilities/useHouseholdForm.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      }
    ],
    "src/hooks/utilities/useLastVisitedPage.ts": [
      {
        "type": "named",
        "names": [
          "useEffect"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "usePathname"
        ],
        "from": "next/navigation",
        "line": 4
      }
    ],
    "src/hooks/utilities/useLogger.ts": [
      {
        "type": "named",
        "names": [
          "useCallback",
          "useRef"
        ],
        "from": "react",
        "line": 10
      }
    ],
    "src/hooks/utilities/useMigrationInformation.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback",
          "useEffect"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "usePsgcSearch",
          "PsgcSearchResult"
        ],
        "from": "../search/useOptimizedPsgcSearch",
        "line": 4
      }
    ],
    "src/hooks/utilities/usePerformanceMonitor.ts": [
      {
        "type": "named",
        "names": [
          "useRef",
          "useEffect",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useLogger"
        ],
        "from": "./useLogger",
        "line": 11
      }
    ],
    "src/hooks/utilities/usePersistedState.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect"
        ],
        "from": "react",
        "line": 3
      }
    ],
    "src/hooks/utilities/usePreloadOnHover.ts": [
      {
        "type": "named",
        "names": [
          "preloadComponents"
        ],
        "from": "@/lib",
        "line": 24
      }
    ],
    "src/hooks/utilities/useResidentAsyncValidation.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback",
          "useRef"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "asyncValidationUtils"
        ],
        "from": "@/lib/validation/utilities",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useAsyncErrorBoundary"
        ],
        "from": "./useAsyncErrorBoundary",
        "line": 12
      }
    ],
    "src/hooks/utilities/useResidentCrossFieldValidation.ts": [
      {
        "type": "named",
        "names": [
          "useMemo"
        ],
        "from": "react",
        "line": 10
      }
    ],
    "src/hooks/utilities/useResidentSubmission.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useQueryClient"
        ],
        "from": "@tanstack/react-query",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "ValidationResult"
        ],
        "from": "@/lib/validation",
        "line": 12
      }
    ],
    "src/hooks/utilities/useRetryLogic.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback",
          "useRef"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useLogger"
        ],
        "from": "./useLogger",
        "line": 11
      }
    ],
    "src/hooks/utilities/useSelector.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect",
          "useRef",
          "useCallback"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 4
      }
    ],
    "src/hooks/utilities/useUserBarangay.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useEffect"
        ],
        "from": "react",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "getCompleteAddress",
          "type AddressHierarchy"
        ],
        "from": "@/lib/database",
        "line": 5
      }
    ],
    "src/hooks/validation/index.ts": [],
    "src/hooks/validation/useGenericValidation.ts": [
      {
        "type": "named",
        "names": [
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "ValidationResult",
          "FieldValidationResult",
          "BaseValidationConfig",
          "ValidateFormFunction",
          "ValidateFieldFunction",
          ""
        ],
        "from": "@/lib/validation/types",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useValidationState",
          "createFormValidationExecutor",
          "createFieldValidationExecutor",
          ""
        ],
        "from": "@/lib/validation/utilities",
        "line": 18
      }
    ],
    "src/hooks/validation/useOptimizedHouseholdValidation.ts": [
      {
        "type": "named",
        "names": [
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "householdService",
          "HouseholdFormData"
        ],
        "from": "@/services/household.service",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useGenericValidation",
          "UseGenericValidationReturn",
          ""
        ],
        "from": "./useGenericValidation",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "ValidationResult",
          "FieldValidationResult",
          ""
        ],
        "from": "@/lib/validation/types",
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "toTitleCase"
        ],
        "from": "@/lib/utilities/string-utils",
        "line": 20
      }
    ],
    "src/hooks/validation/useOptimizedResidentValidation.ts": [
      {
        "type": "named",
        "names": [
          "useCallback"
        ],
        "from": "react",
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "REQUIRED_FIELDS"
        ],
        "from": "@/lib/validation/fieldLevelSchemas",
        "line": 18
      },
      {
        "type": "named",
        "names": [
          "useResidentValidationCore",
          "type ResidentValidationOptions",
          "type UseResidentValidationCoreReturn"
        ],
        "from": "./useResidentValidationCore",
        "line": 19
      },
      {
        "type": "named",
        "names": [
          "useResidentCrossFieldValidation",
          "type UseResidentCrossFieldValidationReturn"
        ],
        "from": "../utilities/useResidentCrossFieldValidation",
        "line": 24
      },
      {
        "type": "named",
        "names": [
          "useResidentAsyncValidation",
          "type UseResidentAsyncValidationReturn"
        ],
        "from": "../utilities/useResidentAsyncValidation",
        "line": 28
      },
      {
        "type": "named",
        "names": [
          "useResidentValidationProgress",
          "type UseResidentValidationProgressReturn"
        ],
        "from": "./useResidentValidationProgress",
        "line": 32
      }
    ],
    "src/hooks/validation/useResidentValidation.ts": [
      {
        "type": "named",
        "names": [
          "z"
        ],
        "from": "zod",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "createValidationHook"
        ],
        "from": "../utilities/createValidationHook",
        "line": 11
      }
    ],
    "src/hooks/validation/useResidentValidationCore.ts": [
      {
        "type": "named",
        "names": [
          "useCallback",
          "useMemo",
          "useRef",
          "useEffect",
          "useState"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "ResidentFormSchema"
        ],
        "from": "@/lib/validation",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "getFormToSchemaFieldMapping",
          "getSchemaToFormFieldMapping",
          "mapFormToApi"
        ],
        "from": "@/services/residentMapper",
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "VALIDATION_DEBOUNCE_MS"
        ],
        "from": "@/lib/constants/resident-form-defaults",
        "line": 18
      },
      {
        "type": "named",
        "names": [
          "validateField as validateFieldValue",
          "validateFormSection",
          "validateFields",
          "REQUIRED_FIELDS",
          "getRequiredFieldsForSection",
          "createDebouncedValidator"
        ],
        "from": "@/lib/validation/fieldLevelSchemas",
        "line": 19
      },
      {
        "type": "named",
        "names": [
          "useGenericValidation",
          "UseGenericValidationReturn",
          ""
        ],
        "from": "./useGenericValidation",
        "line": 27
      },
      {
        "type": "named",
        "names": [
          "ValidationResult",
          "FieldValidationResult",
          ""
        ],
        "from": "@/lib/validation/types",
        "line": 31
      },
      {
        "type": "named",
        "names": [
          "useResidentCrossFieldValidation"
        ],
        "from": "../utilities/useResidentCrossFieldValidation",
        "line": 35
      },
      {
        "type": "named",
        "names": [
          "useResidentAsyncValidation"
        ],
        "from": "../utilities/useResidentAsyncValidation",
        "line": 36
      },
      {
        "type": "named",
        "names": [
          "useResidentValidationProgress"
        ],
        "from": "./useResidentValidationProgress",
        "line": 37
      }
    ],
    "src/hooks/validation/useResidentValidationErrors.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "validateResidentData",
          "ValidationResult"
        ],
        "from": "@/lib/validation",
        "line": 11
      }
    ],
    "src/hooks/validation/useResidentValidationProgress.ts": [
      {
        "type": "named",
        "names": [
          "useMemo"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "REQUIRED_FIELDS",
          "getRequiredFieldsForSection"
        ],
        "from": "@/lib/validation/fieldLevelSchemas",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "CRITICAL_VALIDATION_FIELDS"
        ],
        "from": "@/lib/constants/resident-form-defaults",
        "line": 12
      }
    ],
    "src/hooks/workflows/index.ts": [],
    "src/hooks/workflows/useHouseholdCreationOperation.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 13
      }
    ],
    "src/hooks/workflows/useHouseholdCreationService.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "householdService",
          "HouseholdFormData"
        ],
        "from": "@/services/household.service",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useCSRFToken"
        ],
        "from": "@/lib/auth",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useAuth"
        ],
        "from": "@/contexts",
        "line": 13
      }
    ],
    "src/hooks/workflows/useHouseholdCreationWorkflow.ts": [
      {
        "type": "named",
        "names": [
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useHouseholdForm"
        ],
        "from": "../utilities/useHouseholdForm",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useHouseholdCodeGeneration"
        ],
        "from": "../utilities/useHouseholdCodeGeneration",
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "useAddressResolution"
        ],
        "from": "../utilities/useAddressResolution",
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "useHouseholdCreationOperation"
        ],
        "from": "./useHouseholdCreationOperation",
        "line": 15
      }
    ],
    "src/hooks/workflows/useHouseholdOperationsWorkflow.ts": [
      {
        "type": "named",
        "names": [
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "HouseholdFormData"
        ],
        "from": "@/services/household.service",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useHouseholdCrud",
          "UseHouseholdCrudOptions"
        ],
        "from": "../crud/useHouseholdCrud",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useHouseholdValidation"
        ],
        "from": "../validation/useOptimizedHouseholdValidation",
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "useHouseholdCreationService",
          "UseHouseholdCreationServiceOptions"
        ],
        "from": "./useHouseholdCreationService",
        "line": 14
      }
    ],
    "src/hooks/workflows/useResidentEditWorkflow.ts": [
      {
        "type": "named",
        "names": [
          "useCallback"
        ],
        "from": "react",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useResidentFormState",
          "UseResidentFormStateOptions"
        ],
        "from": "./useResidentFormState",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useResidentValidationErrors"
        ],
        "from": "../validation/useResidentValidationErrors",
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "useResidentSubmission",
          "UseResidentSubmissionOptions"
        ],
        "from": "../utilities/useResidentSubmission",
        "line": 14
      }
    ],
    "src/hooks/workflows/useResidentFormState.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback",
          "useEffect"
        ],
        "from": "react",
        "line": 10
      }
    ],
    "src/lib/analytics/index.ts": [],
    "src/lib/analytics/user-behavior.ts": [],
    "src/lib/api/auditUtils.ts": [],
    "src/lib/api/index.ts": [],
    "src/lib/api/responseUtils.ts": [],
    "src/lib/api/types.ts": [],
    "src/lib/api/validationUtils.ts": [],
    "src/lib/auth/csrf.ts": [],
    "src/lib/auth/index.ts": [],
    "src/lib/authentication/auditUtils.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "RequestContext",
          "ErrorCode"
        ],
        "from": "./types",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "side-effect",
        "names": [],
        "from": ",\n  BULK_OPERATION = ",
        "line": 54
      }
    ],
    "src/lib/authentication/auth-errors.ts": [],
    "src/lib/authentication/auth-helpers.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "../supabase/supabase",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "createLogger"
        ],
        "from": "../config/environment",
        "line": 7
      }
    ],
    "src/lib/authentication/auth.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "../supabase",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "createLogger"
        ],
        "from": "../config/environment",
        "line": 7
      }
    ],
    "src/lib/authentication/authUtils.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "NextRequest"
        ],
        "from": "next/server",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "Role",
          "ROLE_PERMISSIONS",
          "ErrorCode",
          "RequestContext"
        ],
        "from": "./types",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "v4 as uuidv4"
        ],
        "from": "uuid",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "AuthUserProfile"
        ],
        "from": "@/types/auth",
        "line": 11
      }
    ],
    "src/lib/authentication/csrf-utils.ts": [
      {
        "type": "named",
        "names": [
          "randomBytes",
          "createHash",
          "timingSafeEqual"
        ],
        "from": "crypto",
        "line": 1
      }
    ],
    "src/lib/authentication/csrf.ts": [
      {
        "type": "named",
        "names": [
          "randomBytes",
          "createHash",
          "timingSafeEqual"
        ],
        "from": "crypto",
        "line": 1
      }
    ],
    "src/lib/authentication/errors.ts": [],
    "src/lib/authentication/index.ts": [],
    "src/lib/authentication/responseUtils.ts": [
      {
        "type": "named",
        "names": [
          "NextResponse",
          "NextRequest"
        ],
        "from": "next/server",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "ApiResponse",
          "PaginatedResponse",
          "ErrorResponse",
          "ErrorCode",
          "RequestContext",
          ""
        ],
        "from": "./types",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "auditError",
          "auditSecurityViolation",
          "AuditEventType"
        ],
        "from": "../security/audit-storage",
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "sanitizeSearchQuery"
        ],
        "from": "../validation/sanitizers",
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 16
      }
    ],
    "src/lib/authentication/types.ts": [],
    "src/lib/authentication/validationUtils.ts": [
      {
        "type": "named",
        "names": [
          "z"
        ],
        "from": "zod",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "ErrorCode"
        ],
        "from": "./types",
        "line": 7
      }
    ],
    "src/lib/business-rules/index.ts": [],
    "src/lib/business-rules/resident-detail-helpers.ts": [
      {
        "type": "named",
        "names": [
          "ResidentDatabaseRecord as Resident"
        ],
        "from": "@/types",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "formatDate as libFormatDate"
        ],
        "from": "../utilities/data-transformers",
        "line": 10
      }
    ],
    "src/lib/business-rules/resident-form-rules.ts": [],
    "src/lib/business-rules/resident-helpers.ts": [
      {
        "type": "named",
        "names": [
          "ResidentWithRelations"
        ],
        "from": "@/types",
        "line": 6
      }
    ],
    "src/lib/business-rules/resident-listing-helpers.ts": [
      {
        "type": "named",
        "names": [
          "ResidentDatabaseRecord as ResidentListItem"
        ],
        "from": "@/types",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "formatDate as libFormatDate"
        ],
        "from": "../utilities/data-transformers",
        "line": 10
      }
    ],
    "src/lib/business-rules/sectoral-classification.ts": [
      {
        "type": "named",
        "names": [
          "SectoralInformation",
          "SectoralContext"
        ],
        "from": "@/types",
        "line": 7
      }
    ],
    "src/lib/charts/index.ts": [],
    "src/lib/command-menu/analytics-utils.ts": [
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 6
      }
    ],
    "src/lib/command-menu/api-utils.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "startCommandMenuSearchTimer",
          "endCommandMenuSearchTimer"
        ],
        "from": "@/lib/command-menu/analytics-utils",
        "line": 8
      }
    ],
    "src/lib/command-menu/index.ts": [],
    "src/lib/command-menu/items-utils.ts": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 2
      }
    ],
    "src/lib/config/dev-config.ts": [],
    "src/lib/config/env-config.ts": [],
    "src/lib/config/environment.ts": [],
    "src/lib/config/index.ts": [],
    "src/lib/constants/chart-sizes.ts": [],
    "src/lib/constants/form-options.ts": [],
    "src/lib/constants/generated-enums.ts": [],
    "src/lib/constants/index.ts": [],
    "src/lib/constants/resident-enums.ts": [
      {
        "type": "named",
        "names": [
          "SEX_OPTIONS as DB_SEX_OPTIONS",
          "CIVIL_STATUS_OPTIONS as DB_CIVIL_STATUS_OPTIONS",
          "CITIZENSHIP_OPTIONS as DB_CITIZENSHIP_OPTIONS",
          "EDUCATION_LEVEL_OPTIONS as DB_EDUCATION_LEVEL_OPTIONS",
          "EMPLOYMENT_STATUS_OPTIONS as DB_EMPLOYMENT_STATUS_OPTIONS",
          "BLOOD_TYPE_OPTIONS as DB_BLOOD_TYPE_OPTIONS",
          "RELIGION_OPTIONS as DB_RELIGION_OPTIONS",
          "ETHNICITY_OPTIONS as DB_ETHNICITY_OPTIONS",
          ""
        ],
        "from": "@/lib/constants/generated-enums",
        "line": 7
      }
    ],
    "src/lib/constants/resident-form-defaults.ts": [],
    "src/lib/core/index.ts": [],
    "src/lib/data/database-utils.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "../supabase",
        "line": 6
      }
    ],
    "src/lib/data/field-utils.ts": [],
    "src/lib/data/index.ts": [],
    "src/lib/data/offline-storage.ts": [],
    "src/lib/data/query-cache.ts": [
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 14
      }
    ],
    "src/lib/data/query-utils.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "logError"
        ],
        "from": "@/lib",
        "line": 2
      }
    ],
    "src/lib/data/recent-items-storage.ts": [],
    "src/lib/data/supabase.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "getSupabaseConfig",
          "validateEnvironment",
          "createLogger",
          "isProductionLike",
          ""
        ],
        "from": "../config/environment",
        "line": 7
      }
    ],
    "src/lib/data/sync-queue.ts": [
      {
        "type": "named",
        "names": [
          "offlineStorage"
        ],
        "from": "./offline-storage",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "createAppError"
        ],
        "from": "../error-handling/error-utils",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "ErrorCode",
          "ErrorSeverity"
        ],
        "from": "../error-handling/error-types",
        "line": 8
      }
    ],
    "src/lib/database/index.ts": [],
    "src/lib/error-handling/ErrorBoundaries.tsx": [
      {
        "type": "named",
        "names": [
          "logError",
          "errorUtils",
          "getErrorMessage"
        ],
        "from": "./error-utils",
        "line": 14
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 8
      }
    ],
    "src/lib/error-handling/error-types.ts": [],
    "src/lib/error-handling/error-utils.ts": [
      {
        "type": "named",
        "names": [
          "ErrorSeverity",
          "ErrorCode"
        ],
        "from": "./error-types",
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "retry"
        ],
        "from": "../utilities/async-utils",
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "generateId"
        ],
        "from": "../utilities/id-generators",
        "line": 17
      }
    ],
    "src/lib/error-handling/index.ts": [],
    "src/lib/forms/field-logic.ts": [],
    "src/lib/forms/field-renderers.tsx": [
      {
        "type": "named",
        "names": [
          "InputField",
          "SelectField",
          "ControlField"
        ],
        "from": "@/components/molecules/FieldSet",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "ReadOnlyField"
        ],
        "from": "@/components/molecules/FieldSet",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "FormMode",
          "isFieldReadOnly",
          "formatDateForDisplay",
          "formatBooleanForDisplay",
          "getSelectDisplayValue"
        ],
        "from": "@/lib/forms",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 1
      }
    ],
    "src/lib/forms/form-handlers.ts": [
      {
        "type": "named",
        "names": [
          "logError"
        ],
        "from": "../error-handling/error-utils",
        "line": 9
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 8
      }
    ],
    "src/lib/forms/index.ts": [],
    "src/lib/index.ts": [],
    "src/lib/logging/client-logger.ts": [],
    "src/lib/logging/index.ts": [],
    "src/lib/logging/secure-logger.ts": [],
    "src/lib/performance/index.ts": [],
    "src/lib/performance/optimizationUtils.ts": [
      {
        "type": "named",
        "names": [
          "useCallback",
          "useMemo",
          "useRef",
          "useEffect",
          "useState"
        ],
        "from": "react",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "logInfo"
        ],
        "from": "@/lib/logging/client-logger",
        "line": 9
      }
    ],
    "src/lib/performance/performanceMonitor.ts": [
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 16
      },
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 15
      }
    ],
    "src/lib/performance/performanceUtils.ts": [
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 1
      }
    ],
    "src/lib/performance/pwaPerformanceUtils.ts": [],
    "src/lib/search/index.ts": [],
    "src/lib/search/public-search.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "../supabase/supabase",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "createLogger"
        ],
        "from": "../config/environment",
        "line": 7
      }
    ],
    "src/lib/security/audit-storage.ts": [
      {
        "type": "named",
        "names": [
          "createClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "ErrorCode as ApiErrorCode"
        ],
        "from": "../api/types",
        "line": 8
      }
    ],
    "src/lib/security/crypto.ts": [
      {
        "type": "default",
        "names": [
          "bcrypt"
        ],
        "from": "bcryptjs",
        "line": 1
      },
      {
        "type": "default",
        "names": [
          "crypto"
        ],
        "from": "crypto",
        "line": 2
      }
    ],
    "src/lib/security/file-security.ts": [
      {
        "type": "named",
        "names": [
          "createHash"
        ],
        "from": "crypto",
        "line": 6
      }
    ],
    "src/lib/security/index.ts": [],
    "src/lib/security/rate-limit.ts": [
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "ErrorCode"
        ],
        "from": "../api/types",
        "line": 2
      }
    ],
    "src/lib/security/threat-detection.ts": [
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "storeThreatDetectionEvent",
          "ThreatDetectionEvent"
        ],
        "from": "./audit-storage",
        "line": 7
      }
    ],
    "src/lib/storage/index.ts": [],
    "src/lib/supabase/index.ts": [],
    "src/lib/supabase/supabase.ts": [],
    "src/lib/types/database.ts": [],
    "src/lib/types/forms.ts": [
      {
        "type": "named",
        "names": [
          "ReactNode"
        ],
        "from": "react",
        "line": 9
      }
    ],
    "src/lib/types/index.ts": [
      {
        "type": "namespace",
        "names": [
          "ResidentTypes"
        ],
        "from": "./resident",
        "line": 30
      }
    ],
    "src/lib/types/resident-detail.ts": [],
    "src/lib/types/resident-listing.ts": [
      {
        "type": "named",
        "names": [
          "Resident"
        ],
        "from": "./resident-detail",
        "line": 9
      }
    ],
    "src/lib/types/resident.ts": [],
    "src/lib/ui/accessibility.ts": [
      {
        "type": "named",
        "names": [
          "useEffect",
          "useRef",
          "useCallback"
        ],
        "from": "react",
        "line": 8
      }
    ],
    "src/lib/ui/chart-transformers.ts": [],
    "src/lib/ui/colorGenerator.ts": [],
    "src/lib/ui/index.ts": [],
    "src/lib/ui/lazy-components-alt.tsx": [
      {
        "type": "named",
        "names": [
          "ErrorBoundary"
        ],
        "from": "@/providers/ErrorBoundary",
        "line": 15
      }
    ],
    "src/lib/ui/lazy-components.tsx": [
      {
        "type": "named",
        "names": [
          "ErrorBoundary"
        ],
        "from": "@/providers/ErrorBoundary",
        "line": 15
      }
    ],
    "src/lib/ui/lazy-loading.tsx": [
      {
        "type": "named",
        "names": [
          "Suspense",
          "ComponentType",
          "ReactNode"
        ],
        "from": "react",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "LoadingFallback"
        ],
        "from": "@/components/atoms/Loading",
        "line": 9
      }
    ],
    "src/lib/ui/pieChartMath.ts": [],
    "src/lib/ui/population-pyramid.ts": [],
    "src/lib/ui/typography.ts": [],
    "src/lib/utilities/address-lookup.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 1
      }
    ],
    "src/lib/utilities/async-utils.ts": [
      {
        "type": "named",
        "names": [
          "createAppError"
        ],
        "from": "../error-handling/error-utils",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "ErrorCode",
          "ErrorSeverity"
        ],
        "from": "../error-handling/error-types",
        "line": 7
      }
    ],
    "src/lib/utilities/css-utils.ts": [
      {
        "type": "named",
        "names": [
          "type ClassValue",
          "clsx"
        ],
        "from": "clsx",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "twMerge"
        ],
        "from": "tailwind-merge",
        "line": 7
      }
    ],
    "src/lib/utilities/data-transformers.ts": [],
    "src/lib/utilities/file-utils.ts": [
      {
        "type": "named",
        "names": [
          "formatFileSize",
          "isImageFile",
          "exceedsMaxSize"
        ],
        "from": "@/lib/utilities/file-utils",
        "line": 9
      }
    ],
    "src/lib/utilities/id-generators.ts": [],
    "src/lib/utilities/index.ts": [],
    "src/lib/utilities/search-utilities.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback",
          "useEffect",
          "useMemo"
        ],
        "from": "react",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "useDebounce"
        ],
        "from": "@/hooks/utilities/useDebounce",
        "line": 9
      }
    ],
    "src/lib/utilities/string-utils.ts": [],
    "src/lib/validation/fieldLevelSchemas.ts": [
      {
        "type": "named",
        "names": [
          "z"
        ],
        "from": "zod",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "isValidPhilSysCardNumber",
          "isValidMobileNumber",
          "isValidBirthdate"
        ],
        "from": "@/lib/business-rules",
        "line": 6
      }
    ],
    "src/lib/validation/fieldValidators.ts": [],
    "src/lib/validation/formValidators.ts": [],
    "src/lib/validation/generated-schemas.ts": [
      {
        "type": "named",
        "names": [
          "z"
        ],
        "from": "zod",
        "line": 11
      }
    ],
    "src/lib/validation/index.ts": [],
    "src/lib/validation/resident-schema.ts": [
      {
        "type": "named",
        "names": [
          "z"
        ],
        "from": "zod",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "sexSchema",
          "civil_statusSchema",
          "citizenshipSchema",
          "education_levelSchema",
          "employment_statusSchema",
          "blood_typeSchema",
          "religionSchema",
          "ethnicitySchema",
          "income_classSchema"
        ],
        "from": "@/lib/validation/generated-schemas",
        "line": 7
      }
    ],
    "src/lib/validation/sanitizers.ts": [],
    "src/lib/validation/schemas.ts": [
      {
        "type": "named",
        "names": [
          "createFormValidator",
          "createFieldValidator",
          "crossFieldValidators"
        ],
        "from": "./formValidators",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "validateRequired",
          "validateEmail",
          "validatePhilippineMobile",
          "validatePhilSysNumber",
          "validateName",
          "validateAge",
          "validateLength",
          "validateRange",
          "validateDate",
          "composeValidators",
          ""
        ],
        "from": "./fieldValidators",
        "line": 11
      }
    ],
    "src/lib/validation/types.ts": [],
    "src/lib/validation/utilities.ts": [
      {
        "type": "named",
        "names": [
          "debounce"
        ],
        "from": "../utilities/async-utils",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 285
      }
    ],
    "src/lib/validation/validation.ts": [
      {
        "type": "named",
        "names": [
          "z"
        ],
        "from": "zod",
        "line": 1
      }
    ],
    "src/middleware.ts": [
      {
        "type": "named",
        "names": [
          "NextResponse"
        ],
        "from": "next/server",
        "line": 1
      }
    ],
    "src/providers/AppProvider.tsx": [
      {
        "type": "named",
        "names": [
          "QueryClient",
          "QueryClientProvider"
        ],
        "from": "@tanstack/react-query",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "ReactQueryDevtools"
        ],
        "from": "@tanstack/react-query-devtools",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 6
      }
    ],
    "src/providers/ErrorBoundary.tsx": [
      {
        "type": "named",
        "names": [
          "logError"
        ],
        "from": "@/lib",
        "line": 4
      }
    ],
    "src/providers/QueryProvider.tsx": [
      {
        "type": "named",
        "names": [
          "QueryClient",
          "QueryClientProvider"
        ],
        "from": "@tanstack/react-query",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "ReactQueryDevtools"
        ],
        "from": "@tanstack/react-query-devtools",
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "PersistQueryClientProvider"
        ],
        "from": "@tanstack/react-query-persist-client",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "createSyncStoragePersister"
        ],
        "from": "@tanstack/query-sync-storage-persister",
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 13
      }
    ],
    "src/providers/components/ClientProviders/ClientProviders.tsx": [
      {
        "type": "named",
        "names": [
          "AuthProvider"
        ],
        "from": "@/contexts",
        "line": 3
      }
    ],
    "src/providers/components/ClientProviders/index.ts": [],
    "src/providers/components/LastVisitedTracker.tsx": [
      {
        "type": "named",
        "names": [
          "useLastVisitedPage"
        ],
        "from": "@/hooks/utilities",
        "line": 3
      }
    ],
    "src/providers/components/Providers/Providers.tsx": [
      {
        "type": "named",
        "names": [
          "AuthProvider"
        ],
        "from": "@/contexts",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "ThemeProvider"
        ],
        "from": "@/contexts",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "ErrorBoundary"
        ],
        "from": "../../ErrorBoundary",
        "line": 6
      },
      {
        "type": "default",
        "names": [
          "QueryProvider"
        ],
        "from": "@/providers/QueryProvider",
        "line": 5
      }
    ],
    "src/providers/components/Providers/index.ts": [],
    "src/providers/components/index.ts": [],
    "src/providers/index.tsx": [
      {
        "type": "named",
        "names": [
          "AppProvider"
        ],
        "from": "./AppProvider",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "ErrorBoundary"
        ],
        "from": "./ErrorBoundary",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "RootProvider"
        ],
        "from": "@/providers",
        "line": 33
      }
    ],
    "src/services/auth/auth-errors.ts": [],
    "src/services/auth/auth-helpers.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib/supabase/supabase",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "createLogger"
        ],
        "from": "@/lib/config/environment",
        "line": 7
      }
    ],
    "src/services/auth/auth.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "createLogger"
        ],
        "from": "@/lib/config/environment",
        "line": 7
      }
    ],
    "src/services/auth/csrf-utils.ts": [
      {
        "type": "named",
        "names": [
          "randomBytes",
          "createHash",
          "timingSafeEqual"
        ],
        "from": "crypto",
        "line": 1
      }
    ],
    "src/services/auth/csrf.ts": [
      {
        "type": "named",
        "names": [
          "randomBytes",
          "createHash",
          "timingSafeEqual"
        ],
        "from": "crypto",
        "line": 1
      }
    ],
    "src/services/auth/errors.ts": [],
    "src/services/auth/index.ts": [],
    "src/services/base-repository.ts": [
      {
        "type": "named",
        "names": [
          "createClient",
          "SupabaseClient"
        ],
        "from": "@supabase/supabase-js",
        "line": 24
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 25
      },
      {
        "type": "named",
        "names": [
          "storeSecurityAuditLog"
        ],
        "from": "@/lib/security/audit-storage",
        "line": 26
      }
    ],
    "src/services/charts/chart-transformers.ts": [
      {
        "type": "named",
        "names": [
          "transformSexData",
          "ChartDataPoint"
        ],
        "from": "./chart-transformers",
        "line": 22
      }
    ],
    "src/services/charts/index.ts": [],
    "src/services/command-menu/analytics-utils.ts": [
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 6
      }
    ],
    "src/services/command-menu/api-utils.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "startCommandMenuSearchTimer",
          "endCommandMenuSearchTimer"
        ],
        "from": "@/lib/command-menu/analytics-utils",
        "line": 8
      }
    ],
    "src/services/command-menu/index.ts": [],
    "src/services/command-menu/items-utils.ts": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 2
      }
    ],
    "src/services/formDataTransformers.ts": [
      {
        "type": "named",
        "names": [
          "MigrationInformationData"
        ],
        "from": "@/hooks/utilities/useMigrationInformation",
        "line": 6
      }
    ],
    "src/services/geographic.service.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError"
        ],
        "from": "@/lib",
        "line": 7
      }
    ],
    "src/services/household-fetcher.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "HouseholdData",
          "HouseholdHead",
          "HouseholdOption"
        ],
        "from": "@/types",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "formatHouseholdOption"
        ],
        "from": "@/services/residentMapper",
        "line": 8
      }
    ],
    "src/services/household-repository.ts": [
      {
        "type": "named",
        "names": [
          "BaseRepository",
          "type QueryOptions",
          "type RepositoryResult"
        ],
        "from": "./base-repository",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "validateHouseholdData"
        ],
        "from": "@/lib/validation/schemas",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "HouseholdRecord"
        ],
        "from": "@/types",
        "line": 10
      }
    ],
    "src/services/household.service.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError",
          "dbLogger"
        ],
        "from": "@/lib",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "HouseholdRecord"
        ],
        "from": "@/types",
        "line": 12
      }
    ],
    "src/services/index.ts": [
      {
        "type": "named",
        "names": [
          "ResidentRepository"
        ],
        "from": "./resident-repository",
        "line": 50
      },
      {
        "type": "named",
        "names": [
          "HouseholdRepository"
        ],
        "from": "./household-repository",
        "line": 51
      },
      {
        "type": "named",
        "names": [
          "UserRepository"
        ],
        "from": "./user-repository",
        "line": 52
      }
    ],
    "src/services/resident-details-fetcher.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "logger"
        ],
        "from": "@/lib",
        "line": 7
      }
    ],
    "src/services/resident-repository.ts": [
      {
        "type": "named",
        "names": [
          "BaseRepository",
          "type QueryOptions",
          "type RepositoryResult"
        ],
        "from": "./base-repository",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "validateResidentData"
        ],
        "from": "@/lib/validation/schemas",
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "ResidentRecord"
        ],
        "from": "@/types/database",
        "line": 9
      }
    ],
    "src/services/resident.service.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "hashPhilSysNumber",
          "extractPhilSysLast4",
          "validatePhilSysFormat",
          "logSecurityOperation",
          ""
        ],
        "from": "@/lib/security/crypto",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "validateResidentData"
        ],
        "from": "@/lib/validation",
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "logger",
          "logError",
          "dbLogger"
        ],
        "from": "@/lib",
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "ResidentRecord"
        ],
        "from": "@/types/database",
        "line": 20
      }
    ],
    "src/services/residentMapper.ts": [
      {
        "type": "named",
        "names": [
          "ResidentFormData",
          "ResidentApiData",
          "ResidentWithRelations",
          "PsocOption",
          "PsgcOption"
        ],
        "from": "@/types",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "HouseholdData",
          "HouseholdHead",
          "HouseholdOption"
        ],
        "from": "@/types",
        "line": 13
      }
    ],
    "src/services/search/index.ts": [],
    "src/services/search/public-search.ts": [
      {
        "type": "named",
        "names": [
          "supabase"
        ],
        "from": "@/lib/supabase/supabase",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "createLogger"
        ],
        "from": "@/lib/config/environment",
        "line": 7
      }
    ],
    "src/services/statistics/index.ts": [],
    "src/services/statistics/population-pyramid.ts": [],
    "src/services/user-repository.ts": [
      {
        "type": "named",
        "names": [
          "BaseRepository",
          "type QueryOptions",
          "type RepositoryResult"
        ],
        "from": "./base-repository",
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "validateUserData"
        ],
        "from": "@/lib/validation/schemas",
        "line": 7
      }
    ],
    "src/stories/atoms/Badge/Badge.stories.tsx": [
      {
        "type": "named",
        "names": [
          "Badge"
        ],
        "from": "@/components/atoms/Badge",
        "line": 2
      }
    ],
    "src/stories/atoms/Button/Button.stories.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components/atoms/Button",
        "line": 2
      }
    ],
    "src/stories/atoms/Chart/ChartContainer/ChartContainer.stories.tsx": [
      {
        "type": "default",
        "names": [
          "ChartContainer"
        ],
        "from": "@/components/atoms/ChartContainer",
        "line": 2
      }
    ],
    "src/stories/atoms/Chart/ChartEmptyState/ChartEmptyState.stories.tsx": [
      {
        "type": "default",
        "names": [
          "ChartEmptyState"
        ],
        "from": "@/components/atoms/ChartEmptyState",
        "line": 2
      }
    ],
    "src/stories/atoms/Chart/ChartLegend/ChartLegend.stories.tsx": [
      {
        "type": "default",
        "names": [
          "ChartLegend"
        ],
        "from": "@/components/atoms/ChartLegend",
        "line": 3
      }
    ],
    "src/stories/atoms/Chart/ChartTitle/ChartTitle.stories.tsx": [
      {
        "type": "default",
        "names": [
          "ChartTitle"
        ],
        "from": "@/components/atoms/ChartTitle",
        "line": 2
      }
    ],
    "src/stories/atoms/Chart/ChartTooltip/ChartTooltip.stories.tsx": [
      {
        "type": "default",
        "names": [
          "ChartTooltip"
        ],
        "from": "@/components/atoms/ChartTooltip",
        "line": 2
      }
    ],
    "src/stories/atoms/Field/Control/Checkbox/Checkbox.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Checkbox"
        ],
        "from": "@/components/atoms/Checkbox",
        "line": 3
      }
    ],
    "src/stories/atoms/Field/Control/Control.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Control"
        ],
        "from": "@/components/atoms/Control",
        "line": 3
      }
    ],
    "src/stories/atoms/Field/Control/Radio/Radio.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Radio",
          "RadioGroup"
        ],
        "from": "@/components/atoms/Radio",
        "line": 3
      }
    ],
    "src/stories/atoms/Field/Control/TitleDescription.stories.tsx": [
      {
        "type": "named",
        "names": [
          "TitleDescription"
        ],
        "from": "@/components/atoms/TitleDescription",
        "line": 2
      }
    ],
    "src/stories/atoms/Field/Control/Toggle/Toggle.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Toggle"
        ],
        "from": "@/components/atoms/Toggle",
        "line": 3
      }
    ],
    "src/stories/atoms/Field/HelperText/HelperText.stories.tsx": [
      {
        "type": "named",
        "names": [
          "HelperText"
        ],
        "from": "@/components/atoms/HelperText",
        "line": 2
      }
    ],
    "src/stories/atoms/Field/Input/Input.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Input"
        ],
        "from": "@/components/atoms/Input",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "Input"
        ],
        "from": "@/components",
        "line": 57
      }
    ],
    "src/stories/atoms/Field/Label/Label.stories.tsx": [
      {
        "type": "named",
        "names": [
          "Label"
        ],
        "from": "@/components/atoms/Label",
        "line": 2
      }
    ],
    "src/stories/atoms/Field/ReadOnly/ReadOnly.stories.tsx": [
      {
        "type": "named",
        "names": [
          "ReadOnly"
        ],
        "from": "@/components/atoms/ReadOnly",
        "line": 2
      }
    ],
    "src/stories/atoms/Field/Select/Option/Option.stories.tsx": [
      {
        "type": "named",
        "names": [
          "Option"
        ],
        "from": "@/components/atoms/Option",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Option"
        ],
        "from": "@/components",
        "line": 23
      }
    ],
    "src/stories/atoms/Field/Select/Select.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback",
          "useMemo",
          "useRef",
          "useEffect"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "SEX_OPTIONS",
          "CIVIL_STATUS_OPTIONS",
          "CITIZENSHIP_OPTIONS",
          "EDUCATION_LEVEL_OPTIONS",
          "EMPLOYMENT_STATUS_OPTIONS"
        ],
        "from": "@/lib/constants/resident-enums",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "withAuthenticatedSupabase",
          "withUnauthenticatedSupabase",
          "mockPSGCData",
          "mockPSOCData"
        ],
        "from": "@/../.storybook/decorators/SupabaseDecorator",
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "Select"
        ],
        "from": "@/components/atoms/Field",
        "line": 38
      },
      {
        "type": "named",
        "names": [
          "SEX_OPTIONS"
        ],
        "from": "@/lib/constants/resident-enums",
        "line": 39
      },
      {
        "type": "default",
        "names": [
          "Select"
        ],
        "from": "@/components/atoms/Select",
        "line": 3
      }
    ],
    "src/stories/atoms/Field/Textarea/Textarea.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Textarea"
        ],
        "from": "@/components/atoms/Textarea",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "Textarea"
        ],
        "from": "@/components",
        "line": 25
      }
    ],
    "src/stories/atoms/Link/Link.stories.tsx": [
      {
        "type": "named",
        "names": [
          "Link"
        ],
        "from": "@/components/atoms/Link",
        "line": 2
      }
    ],
    "src/stories/atoms/SkipNavigation/SkipNavigation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "SkipNavigation",
          "SkipLinks"
        ],
        "from": "@/components/atoms/SkipNavigation",
        "line": 2
      }
    ],
    "src/stories/index.ts": [],
    "src/stories/molecules/AccessibleModal/AccessibleModal.stories.tsx": [
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components/molecules/Button",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 4
      },
      {
        "type": "default",
        "names": [
          "AccessibleModal"
        ],
        "from": "@/components/molecules/AccessibleModal",
        "line": 2
      }
    ],
    "src/stories/molecules/ButtonGroup/ButtonGroup.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "ButtonGroup"
        ],
        "from": "@/components/molecules/ButtonGroup",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 4
      }
    ],
    "src/stories/molecules/CivilStatusPieChart/CivilStatusPieChart.stories.tsx": [
      {
        "type": "default",
        "names": [
          "CivilStatusPieChart"
        ],
        "from": "@/components/molecules/CivilStatusPieChart",
        "line": 2
      }
    ],
    "src/stories/molecules/CommandMenu/CommandMenu.stories.tsx": [
      {
        "type": "named",
        "names": [
          "CommandMenu"
        ],
        "from": "@/components/molecules/CommandMenu",
        "line": 3
      }
    ],
    "src/stories/molecules/CommandMenu/CommandMenuEmpty.stories.tsx": [
      {
        "type": "named",
        "names": [
          "CommandMenuEmpty"
        ],
        "from": "@/components/molecules/CommandMenuEmpty",
        "line": 2
      }
    ],
    "src/stories/molecules/CommandMenu/InlineCommandMenu.stories.tsx": [
      {
        "type": "named",
        "names": [
          "InlineCommandMenu"
        ],
        "from": "@/components/molecules/InlineCommandMenu",
        "line": 2
      }
    ],
    "src/stories/molecules/DependencyRatioPieChart/DependencyRatioPieChart.stories.tsx": [
      {
        "type": "default",
        "names": [
          "DependencyRatioPieChart"
        ],
        "from": "@/components/molecules/DependencyRatioPieChart",
        "line": 2
      }
    ],
    "src/stories/molecules/EmploymentStatusPieChart/EmploymentStatusPieChart.stories.tsx": [
      {
        "type": "default",
        "names": [
          "EmploymentStatusPieChart"
        ],
        "from": "@/components/molecules/EmploymentStatusPieChart",
        "line": 2
      }
    ],
    "src/stories/molecules/ErrorModal/ErrorModal.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "ErrorModal"
        ],
        "from": "@/components/molecules/ErrorModal",
        "line": 3
      }
    ],
    "src/stories/molecules/FieldSet/ControlField/ControlField.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "ControlField",
          "ControlGroup"
        ],
        "from": "@/components/molecules/ControlField",
        "line": 3
      }
    ],
    "src/stories/molecules/FieldSet/InputField/InputField.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "InputField",
          "FormGroup",
          "Form"
        ],
        "from": "@/components/molecules/InputField",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "Input",
          "Textarea"
        ],
        "from": "@/components/../../atoms/Field",
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "Checkbox",
          "Radio",
          "RadioGroup",
          "Toggle"
        ],
        "from": "@/components/../../atoms/Field",
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "Button"
        ],
        "from": "@/components",
        "line": 6
      }
    ],
    "src/stories/molecules/FieldSet/ReadOnlyField/ReadOnlyField.stories.tsx": [
      {
        "type": "named",
        "names": [
          "ReadOnlyField"
        ],
        "from": "@/components/molecules/ReadOnlyField",
        "line": 2
      }
    ],
    "src/stories/molecules/FieldSet/SelectField/SelectField.stories.tsx": [
      {
        "type": "named",
        "names": [
          "SelectField"
        ],
        "from": "@/components/molecules/SelectField",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "SelectOption"
        ],
        "from": "@/components/../Select",
        "line": 3
      }
    ],
    "src/stories/molecules/FileUpload/FileUpload.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "FileUpload"
        ],
        "from": "@/components/molecules/FileUpload",
        "line": 3
      }
    ],
    "src/stories/molecules/GenericPieChart/GenericPieChart.stories.tsx": [
      {
        "type": "default",
        "names": [
          "GenericPieChart"
        ],
        "from": "@/components/molecules/GenericPieChart",
        "line": 2
      }
    ],
    "src/stories/molecules/SearchBar/SearchBar.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "SearchBar"
        ],
        "from": "@/components/molecules/SearchBar",
        "line": 3
      }
    ],
    "src/stories/molecules/SexDistributionPieChart/SexDistributionPieChart.stories.tsx": [
      {
        "type": "default",
        "names": [
          "SexDistributionPieChart"
        ],
        "from": "@/components/molecules/SexDistributionPieChart",
        "line": 2
      }
    ],
    "src/stories/molecules/StatisticsChart/StatisticsChart.stories.tsx": [
      {
        "type": "default",
        "names": [
          "StatisticsChart"
        ],
        "from": "@/components/molecules/StatisticsChart",
        "line": 2
      }
    ],
    "src/stories/molecules/StatsCard/StatsCard.stories.tsx": [
      {
        "type": "default",
        "names": [
          "StatsCard"
        ],
        "from": "@/components/molecules/StatsCard",
        "line": 2
      }
    ],
    "src/stories/molecules/SuccessModal/SuccessModal.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "SuccessModal"
        ],
        "from": "@/components/molecules/SuccessModal",
        "line": 3
      }
    ],
    "src/stories/molecules/ThemeToggle/ThemeToggle.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "ThemeToggle"
        ],
        "from": "@/components/molecules/ThemeToggle",
        "line": 3
      }
    ],
    "src/stories/molecules/VersionTag/VersionTag.stories.tsx": [
      {
        "type": "named",
        "names": [
          "VersionTag"
        ],
        "from": "@/components/molecules/VersionTag",
        "line": 2
      }
    ],
    "src/stories/organisms/CreateHouseholdModal/CreateHouseholdModal.stories.tsx": [
      {
        "type": "named",
        "names": [
          "action"
        ],
        "from": "storybook/actions",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "CreateHouseholdModal"
        ],
        "from": "@/components/organisms/CreateHouseholdModal",
        "line": 3
      }
    ],
    "src/stories/organisms/DataTable/DataTable.stories.tsx": [
      {
        "type": "named",
        "names": [
          "action"
        ],
        "from": "storybook/actions",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "DataTable"
        ],
        "from": "@/components/organisms/DataTable",
        "line": 3
      }
    ],
    "src/stories/organisms/DevLogin/DevLogin.stories.tsx": [
      {
        "type": "named",
        "names": [
          "fn",
          "within",
          "expect"
        ],
        "from": "storybook/test",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "DevLogin"
        ],
        "from": "@/components/organisms/DevLogin",
        "line": 3
      }
    ],
    "src/stories/organisms/Form/Household/HouseholdDetails/HouseholdDetails.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "HouseholdDetails"
        ],
        "from": "@/components/organisms/HouseholdDetails",
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "HouseholdDetailsData"
        ],
        "from": "@/components/types",
        "line": 4
      }
    ],
    "src/stories/organisms/Form/Household/HouseholdForm.stories.tsx": [
      {
        "type": "named",
        "names": [
          "HouseholdForm"
        ],
        "from": "@/components/organisms/HouseholdForm",
        "line": 2
      }
    ],
    "src/stories/organisms/Form/Resident/ContactInformation/ContactInformation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "ContactInformationForm"
        ],
        "from": "@/components/organisms/ContactInformation",
        "line": 2
      }
    ],
    "src/stories/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "ContactDetails",
          "ContactDetailsData"
        ],
        "from": "@/components/organisms/ContactDetails",
        "line": 3
      }
    ],
    "src/stories/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "HouseholdInformation",
          "HouseholdInformationData"
        ],
        "from": "@/components/organisms/HouseholdInformation",
        "line": 3
      }
    ],
    "src/stories/organisms/Form/Resident/MigrationInformation/MigrationInformation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "MigrationInformation",
          "MigrationInformationData"
        ],
        "from": "@/components/organisms/MigrationInformation",
        "line": 3
      }
    ],
    "src/stories/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "BasicInformation",
          "BasicInformationData"
        ],
        "from": "@/components/organisms/BasicInformation",
        "line": 3
      }
    ],
    "src/stories/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "BirthInformation"
        ],
        "from": "@/components/organisms/BirthInformation",
        "line": 2
      }
    ],
    "src/stories/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "PhilSysCardField"
        ],
        "from": "@/components/organisms/PhilSysCardField",
        "line": 3
      }
    ],
    "src/stories/organisms/Form/Resident/PersonalInformation/PersonalInformation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "PersonalInformationForm"
        ],
        "from": "@/components/organisms/PersonalInformation",
        "line": 2
      }
    ],
    "src/stories/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "MotherMaidenName",
          "MotherMaidenNameData"
        ],
        "from": "@/components/organisms/MotherMaidenName",
        "line": 3
      }
    ],
    "src/stories/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "PhysicalCharacteristics",
          "PhysicalCharacteristicsData"
        ],
        "from": "@/components/organisms/PhysicalCharacteristics",
        "line": 3
      }
    ],
    "src/stories/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "VotingInformation",
          "VotingInformationData"
        ],
        "from": "@/components/organisms/VotingInformation",
        "line": 3
      }
    ],
    "src/stories/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.stories.tsx": [
      {
        "type": "named",
        "names": [
          "PhysicalPersonalDetailsForm"
        ],
        "from": "@/components/organisms/PhysicalPersonalDetails",
        "line": 2
      }
    ],
    "src/stories/organisms/Form/Resident/SectoralInformation/SectoralInformation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "SectoralInformationForm"
        ],
        "from": "@/components/organisms/SectoralInformation",
        "line": 2
      }
    ],
    "src/stories/organisms/HouseholdsContent/HouseholdsContent.stories.tsx": [
      {
        "type": "named",
        "names": [
          "useState"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "HouseholdsContent"
        ],
        "from": "@/components/organisms/HouseholdsContent",
        "line": 3
      }
    ],
    "src/stories/organisms/LoginForm/LoginForm.stories.tsx": [
      {
        "type": "named",
        "names": [
          "fn"
        ],
        "from": "storybook/test",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "LoginForm"
        ],
        "from": "@/components/organisms/LoginForm",
        "line": 3
      }
    ],
    "src/stories/organisms/Navigation/Navigation.stories.tsx": [
      {
        "type": "named",
        "names": [
          "action"
        ],
        "from": "storybook/actions",
        "line": 2
      },
      {
        "type": "side-effect",
        "names": [],
        "from": " },\n    ],\n  },\n  {\n    name: ",
        "line": 72
      }
    ],
    "src/stories/organisms/PopulationPyramid/PopulationPyramid.stories.tsx": [
      {
        "type": "default",
        "names": [
          "PopulationPyramid"
        ],
        "from": "@/components/organisms/PopulationPyramid",
        "line": 2
      }
    ],
    "src/stories/organisms/ProtectedRoute/ProtectedRoute.stories.tsx": [
      {
        "type": "named",
        "names": [
          "fn"
        ],
        "from": "storybook/test",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "ProtectedRoute"
        ],
        "from": "@/components/organisms/ProtectedRoute",
        "line": 3
      }
    ],
    "src/stories/organisms/Sidebar/Sidebar.stories.tsx": [
      {
        "type": "named",
        "names": [
          "NavigationItem"
        ],
        "from": "@/components/Navigation/Navigation",
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "Sidebar"
        ],
        "from": "@/components/organisms/Sidebar",
        "line": 2
      },
      {
        "type": "side-effect",
        "names": [],
        "from": " },\n    ]\n  },\n  { \n    name: ",
        "line": 27
      }
    ],
    "src/stories/organisms/Table/Table.stories.tsx": [
      {
        "type": "named",
        "names": [
          "action"
        ],
        "from": "storybook/actions",
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "Table",
          "TableBody",
          "TableRow",
          "TableCell",
          "TableControls"
        ],
        "from": "@/components/organisms/Table",
        "line": 3
      }
    ],
    "src/stories/organisms/UserProfile/UserProfile.stories.tsx": [
      {
        "type": "named",
        "names": [
          "fn"
        ],
        "from": "storybook/test",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "UserProfile"
        ],
        "from": "@/components/organisms/UserProfile",
        "line": 3
      }
    ],
    "src/stories/templates/AppShell/AppShell.stories.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "AppShell"
        ],
        "from": "@/components/templates/AppShell",
        "line": 3
      }
    ],
    "src/stories/templates/DashboardLayout/DashboardLayout.stories.tsx": [
      {
        "type": "default",
        "names": [
          "DashboardLayout"
        ],
        "from": "@/components/templates/DashboardLayout",
        "line": 3
      }
    ],
    "src/stories/templates/Header/Header.stories.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "Header"
        ],
        "from": "@/components/templates/Header",
        "line": 3
      }
    ],
    "src/stories/templates/MainLayout/MainLayout.stories.tsx": [
      {
        "type": "default",
        "names": [
          "React"
        ],
        "from": "react",
        "line": 2
      },
      {
        "type": "default",
        "names": [
          "MainLayout"
        ],
        "from": "@/components/templates/MainLayout",
        "line": 3
      }
    ],
    "src/stories/templates/ResidentForm/ResidentForm.stories.tsx": [
      {
        "type": "named",
        "names": [
          "ResidentForm"
        ],
        "from": "@/components/templates/ResidentForm",
        "line": 2
      }
    ],
    "src/types/api.ts": [],
    "src/types/auth.ts": [
      {
        "type": "side-effect",
        "names": [],
        "from": "\n} as const;\n\n/**\n * Resource types\n */\nexport const RESOURCE_TYPES = {\n  RESIDENTS: ",
        "line": 435
      }
    ],
    "src/types/charts.ts": [],
    "src/types/components/command-menu.ts": [],
    "src/types/components/form-field.ts": [
      {
        "type": "named",
        "names": [
          "ReactNode"
        ],
        "from": "react",
        "line": 6
      }
    ],
    "src/types/components/index.ts": [],
    "src/types/database.ts": [],
    "src/types/forms.ts": [
      {
        "type": "named",
        "names": [
          "ReactNode"
        ],
        "from": "react",
        "line": 7
      }
    ],
    "src/types/geographic.ts": [],
    "src/types/households.ts": [
      {
        "type": "named",
        "names": [
          "ReactNode"
        ],
        "from": "react",
        "line": 6
      }
    ],
    "src/types/index.ts": [],
    "src/types/relationships.ts": [],
    "src/types/resident-form.ts": [],
    "src/types/residents.ts": [
      {
        "type": "named",
        "names": [
          "ReactNode"
        ],
        "from": "react",
        "line": 7
      }
    ],
    "src/utils/index.ts": [],
    "src/utils/validation-utilities.ts": [
      {
        "type": "named",
        "names": [
          "useState",
          "useCallback"
        ],
        "from": "react",
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "ValidationResult",
          "FieldValidationResult",
          "BaseValidationConfig",
          "ValidateFormFunction",
          "ValidateFieldFunction"
        ],
        "from": "@/lib/validation/types",
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "isValidEmail",
          "isValidPhilippineMobile"
        ],
        "from": "@/lib/validation/utilities",
        "line": 25
      },
      {
        "type": "named",
        "names": [
          "toTitleCase"
        ],
        "from": "../lib/utilities/string-utils",
        "line": 29
      }
    ]
  },
  "exports": {
    "src/__tests__/setup.tsx": [],
    "src/__tests__/test-utils.tsx": [
      {
        "type": "named",
        "names": [
          "userEvent",
          "customRender as render",
          "renderWithForm"
        ],
        "line": 457
      },
      {
        "type": "direct",
        "names": [
          "createMockResident"
        ],
        "line": 123
      },
      {
        "type": "direct",
        "names": [
          "createMockHousehold"
        ],
        "line": 193
      },
      {
        "type": "direct",
        "names": [
          "createMockSectoralInfo"
        ],
        "line": 225
      },
      {
        "type": "direct",
        "names": [
          "createMockAddress"
        ],
        "line": 253
      },
      {
        "type": "direct",
        "names": [
          "expectAccessibleElement"
        ],
        "line": 268
      },
      {
        "type": "direct",
        "names": [
          "expectDesignSystemColors"
        ],
        "line": 286
      },
      {
        "type": "direct",
        "names": [
          "expectRBINamingConvention"
        ],
        "line": 315
      },
      {
        "type": "direct",
        "names": [
          "fillAddressSelector"
        ],
        "line": 338
      },
      {
        "type": "direct",
        "names": [
          "fillSectoralInfo"
        ],
        "line": 371
      },
      {
        "type": "direct",
        "names": [
          "submitForm"
        ],
        "line": 391
      },
      {
        "type": "direct",
        "names": [
          "mockApiResponses"
        ],
        "line": 412
      },
      {
        "type": "default",
        "names": [
          "customRender"
        ],
        "line": 453
      }
    ],
    "src/app/(dashboard)/admin/create-user/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "CreateUserLayout"
        ],
        "line": 15
      }
    ],
    "src/app/(dashboard)/admin/create-user/page.tsx": [
      {
        "type": "direct",
        "names": [
          "dynamic"
        ],
        "line": 9
      },
      {
        "type": "default",
        "names": [
          "CreateUserPage"
        ],
        "line": 634
      }
    ],
    "src/app/(dashboard)/admin/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "AdminLayout"
        ],
        "line": 21
      }
    ],
    "src/app/(dashboard)/admin/loading.tsx": [
      {
        "type": "default",
        "names": [
          "AdminLoading"
        ],
        "line": 7
      }
    ],
    "src/app/(dashboard)/admin/users/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "AdminUsersLayout"
        ],
        "line": 15
      }
    ],
    "src/app/(dashboard)/admin/users/page.tsx": [
      {
        "type": "direct",
        "names": [
          "dynamic"
        ],
        "line": 8
      },
      {
        "type": "default",
        "names": [
          "UsersManagementPage"
        ],
        "line": 505
      }
    ],
    "src/app/(dashboard)/dashboard/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "DashboardLayout"
        ],
        "line": 22
      }
    ],
    "src/app/(dashboard)/dashboard/loading.tsx": [
      {
        "type": "default",
        "names": [
          "DashboardPageLoading"
        ],
        "line": 7
      }
    ],
    "src/app/(dashboard)/dashboard/page.tsx": [
      {
        "type": "default",
        "names": [
          "DashboardPage"
        ],
        "line": 135
      }
    ],
    "src/app/(dashboard)/households/[id]/page.tsx": [
      {
        "type": "default",
        "names": [
          "HouseholdDetailPage"
        ],
        "line": 496
      }
    ],
    "src/app/(dashboard)/households/create/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "CreateHouseholdLayout"
        ],
        "line": 21
      }
    ],
    "src/app/(dashboard)/households/create/page.tsx": [
      {
        "type": "direct",
        "names": [
          "dynamic"
        ],
        "line": 8
      },
      {
        "type": "default",
        "names": [
          "CreateHouseholdPage"
        ],
        "line": 42
      }
    ],
    "src/app/(dashboard)/households/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "HouseholdsLayout"
        ],
        "line": 22
      }
    ],
    "src/app/(dashboard)/households/loading.tsx": [
      {
        "type": "default",
        "names": [
          "HouseholdsLoading"
        ],
        "line": 7
      }
    ],
    "src/app/(dashboard)/households/page.tsx": [
      {
        "type": "default",
        "names": [
          "HouseholdsPage"
        ],
        "line": 364
      }
    ],
    "src/app/(dashboard)/layout.tsx": [
      {
        "type": "default",
        "names": [
          "DashboardGroupLayout"
        ],
        "line": 6
      }
    ],
    "src/app/(dashboard)/loading.tsx": [
      {
        "type": "default",
        "names": [
          "DashboardLoading"
        ],
        "line": 8
      }
    ],
    "src/app/(dashboard)/reports/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "ReportsLayout"
        ],
        "line": 22
      }
    ],
    "src/app/(dashboard)/reports/page.tsx": [
      {
        "type": "default",
        "names": [
          "ReportsPage"
        ],
        "line": 6
      }
    ],
    "src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "RbiFormLayout"
        ],
        "line": 21
      }
    ],
    "src/app/(dashboard)/reports/records-of-barangay-inhabitants-by-household/page.tsx": [
      {
        "type": "direct",
        "names": [
          "dynamic"
        ],
        "line": 10
      },
      {
        "type": "default",
        "names": [
          "RBIFormPage"
        ],
        "line": 260
      }
    ],
    "src/app/(dashboard)/residents/[id]/page.tsx": [
      {
        "type": "direct",
        "names": [
          "dynamic"
        ],
        "line": 58
      },
      {
        "type": "default",
        "names": [
          "ResidentDetailPage"
        ],
        "line": 1089
      }
    ],
    "src/app/(dashboard)/residents/create/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "CreateResidentLayout"
        ],
        "line": 21
      }
    ],
    "src/app/(dashboard)/residents/create/page.tsx": [
      {
        "type": "direct",
        "names": [
          "dynamic"
        ],
        "line": 12
      },
      {
        "type": "default",
        "names": [
          "CreateResidentPage"
        ],
        "line": 232
      }
    ],
    "src/app/(dashboard)/residents/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "ResidentsLayout"
        ],
        "line": 22
      }
    ],
    "src/app/(dashboard)/residents/loading.tsx": [
      {
        "type": "default",
        "names": [
          "ResidentsLoading"
        ],
        "line": 7
      }
    ],
    "src/app/(dashboard)/residents/page.tsx": [
      {
        "type": "default",
        "names": [
          "ResidentsPage"
        ],
        "line": 255
      }
    ],
    "src/app/(dashboard)/settings/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "SettingsLayout"
        ],
        "line": 15
      }
    ],
    "src/app/(dashboard)/settings/loading.tsx": [
      {
        "type": "default",
        "names": [
          "SettingsLoading"
        ],
        "line": 7
      }
    ],
    "src/app/(dashboard)/settings/page.tsx": [
      {
        "type": "default",
        "names": [
          "SettingsPage"
        ],
        "line": 13
      }
    ],
    "src/app/(dashboard)/slow-page/page.tsx": [
      {
        "type": "default",
        "names": [
          "SlowPage"
        ],
        "line": 66
      }
    ],
    "src/app/(dashboard)/test-loading/page.tsx": [
      {
        "type": "default",
        "names": [
          "TestLoadingPage"
        ],
        "line": 11
      }
    ],
    "src/app/api/addresses/barangays/route.ts": [],
    "src/app/api/addresses/cities/route.ts": [],
    "src/app/api/addresses/provinces/route.ts": [],
    "src/app/api/addresses/regions/route.ts": [],
    "src/app/api/addresses/streets/route.ts": [],
    "src/app/api/addresses/subdivisions/route.ts": [],
    "src/app/api/admin/users/route.ts": [],
    "src/app/api/auth/assign-role/route.ts": [],
    "src/app/api/auth/check-barangay-admin/route.ts": [],
    "src/app/api/auth/create-profile/route.ts": [],
    "src/app/api/auth/create-profile-fallback/route.ts": [],
    "src/app/api/auth/process-notifications/route.ts": [],
    "src/app/api/auth/profile/route.ts": [],
    "src/app/api/auth/test-profile/route.ts": [],
    "src/app/api/auth/webhook/route.ts": [],
    "src/app/api/dashboard/stats/route.ts": [],
    "src/app/api/debug/rbi-preflight/route.ts": [],
    "src/app/api/debug/residents/route.ts": [],
    "src/app/api/health/command-menu/route.ts": [
      {
        "type": "direct",
        "names": [
          "GET"
        ],
        "line": 11
      },
      {
        "type": "direct",
        "names": [
          "dynamic"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "revalidate"
        ],
        "line": 59
      }
    ],
    "src/app/api/households/[id]/route.ts": [],
    "src/app/api/households/route.ts": [
      {
        "type": "direct",
        "names": [
          "GET"
        ],
        "line": 35
      },
      {
        "type": "direct",
        "names": [
          "POST"
        ],
        "line": 134
      },
      {
        "type": "direct",
        "names": [
          "rateLimitConfig"
        ],
        "line": 237
      }
    ],
    "src/app/api/psgc/lookup/route.ts": [],
    "src/app/api/psgc/search/route.ts": [],
    "src/app/api/psoc/search/route.ts": [],
    "src/app/api/residents/[id]/route.ts": [],
    "src/app/api/residents/route.ts": [
      {
        "type": "direct",
        "names": [
          "GET"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "POST"
        ],
        "line": 200
      },
      {
        "type": "direct",
        "names": [
          "rateLimitConfig"
        ],
        "line": 336
      }
    ],
    "src/app/api/user/geographic-location/route.ts": [],
    "src/app/error.js": [
      {
        "type": "default",
        "names": [
          "Error"
        ],
        "line": 2
      }
    ],
    "src/app/error.tsx": [
      {
        "type": "default",
        "names": [
          "ErrorPage"
        ],
        "line": 8
      }
    ],
    "src/app/global-error.js": [
      {
        "type": "default",
        "names": [
          "GlobalError"
        ],
        "line": 2
      }
    ],
    "src/app/global-error.tsx": [
      {
        "type": "default",
        "names": [
          "GlobalError"
        ],
        "line": 8
      }
    ],
    "src/app/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 20
      },
      {
        "type": "direct",
        "names": [
          "viewport"
        ],
        "line": 60
      },
      {
        "type": "default",
        "names": [
          "RootLayout"
        ],
        "line": 69
      }
    ],
    "src/app/loading.js": [
      {
        "type": "default",
        "names": [
          "Loading"
        ],
        "line": 1
      }
    ],
    "src/app/loading.tsx": [
      {
        "type": "default",
        "names": [
          "Loading"
        ],
        "line": 3
      }
    ],
    "src/app/login/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "LoginLayout"
        ],
        "line": 15
      }
    ],
    "src/app/login/page.tsx": [
      {
        "type": "direct",
        "names": [
          "dynamic"
        ],
        "line": 10
      },
      {
        "type": "default",
        "names": [
          "LoginPage"
        ],
        "line": 12
      }
    ],
    "src/app/not-found.js": [
      {
        "type": "default",
        "names": [
          "NotFound"
        ],
        "line": 1
      }
    ],
    "src/app/not-found.tsx": [
      {
        "type": "default",
        "names": [
          "NotFound"
        ],
        "line": 4
      }
    ],
    "src/app/offline/page.tsx": [
      {
        "type": "default",
        "names": [
          "OfflinePage"
        ],
        "line": 7
      }
    ],
    "src/app/page.tsx": [
      {
        "type": "default",
        "names": [
          "HomePage"
        ],
        "line": 23
      }
    ],
    "src/app/signup/layout.tsx": [
      {
        "type": "direct",
        "names": [
          "metadata"
        ],
        "line": 3
      },
      {
        "type": "default",
        "names": [
          "SignupLayout"
        ],
        "line": 15
      }
    ],
    "src/app/signup/page.tsx": [
      {
        "type": "default",
        "names": [
          "SignupPage"
        ],
        "line": 24
      }
    ],
    "src/app/template.tsx": [
      {
        "type": "default",
        "names": [
          "Template"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Badge/Badge.tsx": [
      {
        "type": "direct",
        "names": [
          "Badge"
        ],
        "line": 77
      },
      {
        "type": "default",
        "names": [
          "Badge"
        ],
        "line": 109
      }
    ],
    "src/components/atoms/Badge/index.ts": [
      {
        "type": "named",
        "names": [
          "Badge",
          "type BadgeProps"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 2
      }
    ],
    "src/components/atoms/Button/Button.tsx": [
      {
        "type": "named",
        "names": [
          "Button",
          "buttonVariants"
        ],
        "line": 249
      }
    ],
    "src/components/atoms/Button/index.ts": [
      {
        "type": "named",
        "names": [
          "Button",
          "buttonVariants"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Chart/ChartContainer/ChartContainer.tsx": [
      {
        "type": "default",
        "names": [
          "ChartContainer"
        ],
        "line": 10
      }
    ],
    "src/components/atoms/Chart/ChartContainer/index.ts": [
      {
        "type": "named",
        "names": [
          "default as ChartContainer"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Chart/ChartEmptyState/ChartEmptyState.tsx": [
      {
        "type": "default",
        "names": [
          "ChartEmptyState"
        ],
        "line": 10
      }
    ],
    "src/components/atoms/Chart/ChartEmptyState/index.ts": [
      {
        "type": "named",
        "names": [
          "default as ChartEmptyState"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Chart/ChartLegend/ChartLegend.tsx": [
      {
        "type": "default",
        "names": [
          "ChartLegend"
        ],
        "line": 97
      }
    ],
    "src/components/atoms/Chart/ChartLegend/index.ts": [
      {
        "type": "named",
        "names": [
          "default as ChartLegend"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Chart/ChartTitle/ChartTitle.tsx": [
      {
        "type": "default",
        "names": [
          "ChartTitle"
        ],
        "line": 11
      }
    ],
    "src/components/atoms/Chart/ChartTitle/index.ts": [
      {
        "type": "named",
        "names": [
          "default as ChartTitle"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Chart/ChartTooltip/ChartTooltip.tsx": [
      {
        "type": "default",
        "names": [
          "ChartTooltip"
        ],
        "line": 20
      }
    ],
    "src/components/atoms/Chart/ChartTooltip/index.ts": [
      {
        "type": "named",
        "names": [
          "default as ChartTooltip"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Chart/index.ts": [],
    "src/components/atoms/Field/Control/Checkbox/Checkbox.tsx": [
      {
        "type": "named",
        "names": [
          "Checkbox",
          "checkboxVariants"
        ],
        "line": 223
      },
      {
        "type": "direct",
        "names": [
          "CheckboxGroup"
        ],
        "line": 178
      }
    ],
    "src/components/atoms/Field/Control/Checkbox/index.ts": [
      {
        "type": "named",
        "names": [
          "Checkbox",
          "checkboxVariants"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Field/Control/Control.tsx": [
      {
        "type": "named",
        "names": [
          "Control"
        ],
        "line": 333
      },
      {
        "type": "default",
        "names": [
          "Control"
        ],
        "line": 334
      }
    ],
    "src/components/atoms/Field/Control/Radio/Radio.tsx": [
      {
        "type": "named",
        "names": [
          "Radio",
          "radioVariants"
        ],
        "line": 266
      },
      {
        "type": "direct",
        "names": [
          "RadioGroup"
        ],
        "line": 200
      }
    ],
    "src/components/atoms/Field/Control/Radio/index.ts": [
      {
        "type": "named",
        "names": [
          "Radio",
          "RadioGroup",
          "radioVariants"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Field/Control/TitleDescription.tsx": [
      {
        "type": "direct",
        "names": [
          "TitleDescription"
        ],
        "line": 94
      },
      {
        "type": "default",
        "names": [
          "TitleDescription"
        ],
        "line": 132
      }
    ],
    "src/components/atoms/Field/Control/Toggle/Toggle.tsx": [
      {
        "type": "named",
        "names": [
          "Toggle",
          "toggleVariants"
        ],
        "line": 157
      }
    ],
    "src/components/atoms/Field/Control/Toggle/index.ts": [
      {
        "type": "named",
        "names": [
          "Toggle",
          "toggleVariants"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Field/Control/index.ts": [
      {
        "type": "named",
        "names": [
          "Control",
          "type ControlProps"
        ],
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "TitleDescription",
          "type TitleDescriptionProps"
        ],
        "line": 5
      }
    ],
    "src/components/atoms/Field/HelperText/HelperText.tsx": [
      {
        "type": "direct",
        "names": [
          "HelperText"
        ],
        "line": 24
      },
      {
        "type": "default",
        "names": [
          "HelperText"
        ],
        "line": 49
      }
    ],
    "src/components/atoms/Field/HelperText/index.ts": [
      {
        "type": "named",
        "names": [
          "HelperText",
          "type HelperTextProps"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Field/Input/Input.tsx": [
      {
        "type": "direct",
        "names": [
          "Input"
        ],
        "line": 28
      },
      {
        "type": "default",
        "names": [
          "Input"
        ],
        "line": 197
      }
    ],
    "src/components/atoms/Field/Input/index.ts": [
      {
        "type": "named",
        "names": [
          "Input",
          "type InputProps",
          "default"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Field/Label/Label.tsx": [
      {
        "type": "direct",
        "names": [
          "Label"
        ],
        "line": 55
      },
      {
        "type": "default",
        "names": [
          "Label"
        ],
        "line": 159
      }
    ],
    "src/components/atoms/Field/Label/index.ts": [
      {
        "type": "named",
        "names": [
          "Label",
          "type LabelProps",
          "default"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Field/ReadOnly/ReadOnly.tsx": [
      {
        "type": "direct",
        "names": [
          "ReadOnly"
        ],
        "line": 23
      },
      {
        "type": "default",
        "names": [
          "ReadOnly"
        ],
        "line": 75
      }
    ],
    "src/components/atoms/Field/ReadOnly/index.ts": [
      {
        "type": "named",
        "names": [
          "ReadOnly",
          "type ReadOnlyProps"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Field/Select/Option/Option.tsx": [
      {
        "type": "direct",
        "names": [
          "Option"
        ],
        "line": 30
      },
      {
        "type": "default",
        "names": [
          "Option"
        ],
        "line": 118
      }
    ],
    "src/components/atoms/Field/Select/Option/index.ts": [
      {
        "type": "named",
        "names": [
          "Option",
          "type OptionProps"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 2
      }
    ],
    "src/components/atoms/Field/Select/Select.tsx": [
      {
        "type": "default",
        "names": [
          "Select"
        ],
        "line": 62
      }
    ],
    "src/components/atoms/Field/Select/index.ts": [
      {
        "type": "named",
        "names": [
          "default as Select",
          "type SelectProps",
          "type SelectOption"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Field/Textarea/Textarea.tsx": [
      {
        "type": "direct",
        "names": [
          "Textarea"
        ],
        "line": 16
      },
      {
        "type": "default",
        "names": [
          "Textarea"
        ],
        "line": 96
      }
    ],
    "src/components/atoms/Field/Textarea/index.ts": [
      {
        "type": "named",
        "names": [
          "Textarea",
          "type TextareaProps"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Field/index.ts": [],
    "src/components/atoms/Link/Link.tsx": [
      {
        "type": "named",
        "names": [
          "Link",
          "linkVariants"
        ],
        "line": 198
      }
    ],
    "src/components/atoms/Link/index.ts": [
      {
        "type": "named",
        "names": [
          "Link",
          "linkVariants",
          "type LinkProps"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Loading/FormSkeleton/FormSkeleton.tsx": [
      {
        "type": "direct",
        "names": [
          "FormSkeleton"
        ],
        "line": 14
      },
      {
        "type": "default",
        "names": [
          "FormSkeleton"
        ],
        "line": 34
      }
    ],
    "src/components/atoms/Loading/FormSkeleton/index.ts": [
      {
        "type": "named",
        "names": [
          "FormSkeleton",
          "default"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Loading/LoadingFallback/LoadingFallback.tsx": [
      {
        "type": "direct",
        "names": [
          "LoadingFallback"
        ],
        "line": 14
      },
      {
        "type": "default",
        "names": [
          "LoadingFallback"
        ],
        "line": 31
      }
    ],
    "src/components/atoms/Loading/LoadingFallback/index.ts": [
      {
        "type": "named",
        "names": [
          "LoadingFallback",
          "default"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Loading/TableSkeleton/TableSkeleton.tsx": [
      {
        "type": "direct",
        "names": [
          "TableSkeleton"
        ],
        "line": 16
      },
      {
        "type": "default",
        "names": [
          "TableSkeleton"
        ],
        "line": 44
      }
    ],
    "src/components/atoms/Loading/TableSkeleton/index.ts": [
      {
        "type": "named",
        "names": [
          "TableSkeleton",
          "default"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/Loading/index.ts": [
      {
        "type": "named",
        "names": [
          "LoadingFallback"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "FormSkeleton"
        ],
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "TableSkeleton"
        ],
        "line": 3
      }
    ],
    "src/components/atoms/SkipNavigation/SkipNavigation.tsx": [
      {
        "type": "named",
        "names": [
          "SkipNavigation"
        ],
        "line": 63
      },
      {
        "type": "direct",
        "names": [
          "SkipLinks"
        ],
        "line": 37
      },
      {
        "type": "default",
        "names": [
          "SkipNavigation"
        ],
        "line": 15
      }
    ],
    "src/components/atoms/SkipNavigation/index.ts": [
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 1
      }
    ],
    "src/components/atoms/index.ts": [],
    "src/components/index.ts": [],
    "src/components/lazy-index.ts": [
      {
        "type": "named",
        "names": [
          "LoadingFallback",
          "FormSkeleton",
          "TableSkeleton"
        ],
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "LazyErrorModal as ErrorModal"
        ],
        "line": 22
      },
      {
        "type": "named",
        "names": [
          "LazySuccessModal as SuccessModal"
        ],
        "line": 23
      },
      {
        "type": "named",
        "names": [
          "LazyCreateHouseholdModal as CreateHouseholdModal"
        ],
        "line": 26
      },
      {
        "type": "named",
        "names": [
          "LazyDataTable as DataTable"
        ],
        "line": 27
      },
      {
        "type": "named",
        "names": [
          "LazyPopulationPyramid as PopulationPyramid"
        ],
        "line": 28
      },
      {
        "type": "named",
        "names": [
          "LazyUserProfile as UserProfile"
        ],
        "line": 29
      },
      {
        "type": "named",
        "names": [
          "LazyPersonalInformation as PersonalInformation"
        ],
        "line": 30
      },
      {
        "type": "named",
        "names": [
          "LazySectoralInfo as SectoralInfo"
        ],
        "line": 31
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading",
          "preloadComponents"
        ],
        "line": 34
      }
    ],
    "src/components/molecules/AccessibleModal/AccessibleModal.tsx": [
      {
        "type": "named",
        "names": [
          "AccessibleModal"
        ],
        "line": 163
      },
      {
        "type": "default",
        "names": [
          "AccessibleModal"
        ],
        "line": 27
      }
    ],
    "src/components/molecules/AccessibleModal/index.ts": [
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/AuthDebug/AuthDebug.tsx": [
      {
        "type": "default",
        "names": [
          "AuthDebug"
        ],
        "line": 6
      }
    ],
    "src/components/molecules/AuthDebug/index.ts": [
      {
        "type": "named",
        "names": [
          "default as AuthDebug"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/ButtonGroup/ButtonGroup.tsx": [
      {
        "type": "named",
        "names": [
          "ButtonGroup"
        ],
        "line": 76
      }
    ],
    "src/components/molecules/ButtonGroup/index.ts": [
      {
        "type": "named",
        "names": [
          "ButtonGroup"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/CivilStatusPieChart/CivilStatusPieChart.tsx": [
      {
        "type": "default",
        "names": [
          "CivilStatusPieChart"
        ],
        "line": 23
      }
    ],
    "src/components/molecules/CivilStatusPieChart/index.ts": [
      {
        "type": "named",
        "names": [
          "default as CivilStatusPieChart"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/CommandMenu/CommandMenu.tsx": [
      {
        "type": "named",
        "names": [
          "commandMenuVariants"
        ],
        "line": 217
      },
      {
        "type": "direct",
        "names": [
          "CommandMenu"
        ],
        "line": 34
      }
    ],
    "src/components/molecules/CommandMenu/CommandMenuEmpty.tsx": [
      {
        "type": "direct",
        "names": [
          "CommandMenuEmpty"
        ],
        "line": 170
      }
    ],
    "src/components/molecules/CommandMenu/CommandMenuErrorBoundary.tsx": [
      {
        "type": "direct",
        "names": [
          "CommandMenuErrorBoundary"
        ],
        "line": 18
      },
      {
        "type": "direct",
        "names": [
          "withCommandMenuErrorBoundary"
        ],
        "line": 112
      }
    ],
    "src/components/molecules/CommandMenu/CommandMenuGroup.tsx": [
      {
        "type": "direct",
        "names": [
          "CommandMenuGroup"
        ],
        "line": 19
      }
    ],
    "src/components/molecules/CommandMenu/CommandMenuItem.tsx": [
      {
        "type": "named",
        "names": [
          "CommandMenuItem",
          "commandMenuItemVariants"
        ],
        "line": 130
      }
    ],
    "src/components/molecules/CommandMenu/InlineCommandMenu.tsx": [
      {
        "type": "named",
        "names": [
          "inlineCommandMenuVariants"
        ],
        "line": 333
      },
      {
        "type": "direct",
        "names": [
          "InlineCommandMenu"
        ],
        "line": 36
      }
    ],
    "src/components/molecules/CommandMenu/index.ts": [
      {
        "type": "named",
        "names": [
          "CommandMenu"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "InlineCommandMenu"
        ],
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "CommandMenuItem"
        ],
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "CommandMenuGroup"
        ],
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "CommandMenuEmpty"
        ],
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "useCommandMenu"
        ],
        "line": 6
      }
    ],
    "src/components/molecules/ConnectionStatus/ConnectionStatus.tsx": [
      {
        "type": "default",
        "names": [
          "ConnectionStatus"
        ],
        "line": 11
      }
    ],
    "src/components/molecules/ConnectionStatus/index.ts": [
      {
        "type": "named",
        "names": [
          "default as ConnectionStatus"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/DependencyRatioPieChart/DependencyRatioPieChart.tsx": [
      {
        "type": "default",
        "names": [
          "DependencyRatioPieChart"
        ],
        "line": 18
      }
    ],
    "src/components/molecules/DependencyRatioPieChart/index.ts": [
      {
        "type": "named",
        "names": [
          "default as DependencyRatioPieChart"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/EmploymentStatusPieChart/EmploymentStatusPieChart.tsx": [
      {
        "type": "default",
        "names": [
          "EmploymentStatusPieChart"
        ],
        "line": 23
      }
    ],
    "src/components/molecules/EmploymentStatusPieChart/index.ts": [
      {
        "type": "named",
        "names": [
          "default as EmploymentStatusPieChart"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/ErrorModal/ErrorModal.lazy.tsx": [
      {
        "type": "direct",
        "names": [
          "LazyErrorModal"
        ],
        "line": 16
      },
      {
        "type": "default",
        "names": [
          "LazyErrorModal"
        ],
        "line": 17
      }
    ],
    "src/components/molecules/ErrorModal/ErrorModal.tsx": [
      {
        "type": "direct",
        "names": [
          "ErrorModal"
        ],
        "line": 13
      }
    ],
    "src/components/molecules/ErrorModal/index.tsx": [
      {
        "type": "named",
        "names": [
          "ErrorModal"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/FieldSet/ControlField/ControlField.tsx": [
      {
        "type": "direct",
        "names": [
          "ControlField"
        ],
        "line": 34
      },
      {
        "type": "direct",
        "names": [
          "ControlGroup"
        ],
        "line": 187
      }
    ],
    "src/components/molecules/FieldSet/ControlField/index.ts": [],
    "src/components/molecules/FieldSet/FieldErrorBoundary.tsx": [
      {
        "type": "named",
        "names": [
          "useFieldErrorHandler"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "FieldErrorBoundary"
        ],
        "line": 20
      },
      {
        "type": "direct",
        "names": [
          "withFieldErrorBoundary"
        ],
        "line": 98
      },
      {
        "type": "default",
        "names": [
          "FieldErrorBoundary"
        ],
        "line": 116
      }
    ],
    "src/components/molecules/FieldSet/FieldSet.tsx": [
      {
        "type": "direct",
        "names": [
          "ControlFieldSet"
        ],
        "line": 49
      },
      {
        "type": "default",
        "names": [
          "ControlFieldSet"
        ],
        "line": 152
      }
    ],
    "src/components/molecules/FieldSet/InputField/InputField.tsx": [
      {
        "type": "direct",
        "names": [
          "InputField"
        ],
        "line": 28
      },
      {
        "type": "direct",
        "names": [
          "FormGroup"
        ],
        "line": 161
      },
      {
        "type": "direct",
        "names": [
          "Form"
        ],
        "line": 196
      }
    ],
    "src/components/molecules/FieldSet/InputField/index.ts": [
      {
        "type": "named",
        "names": [
          "InputField",
          "FormGroup",
          "Form"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "InputField as FieldSet"
        ],
        "line": 5
      }
    ],
    "src/components/molecules/FieldSet/ReadOnlyField/ReadOnlyField.tsx": [
      {
        "type": "direct",
        "names": [
          "ReadOnlyField"
        ],
        "line": 25
      },
      {
        "type": "default",
        "names": [
          "ReadOnlyField"
        ],
        "line": 129
      }
    ],
    "src/components/molecules/FieldSet/ReadOnlyField/index.ts": [
      {
        "type": "named",
        "names": [
          "ReadOnlyField",
          "type ReadOnlyFieldProps"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/FieldSet/SelectField/SelectField.tsx": [
      {
        "type": "direct",
        "names": [
          "SelectField"
        ],
        "line": 29
      }
    ],
    "src/components/molecules/FieldSet/SelectField/index.ts": [
      {
        "type": "named",
        "names": [
          "SelectField"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/FieldSet/index.ts": [
      {
        "type": "named",
        "names": [
          "ControlFieldSet"
        ],
        "line": 6
      }
    ],
    "src/components/molecules/FileUpload/FileUpload.tsx": [
      {
        "type": "named",
        "names": [
          "FileUpload",
          "fileUploadVariants"
        ],
        "line": 335
      }
    ],
    "src/components/molecules/FileUpload/index.ts": [
      {
        "type": "named",
        "names": [
          "FileUpload",
          "fileUploadVariants"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/GenericPieChart/GenericPieChart.tsx": [
      {
        "type": "default",
        "names": [
          "GenericPieChart"
        ],
        "line": 19
      }
    ],
    "src/components/molecules/GenericPieChart/index.ts": [
      {
        "type": "named",
        "names": [
          "default as GenericPieChart"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/PWADevTools/PWADevTools.tsx": [
      {
        "type": "default",
        "names": [
          "PWADevTools"
        ],
        "line": 12
      }
    ],
    "src/components/molecules/PWADevTools/index.ts": [
      {
        "type": "named",
        "names": [
          "default as PWADevTools"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/PWAInstallPrompt/PWAInstallPrompt.tsx": [
      {
        "type": "default",
        "names": [
          "PWAInstallPrompt"
        ],
        "line": 26
      }
    ],
    "src/components/molecules/PWAInstallPrompt/index.ts": [
      {
        "type": "named",
        "names": [
          "default as PWAInstallPrompt"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/PWAStatus/PWAStatus.tsx": [
      {
        "type": "default",
        "names": [
          "PWAStatus"
        ],
        "line": 14
      }
    ],
    "src/components/molecules/PWAStatus/index.ts": [
      {
        "type": "named",
        "names": [
          "default as PWAStatus"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/SearchBar/SearchBar.tsx": [
      {
        "type": "named",
        "names": [
          "SearchBar",
          "searchBarVariants"
        ],
        "line": 165
      }
    ],
    "src/components/molecules/SearchBar/index.ts": [
      {
        "type": "named",
        "names": [
          "SearchBar",
          "searchBarVariants"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/SexDistributionPieChart/SexDistributionPieChart.tsx": [
      {
        "type": "default",
        "names": [
          "SexDistributionPieChart"
        ],
        "line": 17
      }
    ],
    "src/components/molecules/SexDistributionPieChart/index.ts": [
      {
        "type": "named",
        "names": [
          "default as SexDistributionPieChart"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/StatisticsChart/StatisticsChart.tsx": [
      {
        "type": "default",
        "names": [
          "StatisticsChart"
        ],
        "line": 28
      }
    ],
    "src/components/molecules/StatisticsChart/index.ts": [
      {
        "type": "named",
        "names": [
          "default as StatisticsChart"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 2
      }
    ],
    "src/components/molecules/StatsCard/StatsCard.tsx": [
      {
        "type": "default",
        "names": [
          "StatsCard"
        ],
        "line": 29
      }
    ],
    "src/components/molecules/StatsCard/index.ts": [
      {
        "type": "named",
        "names": [
          "default as StatsCard"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/SuccessModal/SuccessModal.lazy.tsx": [
      {
        "type": "direct",
        "names": [
          "LazySuccessModal"
        ],
        "line": 16
      },
      {
        "type": "default",
        "names": [
          "LazySuccessModal"
        ],
        "line": 17
      }
    ],
    "src/components/molecules/SuccessModal/SuccessModal.tsx": [
      {
        "type": "direct",
        "names": [
          "SuccessModal"
        ],
        "line": 12
      }
    ],
    "src/components/molecules/SuccessModal/index.tsx": [
      {
        "type": "named",
        "names": [
          "SuccessModal"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/ThemeToggle/ThemeToggle.tsx": [
      {
        "type": "named",
        "names": [
          "ThemeToggle",
          "themeToggleVariants"
        ],
        "line": 121
      }
    ],
    "src/components/molecules/ThemeToggle/index.ts": [
      {
        "type": "named",
        "names": [
          "ThemeToggle"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/VersionTag/VersionTag.tsx": [
      {
        "type": "direct",
        "names": [
          "VersionTag"
        ],
        "line": 14
      },
      {
        "type": "default",
        "names": [
          "VersionTag"
        ],
        "line": 89
      }
    ],
    "src/components/molecules/VersionTag/index.ts": [
      {
        "type": "named",
        "names": [
          "VersionTag",
          "default"
        ],
        "line": 1
      }
    ],
    "src/components/molecules/index.ts": [],
    "src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.lazy.tsx": [
      {
        "type": "direct",
        "names": [
          "LazyCreateHouseholdModal"
        ],
        "line": 15
      },
      {
        "type": "default",
        "names": [
          "LazyCreateHouseholdModal"
        ],
        "line": 16
      }
    ],
    "src/components/organisms/CreateHouseholdModal/CreateHouseholdModal.tsx": [
      {
        "type": "default",
        "names": [
          "CreateHouseholdModal"
        ],
        "line": 59
      }
    ],
    "src/components/organisms/CreateHouseholdModal/HouseholdAddressForm.tsx": [
      {
        "type": "default",
        "names": [
          "HouseholdAddressForm"
        ],
        "line": 24
      }
    ],
    "src/components/organisms/CreateHouseholdModal/HouseholdLocationInfo.tsx": [
      {
        "type": "default",
        "names": [
          "HouseholdLocationInfo"
        ],
        "line": 20
      }
    ],
    "src/components/organisms/CreateHouseholdModal/index.ts": [
      {
        "type": "named",
        "names": [
          "default as CreateHouseholdModal"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/DataTable/DataTable.lazy.tsx": [
      {
        "type": "direct",
        "names": [
          "LazyDataTable"
        ],
        "line": 15
      },
      {
        "type": "default",
        "names": [
          "LazyDataTable"
        ],
        "line": 16
      }
    ],
    "src/components/organisms/DataTable/DataTable.tsx": [
      {
        "type": "default",
        "names": [
          "DataTable"
        ],
        "line": 62
      }
    ],
    "src/components/organisms/DataTable/index.ts": [
      {
        "type": "named",
        "names": [
          "default as DataTable"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/DevLogin/DevLogin.tsx": [
      {
        "type": "default",
        "names": [
          "DevLogin"
        ],
        "line": 17
      }
    ],
    "src/components/organisms/DevLogin/index.ts": [
      {
        "type": "named",
        "names": [
          "default as DevLogin"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/AddressDetails.tsx": [
      {
        "type": "direct",
        "names": [
          "AddressDetails"
        ],
        "line": 23
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/GeographicLocation.tsx": [
      {
        "type": "direct",
        "names": [
          "GeographicLocation"
        ],
        "line": 23
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/HouseholdStatistics.tsx": [
      {
        "type": "direct",
        "names": [
          "HouseholdStatistics"
        ],
        "line": 21
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/HouseholdTypeInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "HouseholdTypeInformation"
        ],
        "line": 59
      },
      {
        "type": "default",
        "names": [
          "HouseholdTypeInformation"
        ],
        "line": 174
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/FormField/IncomeAndHeadInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "IncomeAndHeadInformation"
        ],
        "line": 43
      },
      {
        "type": "default",
        "names": [
          "IncomeAndHeadInformation"
        ],
        "line": 138
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.tsx": [
      {
        "type": "direct",
        "names": [
          "HouseholdDetailsForm"
        ],
        "line": 28
      }
    ],
    "src/components/organisms/Form/Household/HouseholdDetails/index.ts": [
      {
        "type": "named",
        "names": [
          "HouseholdDetailsForm"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "HouseholdTypeInformation"
        ],
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "IncomeAndHeadInformation"
        ],
        "line": 8
      }
    ],
    "src/components/organisms/Form/Household/HouseholdForm.tsx": [
      {
        "type": "direct",
        "names": [
          "HouseholdForm"
        ],
        "line": 30
      }
    ],
    "src/components/organisms/Form/Household/LocationAndDemographics/FormField/AddressInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "AddressInformation"
        ],
        "line": 41
      },
      {
        "type": "default",
        "names": [
          "AddressInformation"
        ],
        "line": 261
      }
    ],
    "src/components/organisms/Form/Household/LocationAndDemographics/FormField/DemographicsInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "DemographicsInformation"
        ],
        "line": 20
      },
      {
        "type": "default",
        "names": [
          "DemographicsInformation"
        ],
        "line": 111
      }
    ],
    "src/components/organisms/Form/Household/LocationAndDemographics/LocationAndDemographics.tsx": [
      {
        "type": "named",
        "names": [
          "LocationAndDemographicsForm as LocationDemographicsForm"
        ],
        "line": 137
      },
      {
        "type": "direct",
        "names": [
          "LocationAndDemographicsForm"
        ],
        "line": 42
      }
    ],
    "src/components/organisms/Form/Household/LocationAndDemographics/index.ts": [
      {
        "type": "named",
        "names": [
          "LocationAndDemographicsForm",
          "LocationDemographicsForm"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "AddressInformation"
        ],
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "DemographicsInformation"
        ],
        "line": 8
      }
    ],
    "src/components/organisms/Form/Household/index.ts": [
      {
        "type": "named",
        "names": [
          "LocationAndDemographicsForm",
          "LocationDemographicsForm"
        ],
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "HouseholdDetailsForm"
        ],
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "AddressInformation"
        ],
        "line": 18
      },
      {
        "type": "named",
        "names": [
          "DemographicsInformation"
        ],
        "line": 19
      },
      {
        "type": "named",
        "names": [
          "HouseholdTypeInformation"
        ],
        "line": 20
      },
      {
        "type": "named",
        "names": [
          "IncomeAndHeadInformation"
        ],
        "line": 21
      }
    ],
    "src/components/organisms/Form/Household/types.ts": [],
    "src/components/organisms/Form/Resident/ContactInformation/ContactInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "ContactInformationForm"
        ],
        "line": 24
      },
      {
        "type": "default",
        "names": [
          "ContactInformationForm"
        ],
        "line": 96
      }
    ],
    "src/components/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.tsx": [
      {
        "type": "direct",
        "names": [
          "ContactDetails"
        ],
        "line": 20
      },
      {
        "type": "default",
        "names": [
          "ContactDetails"
        ],
        "line": 91
      }
    ],
    "src/components/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "HouseholdInformation"
        ],
        "line": 24
      },
      {
        "type": "default",
        "names": [
          "HouseholdInformation"
        ],
        "line": 118
      }
    ],
    "src/components/organisms/Form/Resident/ContactInformation/index.ts": [
      {
        "type": "named",
        "names": [
          "ContactInformationForm",
          "type ContactInformationFormProps"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "ContactDetails",
          "type ContactDetailsProps",
          "type ContactDetailsData"
        ],
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "HouseholdInformation",
          "type HouseholdInformationProps",
          "type HouseholdInformationData"
        ],
        "line": 3
      }
    ],
    "src/components/organisms/Form/Resident/MigrationInformation/MigrationInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "MigrationInformation"
        ],
        "line": 17
      },
      {
        "type": "default",
        "names": [
          "MigrationInformation"
        ],
        "line": 260
      }
    ],
    "src/components/organisms/Form/Resident/MigrationInformation/index.ts": [
      {
        "type": "named",
        "names": [
          "MigrationInformation",
          "type MigrationInformationProps",
          "type MigrationInformationData"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "BasicInformation"
        ],
        "line": 31
      },
      {
        "type": "default",
        "names": [
          "BasicInformation"
        ],
        "line": 201
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "BirthInformation"
        ],
        "line": 21
      },
      {
        "type": "default",
        "names": [
          "BirthInformation"
        ],
        "line": 166
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/EducationInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "EducationInformation"
        ],
        "line": 27
      },
      {
        "type": "default",
        "names": [
          "EducationInformation"
        ],
        "line": 96
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/EmploymentInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "EmploymentInformation"
        ],
        "line": 25
      },
      {
        "type": "default",
        "names": [
          "EmploymentInformation"
        ],
        "line": 100
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.tsx": [
      {
        "type": "direct",
        "names": [
          "PhilSysCardField"
        ],
        "line": 15
      },
      {
        "type": "default",
        "names": [
          "PhilSysCardField"
        ],
        "line": 42
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.lazy.tsx": [
      {
        "type": "direct",
        "names": [
          "LazyPersonalInformation"
        ],
        "line": 17
      },
      {
        "type": "default",
        "names": [
          "LazyPersonalInformation"
        ],
        "line": 18
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "PersonalInformationForm"
        ],
        "line": 45
      }
    ],
    "src/components/organisms/Form/Resident/PersonalInformation/index.ts": [
      {
        "type": "named",
        "names": [
          "PersonalInformationForm",
          "type PersonalInformationFormProps"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "PhilSysCardField",
          "type PhilSysCardFieldProps"
        ],
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "BasicInformation",
          "type BasicInformationData"
        ],
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "BirthInformation",
          "type BirthInformationProps",
          "type BirthInformationData"
        ],
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "EducationInformation",
          "type EducationInformationProps",
          "type EducationInformationData"
        ],
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "EmploymentInformation",
          "type EmploymentInformationProps",
          "type EmploymentInformationData"
        ],
        "line": 6
      }
    ],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.tsx": [
      {
        "type": "direct",
        "names": [
          "MotherMaidenName"
        ],
        "line": 20
      },
      {
        "type": "default",
        "names": [
          "MotherMaidenName"
        ],
        "line": 114
      }
    ],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.tsx": [
      {
        "type": "direct",
        "names": [
          "PhysicalCharacteristics"
        ],
        "line": 26
      },
      {
        "type": "default",
        "names": [
          "PhysicalCharacteristics"
        ],
        "line": 173
      }
    ],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "VotingInformation"
        ],
        "line": 21
      },
      {
        "type": "default",
        "names": [
          "VotingInformation"
        ],
        "line": 126
      }
    ],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.tsx": [
      {
        "type": "direct",
        "names": [
          "PhysicalPersonalDetailsForm"
        ],
        "line": 34
      },
      {
        "type": "default",
        "names": [
          "PhysicalPersonalDetailsForm"
        ],
        "line": 132
      }
    ],
    "src/components/organisms/Form/Resident/PhysicalPersonalDetails/index.ts": [
      {
        "type": "named",
        "names": [
          "PhysicalPersonalDetailsForm",
          "type PhysicalPersonalDetailsFormProps"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "PhysicalCharacteristics",
          "type PhysicalCharacteristicsProps",
          "type PhysicalCharacteristicsData"
        ],
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "VotingInformation",
          "type VotingInformationProps",
          "type VotingInformationData"
        ],
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "MotherMaidenName",
          "type MotherMaidenNameProps",
          "type MotherMaidenNameData"
        ],
        "line": 4
      }
    ],
    "src/components/organisms/Form/Resident/SectoralInformation/FormField/SectoralClassifications.tsx": [
      {
        "type": "default",
        "names": [
          "SectoralClassifications"
        ],
        "line": 61
      }
    ],
    "src/components/organisms/Form/Resident/SectoralInformation/SectoralInformation.lazy.tsx": [
      {
        "type": "direct",
        "names": [
          "LazySectoralInfo"
        ],
        "line": 15
      },
      {
        "type": "default",
        "names": [
          "LazySectoralInfo"
        ],
        "line": 16
      }
    ],
    "src/components/organisms/Form/Resident/SectoralInformation/SectoralInformation.tsx": [
      {
        "type": "direct",
        "names": [
          "SectoralInformationForm"
        ],
        "line": 49
      },
      {
        "type": "default",
        "names": [
          "SectoralInformationForm"
        ],
        "line": 100
      }
    ],
    "src/components/organisms/Form/Resident/SectoralInformation/index.ts": [
      {
        "type": "named",
        "names": [
          "SectoralInformationForm",
          "type SectoralInformationFormProps"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "default as SectoralClassifications"
        ],
        "line": 2
      }
    ],
    "src/components/organisms/Form/Resident/index.ts": [
      {
        "type": "named",
        "names": [
          "PersonalInformationForm"
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "ContactInformationForm"
        ],
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "PhysicalPersonalDetailsForm"
        ],
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "SectoralInformationForm"
        ],
        "line": 18
      },
      {
        "type": "named",
        "names": [
          "isFieldReadOnly",
          "renderInputField",
          "renderSelectField",
          "renderCheckboxField",
          "renderDateField",
          "renderNumberField",
          ""
        ],
        "line": 21
      }
    ],
    "src/components/organisms/Form/Resident/types.ts": [],
    "src/components/organisms/Form/Resident/utils/fieldRenderers.tsx": [],
    "src/components/organisms/Form/index.ts": [],
    "src/components/organisms/LoginForm/LoginForm.tsx": [
      {
        "type": "default",
        "names": [
          "LoginForm"
        ],
        "line": 14
      }
    ],
    "src/components/organisms/LoginForm/index.ts": [
      {
        "type": "named",
        "names": [
          "default as LoginForm"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/Navigation/Navigation.tsx": [
      {
        "type": "default",
        "names": [
          "Navigation"
        ],
        "line": 116
      }
    ],
    "src/components/organisms/Navigation/index.ts": [
      {
        "type": "named",
        "names": [
          "default as Navigation"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/PopulationPyramid/PopulationPyramid.lazy.tsx": [
      {
        "type": "direct",
        "names": [
          "LazyPopulationPyramid"
        ],
        "line": 15
      },
      {
        "type": "default",
        "names": [
          "LazyPopulationPyramid"
        ],
        "line": 19
      }
    ],
    "src/components/organisms/PopulationPyramid/PopulationPyramid.tsx": [
      {
        "type": "default",
        "names": [
          "PopulationPyramid"
        ],
        "line": 19
      }
    ],
    "src/components/organisms/PopulationPyramid/index.ts": [
      {
        "type": "named",
        "names": [
          "default as PopulationPyramid"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/ProtectedRoute/ProtectedRoute.tsx": [
      {
        "type": "default",
        "names": [
          "ProtectedRoute"
        ],
        "line": 16
      }
    ],
    "src/components/organisms/ProtectedRoute/index.ts": [
      {
        "type": "named",
        "names": [
          "default as ProtectedRoute"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/Sidebar/Sidebar.tsx": [
      {
        "type": "named",
        "names": [
          "SidebarHeader",
          "SidebarFooter",
          "ToggleButton"
        ],
        "line": 292
      },
      {
        "type": "default",
        "names": [
          "Sidebar"
        ],
        "line": 183
      }
    ],
    "src/components/organisms/Sidebar/index.ts": [
      {
        "type": "named",
        "names": [
          "default",
          "type SidebarProps",
          "SidebarHeader",
          "SidebarFooter",
          "ToggleButton"
        ],
        "line": 8
      }
    ],
    "src/components/organisms/Table/Table.tsx": [
      {
        "type": "direct",
        "names": [
          "Table"
        ],
        "line": 17
      },
      {
        "type": "direct",
        "names": [
          "TableBody"
        ],
        "line": 25
      },
      {
        "type": "direct",
        "names": [
          "TableRow"
        ],
        "line": 34
      },
      {
        "type": "direct",
        "names": [
          "TableCell"
        ],
        "line": 54
      },
      {
        "type": "direct",
        "names": [
          "TableControls"
        ],
        "line": 118
      }
    ],
    "src/components/organisms/Table/index.ts": [
      {
        "type": "named",
        "names": [
          "Table"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/UserProfile/UserProfile.lazy.tsx": [
      {
        "type": "direct",
        "names": [
          "LazyUserProfile"
        ],
        "line": 15
      },
      {
        "type": "default",
        "names": [
          "LazyUserProfile"
        ],
        "line": 16
      }
    ],
    "src/components/organisms/UserProfile/UserProfile.tsx": [
      {
        "type": "default",
        "names": [
          "UserProfile"
        ],
        "line": 12
      }
    ],
    "src/components/organisms/UserProfile/index.ts": [
      {
        "type": "named",
        "names": [
          "default as UserProfile"
        ],
        "line": 1
      }
    ],
    "src/components/organisms/index.ts": [
      {
        "type": "named",
        "names": [
          "DataTable"
        ],
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "Navigation"
        ],
        "line": 6
      },
      {
        "type": "named",
        "names": [
          "default as Sidebar",
          "SidebarHeader",
          "SidebarFooter",
          "ToggleButton"
        ],
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "Table"
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "CreateHouseholdModal"
        ],
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "PopulationPyramid"
        ],
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "DevLogin"
        ],
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "LoginForm"
        ],
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "ProtectedRoute"
        ],
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "UserProfile"
        ],
        "line": 17
      },
      {
        "type": "named",
        "names": [
          "PersonalInformationForm"
        ],
        "line": 20
      }
    ],
    "src/components/templates/AppShell/AppShell.tsx": [
      {
        "type": "default",
        "names": [
          "AppShell"
        ],
        "line": 16
      }
    ],
    "src/components/templates/AppShell/index.ts": [
      {
        "type": "named",
        "names": [
          "default as AppShell"
        ],
        "line": 1
      }
    ],
    "src/components/templates/DashboardLayout/DashboardLayout.tsx": [
      {
        "type": "default",
        "names": [
          "DashboardLayout"
        ],
        "line": 255
      }
    ],
    "src/components/templates/DashboardLayout/index.ts": [
      {
        "type": "named",
        "names": [
          "default as DashboardLayout"
        ],
        "line": 1
      }
    ],
    "src/components/templates/Header/Header.tsx": [
      {
        "type": "default",
        "names": [
          "Header"
        ],
        "line": 35
      }
    ],
    "src/components/templates/Header/index.ts": [
      {
        "type": "named",
        "names": [
          "default as Header"
        ],
        "line": 1
      }
    ],
    "src/components/templates/HouseholdForm/NewHouseholdForm.tsx": [
      {
        "type": "default",
        "names": [
          "HouseholdForm"
        ],
        "line": 71
      }
    ],
    "src/components/templates/HouseholdForm/index.ts": [
      {
        "type": "named",
        "names": [
          "default as NewHouseholdForm"
        ],
        "line": 1
      }
    ],
    "src/components/templates/MainLayout/MainLayout.tsx": [
      {
        "type": "default",
        "names": [
          "MainLayout"
        ],
        "line": 14
      }
    ],
    "src/components/templates/MainLayout/index.ts": [
      {
        "type": "named",
        "names": [
          "default as MainLayout"
        ],
        "line": 1
      }
    ],
    "src/components/templates/ResidentForm/ResidentForm.tsx": [
      {
        "type": "direct",
        "names": [
          "ResidentForm"
        ],
        "line": 64
      },
      {
        "type": "default",
        "names": [
          "ResidentForm"
        ],
        "line": 579
      }
    ],
    "src/components/templates/ResidentForm/components/FormActions.tsx": [
      {
        "type": "direct",
        "names": [
          "FormActions"
        ],
        "line": 51
      }
    ],
    "src/components/templates/ResidentForm/components/FormHeader.tsx": [
      {
        "type": "direct",
        "names": [
          "FormHeader"
        ],
        "line": 9
      }
    ],
    "src/components/templates/ResidentForm/components/FormValidationFeedback.tsx": [
      {
        "type": "direct",
        "names": [
          "FormValidationFeedback"
        ],
        "line": 9
      }
    ],
    "src/components/templates/ResidentForm/components/index.ts": [
      {
        "type": "named",
        "names": [
          "FormActions"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "FormHeader"
        ],
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "FormValidationFeedback"
        ],
        "line": 3
      }
    ],
    "src/components/templates/ResidentForm/index.ts": [
      {
        "type": "named",
        "names": [
          "ResidentForm"
        ],
        "line": 1
      },
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 2
      }
    ],
    "src/components/templates/index.ts": [
      {
        "type": "named",
        "names": [
          "DashboardLayout"
        ],
        "line": 2
      },
      {
        "type": "named",
        "names": [
          "MainLayout"
        ],
        "line": 3
      },
      {
        "type": "named",
        "names": [
          "AppShell"
        ],
        "line": 4
      },
      {
        "type": "named",
        "names": [
          "Header"
        ],
        "line": 5
      },
      {
        "type": "named",
        "names": [
          "ResidentForm"
        ],
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "NewHouseholdForm"
        ],
        "line": 9
      }
    ],
    "src/components/utils/index.ts": [],
    "src/contexts/AuthContext.tsx": [
      {
        "type": "direct",
        "names": [
          "AuthProvider"
        ],
        "line": 84
      },
      {
        "type": "direct",
        "names": [
          "useAuth"
        ],
        "line": 552
      },
      {
        "type": "direct",
        "names": [
          "useRequireAuth"
        ],
        "line": 578
      },
      {
        "type": "direct",
        "names": [
          "useRequireRole"
        ],
        "line": 596
      },
      {
        "type": "direct",
        "names": [
          "useRequirePermission"
        ],
        "line": 610
      }
    ],
    "src/contexts/ThemeContext.tsx": [
      {
        "type": "direct",
        "names": [
          "useTheme"
        ],
        "line": 16
      },
      {
        "type": "direct",
        "names": [
          "ThemeProvider"
        ],
        "line": 36
      }
    ],
    "src/contexts/index.ts": [
      {
        "type": "named",
        "names": [
          "AuthProvider",
          "useAuth",
          "useRequireAuth",
          "useRequireRole",
          "useRequirePermission",
          "type UserProfile",
          "type Role",
          ""
        ],
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "ThemeProvider",
          "useTheme",
          ""
        ],
        "line": 18
      }
    ],
    "src/design-system/index.ts": [
      {
        "type": "named",
        "names": [
          "designTokens",
          "colors",
          "typography",
          "spacing",
          "borderRadius",
          "boxShadow",
          "animation",
          "components",
          "semantic",
          "breakpoints",
          "zIndex",
          ""
        ],
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "getColor",
          "getRBIColor",
          "getColorVariant",
          "getSpacing",
          "getResponsiveSpacing",
          "getFontSize",
          "getHeadingStyle",
          "getButtonStyles",
          "getInputStyles",
          "checkContrast",
          "getFocusRing",
          "validateDesignTokenUsage",
          "getSectoralBadgeColor",
          "getHouseholdTypeStyle",
          ""
        ],
        "line": 31
      },
      {
        "type": "named",
        "names": [
          "default as designSystemUtils"
        ],
        "line": 49
      },
      {
        "type": "direct",
        "names": [
          "DESIGN_SYSTEM_VERSION"
        ],
        "line": 52
      },
      {
        "type": "direct",
        "names": [
          "DESIGN_SYSTEM_NAME"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "COMMON_COLORS"
        ],
        "line": 105
      },
      {
        "type": "direct",
        "names": [
          "COMMON_SPACING"
        ],
        "line": 127
      },
      {
        "type": "direct",
        "names": [
          "COMMON_RADIUS"
        ],
        "line": 136
      },
      {
        "type": "default",
        "names": [
          "utils"
        ],
        "line": 48
      }
    ],
    "src/design-system/tokens/Colors/Colors.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "BrandColors"
        ],
        "line": 232
      },
      {
        "type": "direct",
        "names": [
          "SemanticColors"
        ],
        "line": 295
      },
      {
        "type": "direct",
        "names": [
          "TextHierarchy"
        ],
        "line": 786
      },
      {
        "type": "direct",
        "names": [
          "UtilityColors"
        ],
        "line": 931
      },
      {
        "type": "direct",
        "names": [
          "LiveExamples"
        ],
        "line": 1055
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 228
      }
    ],
    "src/design-system/tokens/Colors/index.ts": [],
    "src/design-system/tokens/Layout/Layout.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "AllLayout"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "ContainerWidths"
        ],
        "line": 119
      },
      {
        "type": "direct",
        "names": [
          "ResponsiveBreakpoints"
        ],
        "line": 184
      },
      {
        "type": "direct",
        "names": [
          "GridSystem"
        ],
        "line": 248
      },
      {
        "type": "direct",
        "names": [
          "ZIndexLayers"
        ],
        "line": 365
      },
      {
        "type": "direct",
        "names": [
          "LayoutPatterns"
        ],
        "line": 470
      },
      {
        "type": "direct",
        "names": [
          "SemanticLayout"
        ],
        "line": 657
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 107
      }
    ],
    "src/design-system/tokens/Layout/Layout.tsx": [
      {
        "type": "direct",
        "names": [
          "layoutTokens"
        ],
        "line": 9
      },
      {
        "type": "direct",
        "names": [
          "semanticLayout"
        ],
        "line": 107
      },
      {
        "type": "direct",
        "names": [
          "LayoutSwatch"
        ],
        "line": 153
      },
      {
        "type": "direct",
        "names": [
          "LayoutGroup"
        ],
        "line": 221
      },
      {
        "type": "direct",
        "names": [
          "LayoutDemo"
        ],
        "line": 246
      },
      {
        "type": "direct",
        "names": [
          "ResponsiveDemo"
        ],
        "line": 262
      },
      {
        "type": "default",
        "names": [
          "Layout"
        ],
        "line": 574
      }
    ],
    "src/design-system/tokens/Layout/index.ts": [
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 1
      }
    ],
    "src/design-system/tokens/Shadows/Shadows.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "AllShadowsEffects"
        ],
        "line": 147
      },
      {
        "type": "direct",
        "names": [
          "BoxShadows"
        ],
        "line": 152
      },
      {
        "type": "direct",
        "names": [
          "BorderRadius"
        ],
        "line": 222
      },
      {
        "type": "direct",
        "names": [
          "OpacityBlur"
        ],
        "line": 344
      },
      {
        "type": "direct",
        "names": [
          "SemanticShadows"
        ],
        "line": 579
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 140
      }
    ],
    "src/design-system/tokens/Shadows/Shadows.tsx": [
      {
        "type": "direct",
        "names": [
          "shadowTokens"
        ],
        "line": 9
      },
      {
        "type": "direct",
        "names": [
          "radiusTokens"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "opacityTokens"
        ],
        "line": 52
      },
      {
        "type": "direct",
        "names": [
          "blurTokens"
        ],
        "line": 74
      },
      {
        "type": "direct",
        "names": [
          "semanticShadows"
        ],
        "line": 88
      },
      {
        "type": "direct",
        "names": [
          "semanticEffects"
        ],
        "line": 129
      },
      {
        "type": "direct",
        "names": [
          "ShadowSwatch"
        ],
        "line": 171
      },
      {
        "type": "direct",
        "names": [
          "ShadowGroup"
        ],
        "line": 242
      },
      {
        "type": "direct",
        "names": [
          "ShadowDemo"
        ],
        "line": 267
      },
      {
        "type": "direct",
        "names": [
          "InteractiveShadowDemo"
        ],
        "line": 283
      },
      {
        "type": "default",
        "names": [
          "Shadows"
        ],
        "line": 684
      }
    ],
    "src/design-system/tokens/Shadows/index.ts": [
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 1
      }
    ],
    "src/design-system/tokens/Spacing/Spacing.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "AllSpacing"
        ],
        "line": 87
      },
      {
        "type": "direct",
        "names": [
          "BaseSpacingScale"
        ],
        "line": 92
      },
      {
        "type": "direct",
        "names": [
          "SemanticSpacing"
        ],
        "line": 156
      },
      {
        "type": "direct",
        "names": [
          "ComponentSpacing"
        ],
        "line": 212
      },
      {
        "type": "direct",
        "names": [
          "LayoutSpacing"
        ],
        "line": 285
      },
      {
        "type": "direct",
        "names": [
          "FormSpacing"
        ],
        "line": 343
      },
      {
        "type": "direct",
        "names": [
          "GridSystem"
        ],
        "line": 448
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 80
      }
    ],
    "src/design-system/tokens/Spacing/Spacing.tsx": [
      {
        "type": "direct",
        "names": [
          "spacingTokens"
        ],
        "line": 9
      },
      {
        "type": "direct",
        "names": [
          "semanticSpacing"
        ],
        "line": 52
      },
      {
        "type": "direct",
        "names": [
          "SpacingSwatch"
        ],
        "line": 110
      },
      {
        "type": "direct",
        "names": [
          "SpacingGroup"
        ],
        "line": 142
      },
      {
        "type": "direct",
        "names": [
          "SpacingDemo"
        ],
        "line": 162
      },
      {
        "type": "default",
        "names": [
          "Spacing"
        ],
        "line": 407
      }
    ],
    "src/design-system/tokens/Spacing/index.ts": [
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 1
      }
    ],
    "src/design-system/tokens/Typography/Typography.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "AllTypography"
        ],
        "line": 70
      },
      {
        "type": "direct",
        "names": [
          "FontFamilies"
        ],
        "line": 75
      },
      {
        "type": "direct",
        "names": [
          "DisplayTypography"
        ],
        "line": 116
      },
      {
        "type": "direct",
        "names": [
          "Headings"
        ],
        "line": 140
      },
      {
        "type": "direct",
        "names": [
          "BodyText"
        ],
        "line": 185
      },
      {
        "type": "direct",
        "names": [
          "FormTypography"
        ],
        "line": 232
      },
      {
        "type": "direct",
        "names": [
          "CodeTypography"
        ],
        "line": 291
      },
      {
        "type": "direct",
        "names": [
          "AccessibilityExamples"
        ],
        "line": 344
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 63
      }
    ],
    "src/design-system/tokens/Typography/Typography.tsx": [
      {
        "type": "direct",
        "names": [
          "typographyTokens"
        ],
        "line": 9
      },
      {
        "type": "direct",
        "names": [
          "typographyScale"
        ],
        "line": 73
      },
      {
        "type": "direct",
        "names": [
          "TypographyExample"
        ],
        "line": 232
      },
      {
        "type": "direct",
        "names": [
          "FontFamilyShowcase"
        ],
        "line": 266
      },
      {
        "type": "default",
        "names": [
          "Typography"
        ],
        "line": 397
      }
    ],
    "src/design-system/tokens/Typography/index.ts": [
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 1
      }
    ],
    "src/design-system/tokens/index.ts": [
      {
        "type": "named",
        "names": [
          "default as TypographyComponent"
        ],
        "line": 8
      },
      {
        "type": "named",
        "names": [
          "default as SpacingComponent"
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "default as LayoutComponent"
        ],
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "default as ShadowsComponent"
        ],
        "line": 11
      },
      {
        "type": "default",
        "names": [
          "components"
        ],
        "line": 7
      }
    ],
    "src/design-system/tokens.ts": [
      {
        "type": "direct",
        "names": [
          "colors"
        ],
        "line": 11
      },
      {
        "type": "direct",
        "names": [
          "typography"
        ],
        "line": 127
      },
      {
        "type": "direct",
        "names": [
          "spacing"
        ],
        "line": 192
      },
      {
        "type": "direct",
        "names": [
          "borderRadius"
        ],
        "line": 237
      },
      {
        "type": "direct",
        "names": [
          "boxShadow"
        ],
        "line": 252
      },
      {
        "type": "direct",
        "names": [
          "animation"
        ],
        "line": 278
      },
      {
        "type": "direct",
        "names": [
          "components"
        ],
        "line": 314
      },
      {
        "type": "direct",
        "names": [
          "semantic"
        ],
        "line": 373
      },
      {
        "type": "direct",
        "names": [
          "breakpoints"
        ],
        "line": 450
      },
      {
        "type": "direct",
        "names": [
          "zIndex"
        ],
        "line": 462
      },
      {
        "type": "direct",
        "names": [
          "figmaColors"
        ],
        "line": 483
      },
      {
        "type": "direct",
        "names": [
          "designTokens"
        ],
        "line": 547
      },
      {
        "type": "default",
        "names": [
          "designTokens"
        ],
        "line": 561
      }
    ],
    "src/design-system/utils.ts": [
      {
        "type": "direct",
        "names": [
          "getColor"
        ],
        "line": 17
      },
      {
        "type": "direct",
        "names": [
          "getRBIColor"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "getColorVariant"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "getSpacing"
        ],
        "line": 100
      },
      {
        "type": "direct",
        "names": [
          "getResponsiveSpacing"
        ],
        "line": 109
      },
      {
        "type": "direct",
        "names": [
          "getFontSize"
        ],
        "line": 133
      },
      {
        "type": "direct",
        "names": [
          "getHeadingStyle"
        ],
        "line": 142
      },
      {
        "type": "direct",
        "names": [
          "getButtonStyles"
        ],
        "line": 178
      },
      {
        "type": "direct",
        "names": [
          "getInputStyles"
        ],
        "line": 239
      },
      {
        "type": "direct",
        "names": [
          "checkContrast"
        ],
        "line": 292
      },
      {
        "type": "direct",
        "names": [
          "getFocusRing"
        ],
        "line": 320
      },
      {
        "type": "direct",
        "names": [
          "validateDesignTokenUsage"
        ],
        "line": 338
      },
      {
        "type": "direct",
        "names": [
          "getSectoralBadgeColor"
        ],
        "line": 380
      },
      {
        "type": "direct",
        "names": [
          "getHouseholdTypeStyle"
        ],
        "line": 413
      },
      {
        "type": "default",
        "names": [
          "designSystemUtils"
        ],
        "line": 443
      }
    ],
    "src/hooks/accessibility/index.ts": [
      {
        "type": "named",
        "names": [
          "useFieldAccessibility",
          "useFieldGroupAccessibility"
        ],
        "line": 6
      }
    ],
    "src/hooks/accessibility/useFieldAccessibility.ts": [
      {
        "type": "direct",
        "names": [
          "useFieldAccessibility"
        ],
        "line": 83
      },
      {
        "type": "direct",
        "names": [
          "useFieldGroupAccessibility"
        ],
        "line": 126
      }
    ],
    "src/hooks/api/useGeographicData.ts": [
      {
        "type": "direct",
        "names": [
          "useGeographicData"
        ],
        "line": 42
      }
    ],
    "src/hooks/command-menu/index.ts": [
      {
        "type": "named",
        "names": [
          "useCommandMenu"
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "useCommandMenuWithApi"
        ],
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useCommandMenuSearch"
        ],
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "useCommandMenuRecents"
        ],
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "useCommandMenuActions"
        ],
        "line": 15
      }
    ],
    "src/hooks/command-menu/useCommandMenu.ts": [
      {
        "type": "direct",
        "names": [
          "useCommandMenu"
        ],
        "line": 12
      }
    ],
    "src/hooks/command-menu/useCommandMenuActions.ts": [
      {
        "type": "direct",
        "names": [
          "useCommandMenuActions"
        ],
        "line": 54
      },
      {
        "type": "default",
        "names": [
          "useCommandMenuActions"
        ],
        "line": 215
      }
    ],
    "src/hooks/command-menu/useCommandMenuRecents.ts": [
      {
        "type": "direct",
        "names": [
          "useCommandMenuRecents"
        ],
        "line": 48
      },
      {
        "type": "default",
        "names": [
          "useCommandMenuRecents"
        ],
        "line": 120
      }
    ],
    "src/hooks/command-menu/useCommandMenuSearch.ts": [
      {
        "type": "direct",
        "names": [
          "useCommandMenuSearch"
        ],
        "line": 60
      },
      {
        "type": "default",
        "names": [
          "useCommandMenuSearch"
        ],
        "line": 173
      }
    ],
    "src/hooks/command-menu/useCommandMenuWithApi.ts": [
      {
        "type": "direct",
        "names": [
          "useCommandMenuWithApi"
        ],
        "line": 74
      },
      {
        "type": "default",
        "names": [
          "useCommandMenuWithApi"
        ],
        "line": 199
      }
    ],
    "src/hooks/crud/index.ts": [
      {
        "type": "named",
        "names": [
          "useResidentOperations"
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "useHouseholdCrud"
        ],
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useResidents"
        ],
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "useHouseholds"
        ],
        "line": 14
      }
    ],
    "src/hooks/crud/useHouseholdCrud.ts": [
      {
        "type": "direct",
        "names": [
          "useHouseholdCrud"
        ],
        "line": 54
      }
    ],
    "src/hooks/crud/useHouseholds.ts": [
      {
        "type": "direct",
        "names": [
          "useHouseholds"
        ],
        "line": 86
      }
    ],
    "src/hooks/crud/useResidentOperations.ts": [
      {
        "type": "direct",
        "names": [
          "useResidentOperations"
        ],
        "line": 23
      }
    ],
    "src/hooks/crud/useResidents.ts": [
      {
        "type": "direct",
        "names": [
          "useResidents"
        ],
        "line": 88
      }
    ],
    "src/hooks/dashboard/index.ts": [
      {
        "type": "named",
        "names": [
          "useDashboard"
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "useDashboardApi"
        ],
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "useDashboardCalculations"
        ],
        "line": 14
      }
    ],
    "src/hooks/dashboard/useDashboard.ts": [
      {
        "type": "named",
        "names": [
          "calculateAge",
          "getAgeGroup",
          "processPopulationData",
          "calculateDependencyRatios",
          "calculateSexDistribution",
          "STANDARD_AGE_GROUPS"
        ],
        "line": 99
      },
      {
        "type": "direct",
        "names": [
          "useDashboard"
        ],
        "line": 54
      },
      {
        "type": "default",
        "names": [
          "useDashboard"
        ],
        "line": 109
      }
    ],
    "src/hooks/dashboard/useDashboardApi.ts": [
      {
        "type": "direct",
        "names": [
          "useDashboardApi"
        ],
        "line": 180
      },
      {
        "type": "default",
        "names": [
          "useDashboardApi"
        ],
        "line": 260
      }
    ],
    "src/hooks/dashboard/useDashboardCalculations.ts": [
      {
        "type": "named",
        "names": [
          "STANDARD_AGE_GROUPS",
          ""
        ],
        "line": 342
      },
      {
        "type": "direct",
        "names": [
          "calculateAge"
        ],
        "line": 27
      },
      {
        "type": "direct",
        "names": [
          "getAgeGroup"
        ],
        "line": 43
      },
      {
        "type": "direct",
        "names": [
          "processPopulationData"
        ],
        "line": 79
      },
      {
        "type": "direct",
        "names": [
          "calculateDependencyRatios"
        ],
        "line": 121
      },
      {
        "type": "direct",
        "names": [
          "calculateSexDistribution"
        ],
        "line": 157
      },
      {
        "type": "direct",
        "names": [
          "calculateCivilStatusDistribution"
        ],
        "line": 174
      },
      {
        "type": "direct",
        "names": [
          "calculateEmploymentStatusDistribution"
        ],
        "line": 217
      },
      {
        "type": "direct",
        "names": [
          "useDashboardCalculations"
        ],
        "line": 285
      },
      {
        "type": "default",
        "names": [
          "useDashboardCalculations"
        ],
        "line": 347
      }
    ],
    "src/hooks/index.ts": [
      {
        "type": "named",
        "names": [
          "useResidentOperations"
        ],
        "line": 9
      }
    ],
    "src/hooks/search/index.ts": [
      {
        "type": "named",
        "names": [
          "useGenericSearch",
          "useSearch"
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "useGenericPaginatedSearch",
          "usePaginatedSearch"
        ],
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useOptimizedPsgcSearch",
          "usePsgcSearch"
        ],
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "useOptimizedHouseholdSearch",
          "useHouseholdSearch"
        ],
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "useFormSearches"
        ],
        "line": 17
      }
    ],
    "src/hooks/search/useFormSearches.ts": [
      {
        "type": "direct",
        "names": [
          "useFormSearches"
        ],
        "line": 27
      }
    ],
    "src/hooks/search/useGenericPaginatedSearch.ts": [
      {
        "type": "named",
        "names": [
          "useGenericPaginatedSearch as usePaginatedSearch"
        ],
        "line": 105
      },
      {
        "type": "direct",
        "names": [
          "useGenericPaginatedSearch"
        ],
        "line": 51
      }
    ],
    "src/hooks/search/useGenericSearch.ts": [
      {
        "type": "named",
        "names": [
          "useGenericSearch as useSearch"
        ],
        "line": 120
      },
      {
        "type": "direct",
        "names": [
          "useGenericSearch"
        ],
        "line": 39
      }
    ],
    "src/hooks/search/useOptimizedHouseholdSearch.ts": [
      {
        "type": "named",
        "names": [
          "useOptimizedHouseholdSearch as useHouseholdSearch"
        ],
        "line": 251
      },
      {
        "type": "direct",
        "names": [
          "useOptimizedHouseholdSearch"
        ],
        "line": 105
      }
    ],
    "src/hooks/search/useOptimizedPsgcSearch.ts": [
      {
        "type": "named",
        "names": [
          "useOptimizedPsgcSearch as usePsgcSearch"
        ],
        "line": 261
      },
      {
        "type": "direct",
        "names": [
          "useOptimizedPsgcSearch"
        ],
        "line": 88
      },
      {
        "type": "default",
        "names": [
          "useOptimizedPsgcSearch"
        ],
        "line": 264
      }
    ],
    "src/hooks/search/useStreetsSearch.ts": [
      {
        "type": "direct",
        "names": [
          "useStreetsSearch"
        ],
        "line": 24
      }
    ],
    "src/hooks/search/useSubdivisionsSearch.ts": [
      {
        "type": "direct",
        "names": [
          "useSubdivisionsSearch"
        ],
        "line": 23
      }
    ],
    "src/hooks/ui/useCommandMenu.ts": [
      {
        "type": "direct",
        "names": [
          "useCommandMenu"
        ],
        "line": 35
      }
    ],
    "src/hooks/ui/useCommandMenuWithApi.ts": [
      {
        "type": "direct",
        "names": [
          "useCommandMenuWithApi"
        ],
        "line": 16
      }
    ],
    "src/hooks/utilities/createValidationHook.ts": [
      {
        "type": "direct",
        "names": [
          "createValidationHook"
        ],
        "line": 61
      },
      {
        "type": "direct",
        "names": [
          "CommonSchemas"
        ],
        "line": 250
      },
      {
        "type": "direct",
        "names": [
          "useEmailValidation"
        ],
        "line": 262
      },
      {
        "type": "direct",
        "names": [
          "usePhoneValidation"
        ],
        "line": 263
      },
      {
        "type": "direct",
        "names": [
          "useRequiredValidation"
        ],
        "line": 264
      },
      {
        "type": "default",
        "names": [
          "createValidationHook"
        ],
        "line": 267
      }
    ],
    "src/hooks/utilities/index.ts": [
      {
        "type": "named",
        "names": [
          "useAsyncErrorBoundary"
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "useFieldErrorHandler"
        ],
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useLogger"
        ],
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "usePerformanceMonitor",
          "withPerformanceMonitoring"
        ],
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "useRetryLogic",
          "RetryStrategies",
          "withRetryLogic"
        ],
        "line": 13
      },
      {
        "type": "named",
        "names": [
          "useDebounce"
        ],
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "usePersistedState"
        ],
        "line": 17
      },
      {
        "type": "named",
        "names": [
          "useSelector"
        ],
        "line": 18
      },
      {
        "type": "named",
        "names": [
          "useLastVisitedPage"
        ],
        "line": 21
      },
      {
        "type": "named",
        "names": [
          "useConnectionStatus"
        ],
        "line": 22
      },
      {
        "type": "named",
        "names": [
          "usePreloadOnHover"
        ],
        "line": 23
      },
      {
        "type": "named",
        "names": [
          "useUserBarangay"
        ],
        "line": 26
      },
      {
        "type": "named",
        "names": [
          "useAddressResolution"
        ],
        "line": 27
      },
      {
        "type": "named",
        "names": [
          "useHouseholdCodeGeneration"
        ],
        "line": 28
      },
      {
        "type": "named",
        "names": [
          "useHouseholdForm"
        ],
        "line": 29
      },
      {
        "type": "named",
        "names": [
          "useMigrationInformation"
        ],
        "line": 30
      },
      {
        "type": "named",
        "names": [
          "useFormSubmission"
        ],
        "line": 33
      },
      {
        "type": "named",
        "names": [
          "useResidentSubmission"
        ],
        "line": 34
      },
      {
        "type": "named",
        "names": [
          "createValidationHook"
        ],
        "line": 37
      }
    ],
    "src/hooks/utilities/useAddressResolution.ts": [
      {
        "type": "direct",
        "names": [
          "useAddressResolution"
        ],
        "line": 71
      }
    ],
    "src/hooks/utilities/useAsyncErrorBoundary.ts": [
      {
        "type": "direct",
        "names": [
          "useAsyncErrorBoundary"
        ],
        "line": 69
      },
      {
        "type": "default",
        "names": [
          "useAsyncErrorBoundary"
        ],
        "line": 257
      }
    ],
    "src/hooks/utilities/useAsyncUtils.ts": [
      {
        "type": "direct",
        "names": [
          "useDebouncedCallback"
        ],
        "line": 16
      },
      {
        "type": "direct",
        "names": [
          "useThrottledCallback"
        ],
        "line": 41
      },
      {
        "type": "direct",
        "names": [
          "useRetry"
        ],
        "line": 66
      },
      {
        "type": "direct",
        "names": [
          "useAsyncUtils"
        ],
        "line": 73
      },
      {
        "type": "default",
        "names": [
          "useAsyncUtils"
        ],
        "line": 81
      }
    ],
    "src/hooks/utilities/useConnectionStatus.ts": [
      {
        "type": "direct",
        "names": [
          "useConnectionStatus"
        ],
        "line": 28
      },
      {
        "type": "default",
        "names": [
          "useConnectionStatus"
        ],
        "line": 63
      }
    ],
    "src/hooks/utilities/useDebounce.ts": [
      {
        "type": "direct",
        "names": [
          "useDebounce"
        ],
        "line": 11
      }
    ],
    "src/hooks/utilities/useFieldErrorHandler.ts": [
      {
        "type": "direct",
        "names": [
          "useFieldErrorHandler"
        ],
        "line": 25
      },
      {
        "type": "default",
        "names": [
          "useFieldErrorHandler"
        ],
        "line": 40
      }
    ],
    "src/hooks/utilities/useFormSubmission.ts": [
      {
        "type": "direct",
        "names": [
          "useFormSubmission"
        ],
        "line": 21
      }
    ],
    "src/hooks/utilities/useHouseholdCodeGeneration.ts": [
      {
        "type": "direct",
        "names": [
          "useHouseholdCodeGeneration"
        ],
        "line": 35
      }
    ],
    "src/hooks/utilities/useHouseholdForm.ts": [
      {
        "type": "direct",
        "names": [
          "useHouseholdForm"
        ],
        "line": 64
      }
    ],
    "src/hooks/utilities/useLastVisitedPage.ts": [
      {
        "type": "direct",
        "names": [
          "useLastVisitedPage"
        ],
        "line": 19
      }
    ],
    "src/hooks/utilities/useLogger.ts": [
      {
        "type": "direct",
        "names": [
          "useLogger"
        ],
        "line": 136
      },
      {
        "type": "direct",
        "names": [
          "logger"
        ],
        "line": 301
      }
    ],
    "src/hooks/utilities/useMigrationInformation.ts": [
      {
        "type": "direct",
        "names": [
          "useMigrationInformation"
        ],
        "line": 53
      }
    ],
    "src/hooks/utilities/usePerformanceMonitor.ts": [
      {
        "type": "direct",
        "names": [
          "usePerformanceMonitor"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "withPerformanceMonitoring"
        ],
        "line": 164
      },
      {
        "type": "default",
        "names": [
          "usePerformanceMonitor"
        ],
        "line": 186
      }
    ],
    "src/hooks/utilities/usePersistedState.ts": [
      {
        "type": "direct",
        "names": [
          "usePersistedState"
        ],
        "line": 9
      },
      {
        "type": "direct",
        "names": [
          "usePersistedFormState"
        ],
        "line": 49
      }
    ],
    "src/hooks/utilities/usePreloadOnHover.ts": [
      {
        "type": "direct",
        "names": [
          "usePreloadOnHover"
        ],
        "line": 58
      }
    ],
    "src/hooks/utilities/useResidentAsyncValidation.ts": [
      {
        "type": "direct",
        "names": [
          "useResidentAsyncValidation"
        ],
        "line": 63
      },
      {
        "type": "default",
        "names": [
          "useResidentAsyncValidation"
        ],
        "line": 285
      }
    ],
    "src/hooks/utilities/useResidentCrossFieldValidation.ts": [
      {
        "type": "direct",
        "names": [
          "useResidentCrossFieldValidation"
        ],
        "line": 90
      },
      {
        "type": "default",
        "names": [
          "useResidentCrossFieldValidation"
        ],
        "line": 163
      }
    ],
    "src/hooks/utilities/useResidentSubmission.ts": [
      {
        "type": "direct",
        "names": [
          "useResidentSubmission"
        ],
        "line": 47
      }
    ],
    "src/hooks/utilities/useRetryLogic.ts": [
      {
        "type": "direct",
        "names": [
          "useRetryLogic"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "RetryStrategies"
        ],
        "line": 307
      },
      {
        "type": "direct",
        "names": [
          "withRetryLogic"
        ],
        "line": 350
      },
      {
        "type": "default",
        "names": [
          "useRetryLogic"
        ],
        "line": 361
      }
    ],
    "src/hooks/utilities/useSelector.ts": [
      {
        "type": "direct",
        "names": [
          "useSelector"
        ],
        "line": 16
      }
    ],
    "src/hooks/utilities/useUserBarangay.ts": [
      {
        "type": "direct",
        "names": [
          "useUserBarangay"
        ],
        "line": 18
      },
      {
        "type": "direct",
        "names": [
          "useBarangayAccess"
        ],
        "line": 80
      },
      {
        "type": "direct",
        "names": [
          "useUserBarangays"
        ],
        "line": 88
      }
    ],
    "src/hooks/validation/index.ts": [
      {
        "type": "named",
        "names": [
          "useGenericValidation"
        ],
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useOptimizedResidentValidation",
          "useResidentFormValidation"
        ],
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "//   useOptimizedHouseholdValidation",
          "//   useHouseholdValidation \n//"
        ],
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "useResidentValidationCore"
        ],
        "line": 22
      },
      {
        "type": "named",
        "names": [
          "useResidentCrossFieldValidation"
        ],
        "line": 23
      },
      {
        "type": "named",
        "names": [
          "useResidentAsyncValidation"
        ],
        "line": 24
      },
      {
        "type": "named",
        "names": [
          "useResidentValidationProgress"
        ],
        "line": 25
      },
      {
        "type": "named",
        "names": [
          "useResidentValidationErrors"
        ],
        "line": 26
      },
      {
        "type": "named",
        "names": [
          "createValidationHook",
          "useEmailValidation",
          "usePhoneValidation",
          "useRequiredValidation",
          "CommonSchemas"
        ],
        "line": 29
      },
      {
        "type": "named",
        "names": [
          "useResidentValidation",
          "ResidentValidationSections",
          "validateResidentData"
        ],
        "line": 38
      }
    ],
    "src/hooks/validation/useGenericValidation.ts": [
      {
        "type": "direct",
        "names": [
          "useGenericValidation"
        ],
        "line": 66
      }
    ],
    "src/hooks/validation/useOptimizedHouseholdValidation.ts": [
      {
        "type": "named",
        "names": [
          "useOptimizedHouseholdValidation as useHouseholdValidation"
        ],
        "line": 175
      },
      {
        "type": "direct",
        "names": [
          "useOptimizedHouseholdValidation"
        ],
        "line": 115
      }
    ],
    "src/hooks/validation/useOptimizedResidentValidation.ts": [
      {
        "type": "named",
        "names": [
          "useOptimizedResidentValidation as useResidentFormValidation"
        ],
        "line": 138
      },
      {
        "type": "direct",
        "names": [
          "useOptimizedResidentValidation"
        ],
        "line": 61
      },
      {
        "type": "default",
        "names": [
          "useOptimizedResidentValidation"
        ],
        "line": 141
      }
    ],
    "src/hooks/validation/useResidentValidation.ts": [
      {
        "type": "direct",
        "names": [
          "useResidentValidation"
        ],
        "line": 186
      },
      {
        "type": "direct",
        "names": [
          "ResidentValidationSections"
        ],
        "line": 199
      },
      {
        "type": "direct",
        "names": [
          "validateResidentData"
        ],
        "line": 250
      },
      {
        "type": "default",
        "names": [
          "useResidentValidation"
        ],
        "line": 288
      }
    ],
    "src/hooks/validation/useResidentValidationCore.ts": [
      {
        "type": "direct",
        "names": [
          "useResidentValidationCore"
        ],
        "line": 87
      },
      {
        "type": "default",
        "names": [
          "useResidentValidationCore"
        ],
        "line": 315
      }
    ],
    "src/hooks/validation/useResidentValidationErrors.ts": [
      {
        "type": "direct",
        "names": [
          "useResidentValidationErrors"
        ],
        "line": 44
      }
    ],
    "src/hooks/validation/useResidentValidationProgress.ts": [
      {
        "type": "direct",
        "names": [
          "useResidentValidationProgress"
        ],
        "line": 65
      },
      {
        "type": "default",
        "names": [
          "useResidentValidationProgress"
        ],
        "line": 206
      }
    ],
    "src/hooks/workflows/index.ts": [
      {
        "type": "named",
        "names": [
          "useResidentEditWorkflow",
          "useResidentEditForm"
        ],
        "line": 10
      },
      {
        "type": "named",
        "names": [
          "useResidentFormState"
        ],
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "useHouseholdCreationWorkflow",
          "useHouseholdCreation"
        ],
        "line": 14
      },
      {
        "type": "named",
        "names": [
          "useHouseholdOperationsWorkflow"
        ],
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "useHouseholdOperations"
        ],
        "line": 16
      },
      {
        "type": "named",
        "names": [
          "useHouseholdCreationOperation"
        ],
        "line": 19
      },
      {
        "type": "named",
        "names": [
          "useHouseholdCreationService"
        ],
        "line": 20
      }
    ],
    "src/hooks/workflows/useHouseholdCreationOperation.ts": [
      {
        "type": "direct",
        "names": [
          "useHouseholdCreationOperation"
        ],
        "line": 51
      }
    ],
    "src/hooks/workflows/useHouseholdCreationService.ts": [
      {
        "type": "direct",
        "names": [
          "useHouseholdCreationService"
        ],
        "line": 54
      }
    ],
    "src/hooks/workflows/useHouseholdCreationWorkflow.ts": [
      {
        "type": "named",
        "names": [
          "useHouseholdCreationWorkflow as useHouseholdCreation"
        ],
        "line": 170
      },
      {
        "type": "direct",
        "names": [
          "useHouseholdCreationWorkflow"
        ],
        "line": 78
      }
    ],
    "src/hooks/workflows/useHouseholdOperationsWorkflow.ts": [
      {
        "type": "named",
        "names": [
          "useHouseholdOperationsWorkflow as useHouseholdOperations"
        ],
        "line": 172
      },
      {
        "type": "direct",
        "names": [
          "useHouseholdOperationsWorkflow"
        ],
        "line": 78
      },
      {
        "type": "default",
        "names": [
          "useHouseholdOperationsWorkflow"
        ],
        "line": 175
      }
    ],
    "src/hooks/workflows/useResidentEditWorkflow.ts": [
      {
        "type": "named",
        "names": [
          "useResidentEditWorkflow as useResidentEditForm"
        ],
        "line": 187
      },
      {
        "type": "direct",
        "names": [
          "useResidentEditWorkflow"
        ],
        "line": 85
      }
    ],
    "src/hooks/workflows/useResidentFormState.ts": [
      {
        "type": "direct",
        "names": [
          "useResidentFormState"
        ],
        "line": 60
      }
    ],
    "src/lib/analytics/index.ts": [
      {
        "type": "named",
        "names": [
          "trackPWAEvents",
          "pwaPerformance"
        ],
        "line": 10
      }
    ],
    "src/lib/analytics/user-behavior.ts": [
      {
        "type": "direct",
        "names": [
          "loadUserMetrics"
        ],
        "line": 33
      },
      {
        "type": "direct",
        "names": [
          "saveUserMetrics"
        ],
        "line": 52
      },
      {
        "type": "direct",
        "names": [
          "getDefaultMetrics"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "updatePageViewMetrics"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "trackUserInteraction"
        ],
        "line": 98
      },
      {
        "type": "direct",
        "names": [
          "trackTimeSpent"
        ],
        "line": 108
      },
      {
        "type": "direct",
        "names": [
          "shouldShowInstallPrompt"
        ],
        "line": 119
      },
      {
        "type": "direct",
        "names": [
          "getPWAInstallCriteria"
        ],
        "line": 147
      },
      {
        "type": "direct",
        "names": [
          "getPersonalizedInstallMessage"
        ],
        "line": 163
      },
      {
        "type": "direct",
        "names": [
          "isPWAInstalled"
        ],
        "line": 194
      },
      {
        "type": "direct",
        "names": [
          "recordInstallDismissal"
        ],
        "line": 213
      },
      {
        "type": "direct",
        "names": [
          "getInstallPromptDelay"
        ],
        "line": 226
      },
      {
        "type": "direct",
        "names": [
          "setupUserInteractionTracking"
        ],
        "line": 234
      },
      {
        "type": "direct",
        "names": [
          "setupTimeTracking"
        ],
        "line": 257
      }
    ],
    "src/lib/api/auditUtils.ts": [],
    "src/lib/api/index.ts": [],
    "src/lib/api/responseUtils.ts": [],
    "src/lib/api/types.ts": [],
    "src/lib/api/validationUtils.ts": [],
    "src/lib/auth/csrf.ts": [],
    "src/lib/auth/index.ts": [],
    "src/lib/authentication/auditUtils.ts": [
      {
        "type": "direct",
        "names": [
          "createAuditQuery"
        ],
        "line": 397
      }
    ],
    "src/lib/authentication/auth-errors.ts": [
      {
        "type": "direct",
        "names": [
          "AUTH_ERROR_MESSAGES"
        ],
        "line": 4
      },
      {
        "type": "direct",
        "names": [
          "getErrorMessage"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "getStatusCodeForError"
        ],
        "line": 48
      }
    ],
    "src/lib/authentication/auth-helpers.ts": [
      {
        "type": "direct",
        "names": [
          "registerUser"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "signInUser"
        ],
        "line": 101
      },
      {
        "type": "direct",
        "names": [
          "signOutUser"
        ],
        "line": 133
      },
      {
        "type": "direct",
        "names": [
          "getUserProfile"
        ],
        "line": 147
      },
      {
        "type": "direct",
        "names": [
          "updateUserProfile"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "requestPasswordReset"
        ],
        "line": 209
      },
      {
        "type": "direct",
        "names": [
          "updatePassword"
        ],
        "line": 224
      },
      {
        "type": "direct",
        "names": [
          "hasRole"
        ],
        "line": 246
      },
      {
        "type": "direct",
        "names": [
          "isAdmin"
        ],
        "line": 253
      },
      {
        "type": "direct",
        "names": [
          "canAccessBarangay"
        ],
        "line": 263
      },
      {
        "type": "direct",
        "names": [
          "getUserAccessibleBarangays"
        ],
        "line": 280
      },
      {
        "type": "direct",
        "names": [
          "getCurrentSession"
        ],
        "line": 300
      },
      {
        "type": "direct",
        "names": [
          "getCurrentUser"
        ],
        "line": 317
      },
      {
        "type": "direct",
        "names": [
          "onAuthStateChange"
        ],
        "line": 334
      },
      {
        "type": "direct",
        "names": [
          "getRegions"
        ],
        "line": 345
      },
      {
        "type": "direct",
        "names": [
          "getProvincesByRegion"
        ],
        "line": 355
      },
      {
        "type": "direct",
        "names": [
          "getCitiesByProvince"
        ],
        "line": 369
      },
      {
        "type": "direct",
        "names": [
          "getBarangaysByCity"
        ],
        "line": 383
      },
      {
        "type": "direct",
        "names": [
          "searchBarangays"
        ],
        "line": 397
      },
      {
        "type": "direct",
        "names": [
          "searchOccupations"
        ],
        "line": 420
      },
      {
        "type": "direct",
        "names": [
          "getAuthErrorMessage"
        ],
        "line": 438
      }
    ],
    "src/lib/authentication/auth.ts": [
      {
        "type": "direct",
        "names": [
          "registerUser"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "signInUser"
        ],
        "line": 101
      },
      {
        "type": "direct",
        "names": [
          "signOutUser"
        ],
        "line": 133
      },
      {
        "type": "direct",
        "names": [
          "getUserProfile"
        ],
        "line": 147
      },
      {
        "type": "direct",
        "names": [
          "updateUserProfile"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "requestPasswordReset"
        ],
        "line": 209
      },
      {
        "type": "direct",
        "names": [
          "updatePassword"
        ],
        "line": 224
      },
      {
        "type": "direct",
        "names": [
          "hasRole"
        ],
        "line": 246
      },
      {
        "type": "direct",
        "names": [
          "isAdmin"
        ],
        "line": 253
      },
      {
        "type": "direct",
        "names": [
          "canAccessBarangay"
        ],
        "line": 263
      },
      {
        "type": "direct",
        "names": [
          "getUserAccessibleBarangays"
        ],
        "line": 280
      },
      {
        "type": "direct",
        "names": [
          "getCurrentSession"
        ],
        "line": 300
      },
      {
        "type": "direct",
        "names": [
          "getCurrentUser"
        ],
        "line": 317
      },
      {
        "type": "direct",
        "names": [
          "onAuthStateChange"
        ],
        "line": 334
      },
      {
        "type": "direct",
        "names": [
          "getRegions"
        ],
        "line": 345
      },
      {
        "type": "direct",
        "names": [
          "getProvincesByRegion"
        ],
        "line": 355
      },
      {
        "type": "direct",
        "names": [
          "getCitiesByProvince"
        ],
        "line": 369
      },
      {
        "type": "direct",
        "names": [
          "getBarangaysByCity"
        ],
        "line": 383
      },
      {
        "type": "direct",
        "names": [
          "searchBarangays"
        ],
        "line": 397
      },
      {
        "type": "direct",
        "names": [
          "searchOccupations"
        ],
        "line": 420
      },
      {
        "type": "direct",
        "names": [
          "getAuthErrorMessage"
        ],
        "line": 438
      }
    ],
    "src/lib/authentication/authUtils.ts": [
      {
        "type": "direct",
        "names": [
          "hasPermission"
        ],
        "line": 64
      },
      {
        "type": "direct",
        "names": [
          "hasAnyPermission"
        ],
        "line": 72
      },
      {
        "type": "direct",
        "names": [
          "getAccessLevel"
        ],
        "line": 79
      },
      {
        "type": "direct",
        "names": [
          "withAuth"
        ],
        "line": 286
      },
      {
        "type": "direct",
        "names": [
          "createAuthorizedSupabaseClient"
        ],
        "line": 321
      },
      {
        "type": "direct",
        "names": [
          "createAdminSupabaseClient"
        ],
        "line": 338
      },
      {
        "type": "direct",
        "names": [
          "applyGeographicFilter"
        ],
        "line": 354
      }
    ],
    "src/lib/authentication/csrf-utils.ts": [
      {
        "type": "direct",
        "names": [
          "generateCSRFToken"
        ],
        "line": 41
      },
      {
        "type": "direct",
        "names": [
          "verifyCSRFToken"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "createCSRFTokenString"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "verifyCSRFTokenString"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "useCSRFToken"
        ],
        "line": 138
      },
      {
        "type": "direct",
        "names": [
          "validateCSRFMiddleware"
        ],
        "line": 177
      },
      {
        "type": "direct",
        "names": [
          "getCSRFMetaTags"
        ],
        "line": 197
      }
    ],
    "src/lib/authentication/csrf.ts": [
      {
        "type": "direct",
        "names": [
          "generateCSRFToken"
        ],
        "line": 41
      },
      {
        "type": "direct",
        "names": [
          "verifyCSRFToken"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "createCSRFTokenString"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "verifyCSRFTokenString"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "useCSRFToken"
        ],
        "line": 138
      },
      {
        "type": "direct",
        "names": [
          "validateCSRFMiddleware"
        ],
        "line": 177
      },
      {
        "type": "direct",
        "names": [
          "getCSRFMetaTags"
        ],
        "line": 197
      }
    ],
    "src/lib/authentication/errors.ts": [
      {
        "type": "direct",
        "names": [
          "AUTH_ERROR_MESSAGES"
        ],
        "line": 4
      },
      {
        "type": "direct",
        "names": [
          "getErrorMessage"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "getStatusCodeForError"
        ],
        "line": 48
      }
    ],
    "src/lib/authentication/index.ts": [],
    "src/lib/authentication/responseUtils.ts": [
      {
        "type": "direct",
        "names": [
          "createSuccessResponse"
        ],
        "line": 21
      },
      {
        "type": "direct",
        "names": [
          "createPaginatedResponse"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "createErrorResponse"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "createValidationErrorResponse"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "createUnauthorizedResponse"
        ],
        "line": 121
      },
      {
        "type": "direct",
        "names": [
          "createForbiddenResponse"
        ],
        "line": 131
      },
      {
        "type": "direct",
        "names": [
          "createNotFoundResponse"
        ],
        "line": 141
      },
      {
        "type": "direct",
        "names": [
          "createConflictResponse"
        ],
        "line": 158
      },
      {
        "type": "direct",
        "names": [
          "createRateLimitResponse"
        ],
        "line": 165
      },
      {
        "type": "direct",
        "names": [
          "applySearchFilter"
        ],
        "line": 328
      },
      {
        "type": "direct",
        "names": [
          "withErrorHandling"
        ],
        "line": 342
      },
      {
        "type": "direct",
        "names": [
          "withNextRequestErrorHandling"
        ],
        "line": 378
      },
      {
        "type": "direct",
        "names": [
          "createCreatedResponse"
        ],
        "line": 414
      },
      {
        "type": "direct",
        "names": [
          "createNoContentResponse"
        ],
        "line": 435
      },
      {
        "type": "direct",
        "names": [
          "addSecurityHeaders"
        ],
        "line": 442
      },
      {
        "type": "direct",
        "names": [
          "withSecurityHeaders"
        ],
        "line": 455
      }
    ],
    "src/lib/authentication/types.ts": [
      {
        "type": "direct",
        "names": [
          "ROLE_PERMISSIONS"
        ],
        "line": 89
      }
    ],
    "src/lib/authentication/validationUtils.ts": [
      {
        "type": "direct",
        "names": [
          "emailSchema"
        ],
        "line": 10
      },
      {
        "type": "direct",
        "names": [
          "phoneSchema"
        ],
        "line": 12
      },
      {
        "type": "direct",
        "names": [
          "psgcCodeSchema"
        ],
        "line": 18
      },
      {
        "type": "direct",
        "names": [
          "nameSchema"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "passwordSchema"
        ],
        "line": 29
      },
      {
        "type": "direct",
        "names": [
          "dateSchema"
        ],
        "line": 39
      },
      {
        "type": "direct",
        "names": [
          "paginationSchema"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "sortSchema"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "searchSchema"
        ],
        "line": 63
      },
      {
        "type": "direct",
        "names": [
          "createResidentSchema"
        ],
        "line": 72
      },
      {
        "type": "direct",
        "names": [
          "updateResidentSchema"
        ],
        "line": 168
      },
      {
        "type": "direct",
        "names": [
          "createHouseholdSchema"
        ],
        "line": 171
      },
      {
        "type": "direct",
        "names": [
          "updateHouseholdSchema"
        ],
        "line": 187
      },
      {
        "type": "direct",
        "names": [
          "createUserSchema"
        ],
        "line": 190
      },
      {
        "type": "direct",
        "names": [
          "updateUserSchema"
        ],
        "line": 200
      },
      {
        "type": "direct",
        "names": [
          "loginSchema"
        ],
        "line": 203
      },
      {
        "type": "direct",
        "names": [
          "signupSchema"
        ],
        "line": 208
      },
      {
        "type": "direct",
        "names": [
          "geographicFilterSchema"
        ],
        "line": 217
      },
      {
        "type": "direct",
        "names": [
          "fileUploadSchema"
        ],
        "line": 225
      },
      {
        "type": "direct",
        "names": [
          "handleValidationError"
        ],
        "line": 239
      },
      {
        "type": "direct",
        "names": [
          "sanitizeSearchInput"
        ],
        "line": 259
      },
      {
        "type": "direct",
        "names": [
          "validatePagination"
        ],
        "line": 271
      },
      {
        "type": "direct",
        "names": [
          "validateSort"
        ],
        "line": 291
      },
      {
        "type": "direct",
        "names": [
          "withValidation"
        ],
        "line": 311
      }
    ],
    "src/lib/business-rules/index.ts": [
      {
        "type": "named",
        "names": [
          "calculateAge",
          "isOutOfSchoolChildren",
          "isOutOfSchoolYouth",
          "isSeniorCitizen",
          "isEmployed",
          "isUnemployed",
          "isIndigenousPeople",
          "updateSectoralInformation",
          "getActiveSectoralClassifications",
          "EMPLOYED_STATUSES",
          "UNEMPLOYED_STATUSES",
          "INDIGENOUS_ETHNICITIES",
          ""
        ],
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "isValidMobileNumber",
          "isValidPhilSysCardNumber",
          "isValidBirthdate",
          "shouldShowReligionOthersField",
          "shouldShowCivilStatusOthersField",
          "shouldShowMigrationFields",
          "shouldShowPreviousAddressFields",
          "shouldShowOccupationFields",
          "shouldShowUnemploymentFields",
          "shouldShowGraduationStatus",
          "shouldShowSectoralDetails",
          "calculateFormCompletionPercentage",
          "getFieldDependencies",
          "isMinor",
          ""
        ],
        "line": 23
      },
      {
        "type": "named",
        "names": [
          "initializeResidentFields",
          "getComputedFieldTooltip",
          "getAuthSession",
          "fetchResidentData",
          ""
        ],
        "line": 41
      },
      {
        "type": "named",
        "names": [
          "formatResidentDetailFullName",
          "formatDate as formatDetailDate",
          "calculateAge as calculateAgeFromDate",
          ""
        ],
        "line": 48
      },
      {
        "type": "named",
        "names": [
          "formatResidentListFullName",
          "formatDate as formatListingDate",
          "fetchResidents",
          ""
        ],
        "line": 54
      }
    ],
    "src/lib/business-rules/resident-detail-helpers.ts": [
      {
        "type": "direct",
        "names": [
          "formatResidentDetailFullName"
        ],
        "line": 33
      },
      {
        "type": "direct",
        "names": [
          "formatDate"
        ],
        "line": 60
      },
      {
        "type": "direct",
        "names": [
          "calculateAge"
        ],
        "line": 89
      }
    ],
    "src/lib/business-rules/resident-form-rules.ts": [
      {
        "type": "direct",
        "names": [
          "shouldShowReligionOthersField"
        ],
        "line": 6
      },
      {
        "type": "direct",
        "names": [
          "shouldShowCivilStatusOthersField"
        ],
        "line": 11
      },
      {
        "type": "direct",
        "names": [
          "shouldShowMigrationFields"
        ],
        "line": 16
      },
      {
        "type": "direct",
        "names": [
          "shouldShowPreviousAddressFields"
        ],
        "line": 20
      },
      {
        "type": "direct",
        "names": [
          "shouldShowOccupationFields"
        ],
        "line": 25
      },
      {
        "type": "direct",
        "names": [
          "shouldShowUnemploymentFields"
        ],
        "line": 29
      },
      {
        "type": "direct",
        "names": [
          "shouldShowGraduationStatus"
        ],
        "line": 34
      },
      {
        "type": "direct",
        "names": [
          "calculateAge"
        ],
        "line": 45
      },
      {
        "type": "direct",
        "names": [
          "isSeniorCitizen"
        ],
        "line": 59
      },
      {
        "type": "direct",
        "names": [
          "isMinor"
        ],
        "line": 63
      },
      {
        "type": "direct",
        "names": [
          "shouldShowSectoralDetails"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "calculateFormCompletionPercentage"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "isValidPhilSysCardNumber"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "isValidMobileNumber"
        ],
        "line": 110
      },
      {
        "type": "direct",
        "names": [
          "isValidBirthdate"
        ],
        "line": 126
      },
      {
        "type": "direct",
        "names": [
          "getFieldDependencies"
        ],
        "line": 148
      }
    ],
    "src/lib/business-rules/resident-helpers.ts": [
      {
        "type": "direct",
        "names": [
          "initializeResidentFields"
        ],
        "line": 12
      },
      {
        "type": "direct",
        "names": [
          "getComputedFieldTooltip"
        ],
        "line": 41
      },
      {
        "type": "direct",
        "names": [
          "getAuthSession"
        ],
        "line": 60
      },
      {
        "type": "direct",
        "names": [
          "fetchResidentData"
        ],
        "line": 72
      }
    ],
    "src/lib/business-rules/resident-listing-helpers.ts": [
      {
        "type": "direct",
        "names": [
          "formatResidentListFullName"
        ],
        "line": 33
      },
      {
        "type": "direct",
        "names": [
          "formatDate"
        ],
        "line": 60
      },
      {
        "type": "direct",
        "names": [
          "fetchResidents"
        ],
        "line": 87
      }
    ],
    "src/lib/business-rules/sectoral-classification.ts": [
      {
        "type": "direct",
        "names": [
          "EMPLOYED_STATUSES"
        ],
        "line": 10
      },
      {
        "type": "direct",
        "names": [
          "UNEMPLOYED_STATUSES"
        ],
        "line": 11
      },
      {
        "type": "direct",
        "names": [
          "INDIGENOUS_ETHNICITIES"
        ],
        "line": 14
      },
      {
        "type": "direct",
        "names": [
          "calculateAge"
        ],
        "line": 34
      },
      {
        "type": "direct",
        "names": [
          "isOutOfSchoolChildren"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "isOutOfSchoolYouth"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "isIndigenousPeople"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "isEmployed"
        ],
        "line": 92
      },
      {
        "type": "direct",
        "names": [
          "isUnemployed"
        ],
        "line": 99
      },
      {
        "type": "direct",
        "names": [
          "isSeniorCitizen"
        ],
        "line": 106
      },
      {
        "type": "direct",
        "names": [
          "calculateSectoralFlags"
        ],
        "line": 113
      },
      {
        "type": "direct",
        "names": [
          "updateSectoralInformation"
        ],
        "line": 135
      },
      {
        "type": "direct",
        "names": [
          "getActiveSectoralClassifications"
        ],
        "line": 154
      }
    ],
    "src/lib/charts/index.ts": [],
    "src/lib/command-menu/analytics-utils.ts": [
      {
        "type": "direct",
        "names": [
          "commandMenuAnalytics"
        ],
        "line": 262
      },
      {
        "type": "direct",
        "names": [
          "trackCommandMenuSearch"
        ],
        "line": 265
      },
      {
        "type": "direct",
        "names": [
          "trackCommandMenuNavigation"
        ],
        "line": 268
      },
      {
        "type": "direct",
        "names": [
          "trackCommandMenuAction"
        ],
        "line": 271
      },
      {
        "type": "direct",
        "names": [
          "trackWorkflowSuggestion"
        ],
        "line": 274
      },
      {
        "type": "direct",
        "names": [
          "trackCommandMenuError"
        ],
        "line": 277
      },
      {
        "type": "direct",
        "names": [
          "startCommandMenuSearchTimer"
        ],
        "line": 280
      },
      {
        "type": "direct",
        "names": [
          "endCommandMenuSearchTimer"
        ],
        "line": 283
      },
      {
        "type": "direct",
        "names": [
          "getCommandMenuHealth"
        ],
        "line": 287
      }
    ],
    "src/lib/command-menu/api-utils.ts": [],
    "src/lib/command-menu/index.ts": [
      {
        "type": "named",
        "names": [
          "getRecentItems as getRecentApiItems",
          "clearRecentItems as clearRecentApiItems",
          "searchData",
          "exportData",
          "createResident",
          "createHousehold",
          "findSeniorCitizens",
          "findPWDs",
          "findSoloParents",
          "backupData",
          "generateCertificate",
          "generateReport",
          ""
        ],
        "line": 9
      }
    ],
    "src/lib/command-menu/items-utils.ts": [
      {
        "type": "direct",
        "names": [
          "Icons"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "getCommandMenuItems"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "getRecentItems"
        ],
        "line": 314
      },
      {
        "type": "direct",
        "names": [
          "getAllCommandMenuItems"
        ],
        "line": 359
      }
    ],
    "src/lib/config/dev-config.ts": [
      {
        "type": "direct",
        "names": [
          "isDevFeatureEnabled"
        ],
        "line": 14
      },
      {
        "type": "direct",
        "names": [
          "getDevCredentials"
        ],
        "line": 22
      },
      {
        "type": "direct",
        "names": [
          "getDemoUserConfig"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "logDevModeWarning"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "validateDevEnvironment"
        ],
        "line": 75
      }
    ],
    "src/lib/config/env-config.ts": [
      {
        "type": "direct",
        "names": [
          "detectEnvironment"
        ],
        "line": 20
      },
      {
        "type": "direct",
        "names": [
          "getEnvironmentConfig"
        ],
        "line": 43
      },
      {
        "type": "direct",
        "names": [
          "QUALITY_TIERS"
        ],
        "line": 77
      },
      {
        "type": "direct",
        "names": [
          "getQualityChecks"
        ],
        "line": 119
      },
      {
        "type": "direct",
        "names": [
          "shouldEnableFeature"
        ],
        "line": 127
      },
      {
        "type": "direct",
        "names": [
          "getToolConfig"
        ],
        "line": 147
      },
      {
        "type": "direct",
        "names": [
          "logEnvironmentInfo"
        ],
        "line": 177
      }
    ],
    "src/lib/config/environment.ts": [
      {
        "type": "direct",
        "names": [
          "getEnvironment"
        ],
        "line": 11
      },
      {
        "type": "direct",
        "names": [
          "isDevelopment"
        ],
        "line": 27
      },
      {
        "type": "direct",
        "names": [
          "isStaging"
        ],
        "line": 28
      },
      {
        "type": "direct",
        "names": [
          "isProduction"
        ],
        "line": 29
      },
      {
        "type": "direct",
        "names": [
          "isTest"
        ],
        "line": 30
      },
      {
        "type": "direct",
        "names": [
          "isProductionLike"
        ],
        "line": 35
      },
      {
        "type": "direct",
        "names": [
          "isDebugEnabled"
        ],
        "line": 40
      },
      {
        "type": "direct",
        "names": [
          "getEnvironmentConfig"
        ],
        "line": 47
      },
      {
        "type": "direct",
        "names": [
          "getSupabaseConfig"
        ],
        "line": 79
      },
      {
        "type": "direct",
        "names": [
          "createLogger"
        ],
        "line": 129
      },
      {
        "type": "direct",
        "names": [
          "validateEnvironment"
        ],
        "line": 156
      }
    ],
    "src/lib/config/index.ts": [],
    "src/lib/constants/chart-sizes.ts": [
      {
        "type": "direct",
        "names": [
          "CHART_SIZES"
        ],
        "line": 8
      }
    ],
    "src/lib/constants/form-options.ts": [
      {
        "type": "direct",
        "names": [
          "CIVIL_STATUS_OPTIONS"
        ],
        "line": 6
      },
      {
        "type": "direct",
        "names": [
          "CITIZENSHIP_OPTIONS"
        ],
        "line": 18
      },
      {
        "type": "direct",
        "names": [
          "SEX_OPTIONS"
        ],
        "line": 24
      },
      {
        "type": "direct",
        "names": [
          "BLOOD_TYPE_OPTIONS"
        ],
        "line": 29
      },
      {
        "type": "direct",
        "names": [
          "EDUCATION_ATTAINMENT_OPTIONS"
        ],
        "line": 40
      },
      {
        "type": "direct",
        "names": [
          "EMPLOYMENT_STATUS_OPTIONS"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "withEmptyOption"
        ],
        "line": 65
      }
    ],
    "src/lib/constants/generated-enums.ts": [
      {
        "type": "direct",
        "names": [
          "SEX_OPTIONS"
        ],
        "line": 12
      },
      {
        "type": "direct",
        "names": [
          "CIVIL_STATUS_OPTIONS"
        ],
        "line": 18
      },
      {
        "type": "direct",
        "names": [
          "EMPLOYMENT_STATUS_OPTIONS"
        ],
        "line": 28
      },
      {
        "type": "direct",
        "names": [
          "BLOOD_TYPE_OPTIONS"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "CITIZENSHIP_OPTIONS"
        ],
        "line": 54
      },
      {
        "type": "direct",
        "names": [
          "RELIGION_OPTIONS"
        ],
        "line": 61
      },
      {
        "type": "direct",
        "names": [
          "ETHNICITY_OPTIONS"
        ],
        "line": 76
      },
      {
        "type": "direct",
        "names": [
          "EDUCATION_LEVEL_OPTIONS"
        ],
        "line": 119
      },
      {
        "type": "direct",
        "names": [
          "INCOME_CLASS_OPTIONS"
        ],
        "line": 128
      },
      {
        "type": "direct",
        "names": [
          "extractValues"
        ],
        "line": 151
      },
      {
        "type": "direct",
        "names": [
          "getLabelByValue"
        ],
        "line": 155
      },
      {
        "type": "direct",
        "names": [
          "isValidEnumValue"
        ],
        "line": 159
      }
    ],
    "src/lib/constants/index.ts": [],
    "src/lib/constants/resident-enums.ts": [
      {
        "type": "direct",
        "names": [
          "SEX_OPTIONS"
        ],
        "line": 19
      },
      {
        "type": "direct",
        "names": [
          "CIVIL_STATUS_OPTIONS"
        ],
        "line": 20
      },
      {
        "type": "direct",
        "names": [
          "CITIZENSHIP_OPTIONS"
        ],
        "line": 21
      },
      {
        "type": "direct",
        "names": [
          "EDUCATION_LEVEL_OPTIONS"
        ],
        "line": 22
      },
      {
        "type": "direct",
        "names": [
          "EMPLOYMENT_STATUS_OPTIONS"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "BLOOD_TYPE_OPTIONS"
        ],
        "line": 24
      },
      {
        "type": "direct",
        "names": [
          "RELIGION_OPTIONS"
        ],
        "line": 25
      },
      {
        "type": "direct",
        "names": [
          "ETHNICITY_OPTIONS"
        ],
        "line": 26
      },
      {
        "type": "direct",
        "names": [
          "GRADUATE_STATUS_OPTIONS"
        ],
        "line": 29
      },
      {
        "type": "direct",
        "names": [
          "EDUCATION_STATUS_OPTIONS"
        ],
        "line": 35
      },
      {
        "type": "direct",
        "names": [
          "extractValues"
        ],
        "line": 43
      },
      {
        "type": "direct",
        "names": [
          "extractAllValues"
        ],
        "line": 47
      },
      {
        "type": "direct",
        "names": [
          "getLabelByValue"
        ],
        "line": 51
      },
      {
        "type": "direct",
        "names": [
          "BLOOD_TYPE_OPTIONS_WITH_DEFAULT"
        ],
        "line": 55
      },
      {
        "type": "direct",
        "names": [
          "RELIGION_OPTIONS_WITH_DEFAULT"
        ],
        "line": 56
      },
      {
        "type": "direct",
        "names": [
          "ETHNICITY_OPTIONS_WITH_DEFAULT"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "CIVIL_STATUS_OPTIONS_WITH_DEFAULT"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "CITIZENSHIP_OPTIONS_WITH_DEFAULT"
        ],
        "line": 59
      },
      {
        "type": "direct",
        "names": [
          "SEX_OPTIONS_WITH_DEFAULT"
        ],
        "line": 62
      },
      {
        "type": "direct",
        "names": [
          "EDUCATION_LEVEL_OPTIONS_WITH_EMPTY"
        ],
        "line": 64
      },
      {
        "type": "direct",
        "names": [
          "EMPLOYMENT_STATUS_OPTIONS_WITH_EMPTY"
        ],
        "line": 69
      },
      {
        "type": "direct",
        "names": [
          "BLOOD_TYPE_OPTIONS_WITH_EMPTY"
        ],
        "line": 75
      },
      {
        "type": "direct",
        "names": [
          "RELIGION_OPTIONS_WITH_EMPTY"
        ],
        "line": 76
      },
      {
        "type": "direct",
        "names": [
          "ETHNICITY_OPTIONS_WITH_EMPTY"
        ],
        "line": 77
      },
      {
        "type": "direct",
        "names": [
          "CIVIL_STATUS_OPTIONS_WITH_EMPTY"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "CITIZENSHIP_OPTIONS_WITH_EMPTY"
        ],
        "line": 79
      },
      {
        "type": "direct",
        "names": [
          "SEX_OPTIONS_WITH_EMPTY"
        ],
        "line": 80
      }
    ],
    "src/lib/constants/resident-form-defaults.ts": [
      {
        "type": "direct",
        "names": [
          "DEFAULT_FORM_VALUES"
        ],
        "line": 3
      },
      {
        "type": "direct",
        "names": [
          "CRITICAL_VALIDATION_FIELDS"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "VALIDATION_DEBOUNCE_MS"
        ],
        "line": 52
      }
    ],
    "src/lib/core/index.ts": [
      {
        "type": "named",
        "names": [
          "capitalize",
          "toTitleCase",
          "truncateText",
          "truncate",
          "sanitizeString",
          "formatPhoneNumber",
          ""
        ],
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "isEmpty",
          "deepClone",
          "groupBy",
          "removeDuplicates",
          "sortBy",
          "formatCurrency",
          "formatDate",
          "parseQueryString",
          "buildQueryString",
          ""
        ],
        "line": 17
      },
      {
        "type": "named",
        "names": [
          "generateId",
          "generateFieldId",
          "getFieldId",
          "getFieldIds",
          "buildAriaDescribedBy",
          "buildAriaLabelledBy",
          ""
        ],
        "line": 30
      },
      {
        "type": "named",
        "names": [
          "debounce",
          "throttle",
          "sleep",
          "retry",
          ""
        ],
        "line": 40
      },
      {
        "type": "named",
        "names": [
          "cn",
          "// mergeClassNames - REMOVED: Use `cn` instead"
        ],
        "line": 48
      },
      {
        "type": "named",
        "names": [
          "calculateAge",
          "isOutOfSchoolChildren",
          "isOutOfSchoolYouth",
          "isSeniorCitizen",
          "isEmployed",
          "isUnemployed",
          "isIndigenousPeople",
          "EMPLOYED_STATUSES",
          "UNEMPLOYED_STATUSES",
          "INDIGENOUS_ETHNICITIES",
          ""
        ],
        "line": 54
      }
    ],
    "src/lib/data/database-utils.ts": [],
    "src/lib/data/field-utils.ts": [
      {
        "type": "direct",
        "names": [
          "AUTH_USER_PROFILES_FIELDS"
        ],
        "line": 11
      },
      {
        "type": "direct",
        "names": [
          "AUTH_ROLES_FIELDS"
        ],
        "line": 32
      },
      {
        "type": "direct",
        "names": [
          "RESIDENTS_FIELDS"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "HOUSEHOLDS_FIELDS"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "PSGC_REGIONS_FIELDS"
        ],
        "line": 105
      },
      {
        "type": "direct",
        "names": [
          "PSGC_PROVINCES_FIELDS"
        ],
        "line": 113
      },
      {
        "type": "direct",
        "names": [
          "PSGC_CITIES_MUNICIPALITIES_FIELDS"
        ],
        "line": 122
      },
      {
        "type": "direct",
        "names": [
          "PSGC_BARANGAYS_FIELDS"
        ],
        "line": 132
      },
      {
        "type": "direct",
        "names": [
          "buildSelectQuery"
        ],
        "line": 149
      },
      {
        "type": "direct",
        "names": [
          "mapToDbFields"
        ],
        "line": 160
      },
      {
        "type": "direct",
        "names": [
          "DB_FIELDS"
        ],
        "line": 174
      }
    ],
    "src/lib/data/index.ts": [
      {
        "type": "named",
        "names": [
          "BaseRepository",
          "type QueryOptions",
          "type RepositoryError",
          "type RepositoryResult"
        ],
        "line": 24
      }
    ],
    "src/lib/data/offline-storage.ts": [
      {
        "type": "direct",
        "names": [
          "OfflineStorage"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "offlineStorage"
        ],
        "line": 479
      }
    ],
    "src/lib/data/query-cache.ts": [
      {
        "type": "direct",
        "names": [
          "queryCache"
        ],
        "line": 186
      },
      {
        "type": "direct",
        "names": [
          "cached"
        ],
        "line": 191
      },
      {
        "type": "direct",
        "names": [
          "CacheKeys"
        ],
        "line": 233
      },
      {
        "type": "direct",
        "names": [
          "CacheTags"
        ],
        "line": 249
      },
      {
        "type": "direct",
        "names": [
          "CacheWarming"
        ],
        "line": 261
      },
      {
        "type": "direct",
        "names": [
          "setupCacheCleanup"
        ],
        "line": 293
      },
      {
        "type": "direct",
        "names": [
          "logCacheStats"
        ],
        "line": 307
      }
    ],
    "src/lib/data/query-utils.ts": [
      {
        "type": "direct",
        "names": [
          "getBarangayQuickStats"
        ],
        "line": 21
      },
      {
        "type": "direct",
        "names": [
          "refreshBarangayStats"
        ],
        "line": 47
      },
      {
        "type": "direct",
        "names": [
          "shouldRefreshStats"
        ],
        "line": 76
      },
      {
        "type": "direct",
        "names": [
          "getBarangayStatsOptimized"
        ],
        "line": 123
      },
      {
        "type": "direct",
        "names": [
          "getDatabasePerformanceStats"
        ],
        "line": 166
      },
      {
        "type": "direct",
        "names": [
          "performBatchOperation"
        ],
        "line": 187
      },
      {
        "type": "direct",
        "names": [
          "isDataFresh"
        ],
        "line": 206
      }
    ],
    "src/lib/data/recent-items-storage.ts": [
      {
        "type": "direct",
        "names": [
          "getStoredRecentItems"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "addRecentItem"
        ],
        "line": 47
      },
      {
        "type": "direct",
        "names": [
          "trackSearch"
        ],
        "line": 106
      },
      {
        "type": "direct",
        "names": [
          "trackNavigation"
        ],
        "line": 121
      },
      {
        "type": "direct",
        "names": [
          "trackAction"
        ],
        "line": 134
      },
      {
        "type": "direct",
        "names": [
          "clearRecentItems"
        ],
        "line": 146
      }
    ],
    "src/lib/data/supabase.ts": [
      {
        "type": "direct",
        "names": [
          "isSupabaseAvailable"
        ],
        "line": 20
      },
      {
        "type": "direct",
        "names": [
          "supabase"
        ],
        "line": 38
      },
      {
        "type": "direct",
        "names": [
          "refreshSchema"
        ],
        "line": 41
      }
    ],
    "src/lib/data/sync-queue.ts": [
      {
        "type": "direct",
        "names": [
          "SyncQueue"
        ],
        "line": 16
      },
      {
        "type": "direct",
        "names": [
          "syncQueue"
        ],
        "line": 301
      }
    ],
    "src/lib/database/index.ts": [],
    "src/lib/error-handling/ErrorBoundaries.tsx": [
      {
        "type": "direct",
        "names": [
          "createErrorBoundaryState"
        ],
        "line": 19
      },
      {
        "type": "direct",
        "names": [
          "handleErrorBoundaryError"
        ],
        "line": 31
      },
      {
        "type": "direct",
        "names": [
          "shouldRetryError"
        ],
        "line": 49
      },
      {
        "type": "direct",
        "names": [
          "createDefaultErrorFallback"
        ],
        "line": 60
      },
      {
        "type": "direct",
        "names": [
          "createFieldErrorFallback"
        ],
        "line": 124
      },
      {
        "type": "direct",
        "names": [
          "createErrorBoundaryComponent"
        ],
        "line": 172
      },
      {
        "type": "direct",
        "names": [
          "withErrorBoundary"
        ],
        "line": 232
      },
      {
        "type": "direct",
        "names": [
          "errorBoundaryUtils"
        ],
        "line": 259
      }
    ],
    "src/lib/error-handling/error-types.ts": [],
    "src/lib/error-handling/error-utils.ts": [
      {
        "type": "direct",
        "names": [
          "createAppError"
        ],
        "line": 22
      },
      {
        "type": "direct",
        "names": [
          "isAppError"
        ],
        "line": 49
      },
      {
        "type": "direct",
        "names": [
          "isNetworkError"
        ],
        "line": 56
      },
      {
        "type": "direct",
        "names": [
          "isValidationError"
        ],
        "line": 67
      },
      {
        "type": "direct",
        "names": [
          "getErrorMessage"
        ],
        "line": 75
      },
      {
        "type": "direct",
        "names": [
          "getErrorSeverity"
        ],
        "line": 94
      },
      {
        "type": "direct",
        "names": [
          "classifyError"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "createErrorLogContext"
        ],
        "line": 152
      },
      {
        "type": "direct",
        "names": [
          "logError"
        ],
        "line": 167
      },
      {
        "type": "direct",
        "names": [
          "sanitizeError"
        ],
        "line": 201
      },
      {
        "type": "direct",
        "names": [
          "createValidationError"
        ],
        "line": 239
      },
      {
        "type": "direct",
        "names": [
          "createNetworkError"
        ],
        "line": 259
      },
      {
        "type": "direct",
        "names": [
          "errorUtils"
        ],
        "line": 281
      }
    ],
    "src/lib/error-handling/index.ts": [
      {
        "type": "named",
        "names": [
          "createAppError",
          "isAppError",
          "isNetworkError",
          "isValidationError",
          "getErrorMessage",
          "getErrorSeverity",
          "classifyError",
          "logError",
          "sanitizeError",
          "createValidationError",
          "createNetworkError",
          "errorUtils",
          ""
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "createErrorBoundaryState",
          "handleErrorBoundaryError",
          "shouldRetryError",
          "createDefaultErrorFallback",
          "createFieldErrorFallback",
          "createErrorBoundaryComponent",
          "withErrorBoundary",
          "errorBoundaryUtils",
          ""
        ],
        "line": 24
      },
      {
        "type": "named",
        "names": [
          "ErrorSeverity",
          "ErrorCode"
        ],
        "line": 48
      }
    ],
    "src/lib/forms/field-logic.ts": [
      {
        "type": "direct",
        "names": [
          "isFieldReadOnly"
        ],
        "line": 13
      },
      {
        "type": "direct",
        "names": [
          "formatDateForDisplay"
        ],
        "line": 24
      },
      {
        "type": "direct",
        "names": [
          "formatBooleanForDisplay"
        ],
        "line": 41
      },
      {
        "type": "direct",
        "names": [
          "getSelectDisplayValue"
        ],
        "line": 48
      },
      {
        "type": "direct",
        "names": [
          "fieldLogic"
        ],
        "line": 61
      },
      {
        "type": "direct",
        "names": [
          "fieldState"
        ],
        "line": 122
      }
    ],
    "src/lib/forms/field-renderers.tsx": [
      {
        "type": "named",
        "names": [
          "isFieldReadOnly",
          "formatDateForDisplay",
          "formatBooleanForDisplay",
          "getSelectDisplayValue"
        ],
        "line": 14
      },
      {
        "type": "direct",
        "names": [
          "renderInputField"
        ],
        "line": 24
      },
      {
        "type": "direct",
        "names": [
          "renderSelectField"
        ],
        "line": 100
      },
      {
        "type": "direct",
        "names": [
          "renderCheckboxField"
        ],
        "line": 169
      },
      {
        "type": "direct",
        "names": [
          "renderToggleField"
        ],
        "line": 224
      },
      {
        "type": "direct",
        "names": [
          "renderDateField"
        ],
        "line": 289
      },
      {
        "type": "direct",
        "names": [
          "renderNumberField"
        ],
        "line": 355
      }
    ],
    "src/lib/forms/form-handlers.ts": [
      {
        "type": "direct",
        "names": [
          "createFieldChangeHandler"
        ],
        "line": 15
      },
      {
        "type": "direct",
        "names": [
          "createSelectChangeHandler"
        ],
        "line": 31
      },
      {
        "type": "direct",
        "names": [
          "createBooleanChangeHandler"
        ],
        "line": 47
      },
      {
        "type": "direct",
        "names": [
          "createFormSubmitHandler"
        ],
        "line": 63
      },
      {
        "type": "direct",
        "names": [
          "fieldValidators"
        ],
        "line": 94
      },
      {
        "type": "direct",
        "names": [
          "buildErrorsFromValidation"
        ],
        "line": 136
      }
    ],
    "src/lib/forms/index.ts": [
      {
        "type": "named",
        "names": [
          "createFieldChangeHandler",
          "createSelectChangeHandler",
          "createBooleanChangeHandler",
          "createFormSubmitHandler",
          "fieldValidators",
          "buildErrorsFromValidation",
          ""
        ],
        "line": 12
      },
      {
        "type": "named",
        "names": [
          "isFieldReadOnly",
          "formatDateForDisplay",
          "formatBooleanForDisplay",
          "getSelectDisplayValue",
          "fieldLogic",
          "fieldState",
          ""
        ],
        "line": 22
      }
    ],
    "src/lib/index.ts": [
      {
        "type": "named",
        "names": [
          "// Storage utilities\n  syncQueue",
          "offlineStorage",
          "// Recent items storage  \n  getStoredRecentItems",
          "addRecentItem",
          "// Repository pattern\n  BaseRepository",
          "// Types for compatibility\n  type QueryOptions",
          "type RepositoryError",
          "type RepositoryResult",
          ""
        ],
        "line": 23
      },
      {
        "type": "named",
        "names": [
          "logger",
          "dbLogger",
          "apiLogger",
          "authLogger",
          "logError",
          "logSecureError",
          ""
        ],
        "line": 52
      }
    ],
    "src/lib/logging/client-logger.ts": [
      {
        "type": "direct",
        "names": [
          "clientLogger"
        ],
        "line": 168
      },
      {
        "type": "direct",
        "names": [
          "logDebug"
        ],
        "line": 177
      },
      {
        "type": "direct",
        "names": [
          "logInfo"
        ],
        "line": 185
      },
      {
        "type": "direct",
        "names": [
          "logWarn"
        ],
        "line": 193
      },
      {
        "type": "direct",
        "names": [
          "logError"
        ],
        "line": 201
      },
      {
        "type": "direct",
        "names": [
          "logComponent"
        ],
        "line": 221
      },
      {
        "type": "direct",
        "names": [
          "logApi"
        ],
        "line": 229
      },
      {
        "type": "direct",
        "names": [
          "logUserAction"
        ],
        "line": 237
      },
      {
        "type": "direct",
        "names": [
          "logSearch"
        ],
        "line": 245
      },
      {
        "type": "direct",
        "names": [
          "logDataLoad"
        ],
        "line": 253
      },
      {
        "type": "default",
        "names": [
          "clientLogger"
        ],
        "line": 257
      }
    ],
    "src/lib/logging/index.ts": [
      {
        "type": "named",
        "names": [
          "logError as logSecureError",
          "createLogger as createSecureLogger",
          "logger",
          "dbLogger",
          "apiLogger",
          "authLogger",
          ""
        ],
        "line": 10
      }
    ],
    "src/lib/logging/secure-logger.ts": [
      {
        "type": "direct",
        "names": [
          "logger"
        ],
        "line": 203
      },
      {
        "type": "direct",
        "names": [
          "authLogger"
        ],
        "line": 204
      },
      {
        "type": "direct",
        "names": [
          "dbLogger"
        ],
        "line": 205
      },
      {
        "type": "direct",
        "names": [
          "apiLogger"
        ],
        "line": 206
      },
      {
        "type": "direct",
        "names": [
          "createLogger"
        ],
        "line": 209
      },
      {
        "type": "direct",
        "names": [
          "logError"
        ],
        "line": 214
      },
      {
        "type": "direct",
        "names": [
          "logApiRequest"
        ],
        "line": 223
      },
      {
        "type": "direct",
        "names": [
          "logSecurityEvent"
        ],
        "line": 232
      },
      {
        "type": "direct",
        "names": [
          "debugLog"
        ],
        "line": 247
      },
      {
        "type": "direct",
        "names": [
          "safeLog"
        ],
        "line": 254
      }
    ],
    "src/lib/performance/index.ts": [
      {
        "type": "named",
        "names": [
          "performanceMonitor",
          "usePerformanceTracking",
          "markUserInteraction"
        ],
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "timed",
          "reportPerformanceMetrics",
          "measurePropsSize",
          "usePerformanceTracking as usePerformanceTrackingUtils"
        ],
        "line": 20
      }
    ],
    "src/lib/performance/optimizationUtils.ts": [
      {
        "type": "direct",
        "names": [
          "useDebounce"
        ],
        "line": 14
      },
      {
        "type": "direct",
        "names": [
          "useSearchFilter"
        ],
        "line": 40
      },
      {
        "type": "direct",
        "names": [
          "usePagination"
        ],
        "line": 61
      },
      {
        "type": "direct",
        "names": [
          "useVirtualScroll"
        ],
        "line": 107
      },
      {
        "type": "direct",
        "names": [
          "usePerformanceMonitor"
        ],
        "line": 147
      },
      {
        "type": "direct",
        "names": [
          "useSortedData"
        ],
        "line": 178
      },
      {
        "type": "direct",
        "names": [
          "useOptimizedFetch"
        ],
        "line": 221
      },
      {
        "type": "direct",
        "names": [
          "useIntersectionObserver"
        ],
        "line": 269
      }
    ],
    "src/lib/performance/performanceMonitor.ts": [
      {
        "type": "direct",
        "names": [
          "PERFORMANCE_THRESHOLDS"
        ],
        "line": 19
      },
      {
        "type": "direct",
        "names": [
          "performanceMonitor"
        ],
        "line": 388
      },
      {
        "type": "direct",
        "names": [
          "usePerformanceTracking"
        ],
        "line": 393
      },
      {
        "type": "direct",
        "names": [
          "markUserInteraction"
        ],
        "line": 408
      }
    ],
    "src/lib/performance/performanceUtils.ts": [
      {
        "type": "direct",
        "names": [
          "performanceMonitor"
        ],
        "line": 324
      },
      {
        "type": "direct",
        "names": [
          "timed"
        ],
        "line": 327
      },
      {
        "type": "direct",
        "names": [
          "usePerformanceTracking"
        ],
        "line": 355
      },
      {
        "type": "direct",
        "names": [
          "measurePropsSize"
        ],
        "line": 367
      }
    ],
    "src/lib/performance/pwaPerformanceUtils.ts": [
      {
        "type": "direct",
        "names": [
          "pwaPerformance"
        ],
        "line": 413
      },
      {
        "type": "direct",
        "names": [
          "trackPWAEvents"
        ],
        "line": 424
      }
    ],
    "src/lib/search/index.ts": [],
    "src/lib/search/public-search.ts": [
      {
        "type": "direct",
        "names": [
          "searchBarangaysPublic"
        ],
        "line": 15
      },
      {
        "type": "direct",
        "names": [
          "getRegionsPublic"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "getProvincesByRegionPublic"
        ],
        "line": 93
      },
      {
        "type": "direct",
        "names": [
          "getCitiesByProvincePublic"
        ],
        "line": 112
      },
      {
        "type": "direct",
        "names": [
          "getBarangaysByCityPublic"
        ],
        "line": 131
      },
      {
        "type": "direct",
        "names": [
          "searchOccupationsPublic"
        ],
        "line": 150
      }
    ],
    "src/lib/security/audit-storage.ts": [],
    "src/lib/security/crypto.ts": [
      {
        "type": "direct",
        "names": [
          "extractPhilSysLast4"
        ],
        "line": 63
      },
      {
        "type": "direct",
        "names": [
          "maskPhilSysNumber"
        ],
        "line": 83
      },
      {
        "type": "direct",
        "names": [
          "validatePhilSysFormat"
        ],
        "line": 97
      },
      {
        "type": "direct",
        "names": [
          "generateSecureToken"
        ],
        "line": 179
      },
      {
        "type": "direct",
        "names": [
          "secureCompare"
        ],
        "line": 187
      }
    ],
    "src/lib/security/file-security.ts": [
      {
        "type": "direct",
        "names": [
          "sanitizeFileName"
        ],
        "line": 204
      },
      {
        "type": "direct",
        "names": [
          "generateUniqueFileName"
        ],
        "line": 215
      }
    ],
    "src/lib/security/index.ts": [
      {
        "type": "named",
        "names": [
          "storeSecurityAuditLog",
          "storeThreatDetectionEvent",
          "querySecurityAuditLogs",
          "getSecurityStatistics",
          ""
        ],
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "recordSecurityEvent",
          "getThreatLevel",
          "shouldBlockIp",
          "getSecurityInsights",
          ""
        ],
        "line": 20
      }
    ],
    "src/lib/security/rate-limit.ts": [
      {
        "type": "direct",
        "names": [
          "RATE_LIMIT_RULES"
        ],
        "line": 107
      },
      {
        "type": "direct",
        "names": [
          "checkRateLimit"
        ],
        "line": 173
      },
      {
        "type": "direct",
        "names": [
          "recordSuccessfulRequest"
        ],
        "line": 251
      },
      {
        "type": "direct",
        "names": [
          "recordFailedRequest"
        ],
        "line": 296
      },
      {
        "type": "direct",
        "names": [
          "getClientIdentifier"
        ],
        "line": 354
      },
      {
        "type": "direct",
        "names": [
          "rateLimitMiddleware"
        ],
        "line": 411
      },
      {
        "type": "direct",
        "names": [
          "createRateLimitHandler"
        ],
        "line": 509
      },
      {
        "type": "direct",
        "names": [
          "resetRateLimit"
        ],
        "line": 585
      },
      {
        "type": "direct",
        "names": [
          "getRateLimitStatus"
        ],
        "line": 639
      }
    ],
    "src/lib/security/threat-detection.ts": [
      {
        "type": "direct",
        "names": [
          "getThreatLevel"
        ],
        "line": 323
      },
      {
        "type": "direct",
        "names": [
          "shouldBlockIp"
        ],
        "line": 347
      },
      {
        "type": "direct",
        "names": [
          "getSecurityInsights"
        ],
        "line": 355
      }
    ],
    "src/lib/storage/index.ts": [],
    "src/lib/supabase/index.ts": [],
    "src/lib/supabase/supabase.ts": [],
    "src/lib/types/database.ts": [],
    "src/lib/types/forms.ts": [],
    "src/lib/types/index.ts": [
      {
        "type": "named",
        "names": [
          "ResidentTypes"
        ],
        "line": 31
      }
    ],
    "src/lib/types/resident-detail.ts": [],
    "src/lib/types/resident-listing.ts": [],
    "src/lib/types/resident.ts": [],
    "src/lib/ui/accessibility.ts": [
      {
        "type": "direct",
        "names": [
          "useFocusTrap"
        ],
        "line": 14
      },
      {
        "type": "direct",
        "names": [
          "useArrowKeyNavigation"
        ],
        "line": 89
      },
      {
        "type": "direct",
        "names": [
          "announceToScreenReader"
        ],
        "line": 155
      },
      {
        "type": "direct",
        "names": [
          "useUniqueId"
        ],
        "line": 177
      },
      {
        "type": "direct",
        "names": [
          "prefersReducedMotion"
        ],
        "line": 190
      },
      {
        "type": "direct",
        "names": [
          "getTransitionDuration"
        ],
        "line": 200
      },
      {
        "type": "direct",
        "names": [
          "aria"
        ],
        "line": 210
      },
      {
        "type": "direct",
        "names": [
          "semantic"
        ],
        "line": 257
      },
      {
        "type": "direct",
        "names": [
          "keyboard"
        ],
        "line": 275
      },
      {
        "type": "direct",
        "names": [
          "visuallyHidden"
        ],
        "line": 309
      }
    ],
    "src/lib/ui/chart-transformers.ts": [
      {
        "type": "direct",
        "names": [
          "DEFAULT_CHART_TITLES"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "CHART_COLORS"
        ],
        "line": 60
      },
      {
        "type": "direct",
        "names": [
          "transformDependencyData"
        ],
        "line": 73
      },
      {
        "type": "direct",
        "names": [
          "transformSexData"
        ],
        "line": 102
      },
      {
        "type": "direct",
        "names": [
          "transformCivilStatusData"
        ],
        "line": 125
      },
      {
        "type": "direct",
        "names": [
          "transformEmploymentData"
        ],
        "line": 184
      },
      {
        "type": "direct",
        "names": [
          "transformChartData"
        ],
        "line": 243
      },
      {
        "type": "direct",
        "names": [
          "getChartTitle"
        ],
        "line": 264
      },
      {
        "type": "direct",
        "names": [
          "chartUtils"
        ],
        "line": 271
      }
    ],
    "src/lib/ui/colorGenerator.ts": [
      {
        "type": "direct",
        "names": [
          "SEMANTIC_CHART_PALETTE"
        ],
        "line": 12
      },
      {
        "type": "direct",
        "names": [
          "generateColorVariations"
        ],
        "line": 35
      },
      {
        "type": "direct",
        "names": [
          "isValidColor"
        ],
        "line": 44
      },
      {
        "type": "direct",
        "names": [
          "applyColorsToData"
        ],
        "line": 51
      },
      {
        "type": "direct",
        "names": [
          "colorUtils"
        ],
        "line": 73
      }
    ],
    "src/lib/ui/index.ts": [
      {
        "type": "named",
        "names": [
          "createLazyComponent",
          "preloadLazyComponent",
          "LazyLoadingPresets",
          "useLazyLoadOnIntersection",
          ""
        ],
        "line": 11
      },
      {
        "type": "named",
        "names": [
          "withLazyLoading",
          "preloadComponents",
          ""
        ],
        "line": 19
      },
      {
        "type": "named",
        "names": [
          "filterEmptyAgeGroups",
          "hasPopulationData",
          "calculatePopulationStats",
          "calculateMaxPercentage",
          "generateTooltipData",
          "populationPyramidStats",
          ""
        ],
        "line": 32
      }
    ],
    "src/lib/ui/lazy-components-alt.tsx": [
      {
        "type": "direct",
        "names": [
          "createLazyComponent"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "preloadLazyComponent"
        ],
        "line": 90
      },
      {
        "type": "direct",
        "names": [
          "withLazyLoading"
        ],
        "line": 107
      },
      {
        "type": "direct",
        "names": [
          "LazyLoadingPresets"
        ],
        "line": 123
      },
      {
        "type": "direct",
        "names": [
          "useLazyLoadOnIntersection"
        ],
        "line": 170
      }
    ],
    "src/lib/ui/lazy-components.tsx": [
      {
        "type": "direct",
        "names": [
          "createLazyComponent"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "preloadLazyComponent"
        ],
        "line": 90
      },
      {
        "type": "direct",
        "names": [
          "withLazyLoading"
        ],
        "line": 107
      },
      {
        "type": "direct",
        "names": [
          "LazyLoadingPresets"
        ],
        "line": 123
      },
      {
        "type": "direct",
        "names": [
          "useLazyLoadOnIntersection"
        ],
        "line": 170
      }
    ],
    "src/lib/ui/lazy-loading.tsx": [
      {
        "type": "direct",
        "names": [
          "withLazyLoading"
        ],
        "line": 24
      },
      {
        "type": "direct",
        "names": [
          "preloadComponents"
        ],
        "line": 41
      }
    ],
    "src/lib/ui/pieChartMath.ts": [
      {
        "type": "direct",
        "names": [
          "createPieSlicePath"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "calculatePieSliceAngles"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "calculatePieChartTotal"
        ],
        "line": 64
      },
      {
        "type": "direct",
        "names": [
          "filterNonEmptySlices"
        ],
        "line": 71
      },
      {
        "type": "direct",
        "names": [
          "isSingleSlice"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "getSingleSlice"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "pieChartMath"
        ],
        "line": 93
      }
    ],
    "src/lib/ui/population-pyramid.ts": [
      {
        "type": "direct",
        "names": [
          "filterEmptyAgeGroups"
        ],
        "line": 39
      },
      {
        "type": "direct",
        "names": [
          "hasPopulationData"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "calculatePopulationStats"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "calculateMaxPercentage"
        ],
        "line": 72
      },
      {
        "type": "direct",
        "names": [
          "generateTooltipData"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "populationPyramidStats"
        ],
        "line": 120
      }
    ],
    "src/lib/ui/typography.ts": [
      {
        "type": "direct",
        "names": [
          "fontStacks"
        ],
        "line": 7
      },
      {
        "type": "direct",
        "names": [
          "typography"
        ],
        "line": 17
      },
      {
        "type": "direct",
        "names": [
          "typographyPresets"
        ],
        "line": 59
      },
      {
        "type": "default",
        "names": [
          "typography"
        ],
        "line": 69
      }
    ],
    "src/lib/utilities/address-lookup.ts": [
      {
        "type": "direct",
        "names": [
          "lookupHouseholdTypeLabels"
        ],
        "line": 104
      }
    ],
    "src/lib/utilities/async-utils.ts": [
      {
        "type": "direct",
        "names": [
          "debounce"
        ],
        "line": 41
      },
      {
        "type": "direct",
        "names": [
          "throttle"
        ],
        "line": 66
      },
      {
        "type": "direct",
        "names": [
          "sleep"
        ],
        "line": 84
      }
    ],
    "src/lib/utilities/css-utils.ts": [
      {
        "type": "direct",
        "names": [
          "cn"
        ],
        "line": 33
      }
    ],
    "src/lib/utilities/data-transformers.ts": [
      {
        "type": "direct",
        "names": [
          "isEmpty"
        ],
        "line": 30
      },
      {
        "type": "direct",
        "names": [
          "deepClone"
        ],
        "line": 64
      },
      {
        "type": "direct",
        "names": [
          "groupBy"
        ],
        "line": 108
      },
      {
        "type": "direct",
        "names": [
          "removeDuplicates"
        ],
        "line": 154
      },
      {
        "type": "direct",
        "names": [
          "sortBy"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "formatCurrency"
        ],
        "line": 190
      },
      {
        "type": "direct",
        "names": [
          "formatDate"
        ],
        "line": 202
      },
      {
        "type": "direct",
        "names": [
          "parseQueryString"
        ],
        "line": 222
      },
      {
        "type": "direct",
        "names": [
          "buildQueryString"
        ],
        "line": 236
      }
    ],
    "src/lib/utilities/file-utils.ts": [
      {
        "type": "direct",
        "names": [
          "formatFileSize"
        ],
        "line": 51
      },
      {
        "type": "direct",
        "names": [
          "getFileExtension"
        ],
        "line": 87
      },
      {
        "type": "direct",
        "names": [
          "isImageFile"
        ],
        "line": 121
      },
      {
        "type": "direct",
        "names": [
          "exceedsMaxSize"
        ],
        "line": 148
      }
    ],
    "src/lib/utilities/id-generators.ts": [
      {
        "type": "named",
        "names": [
          "generateFieldId"
        ],
        "line": 66
      },
      {
        "type": "direct",
        "names": [
          "generateId"
        ],
        "line": 9
      },
      {
        "type": "direct",
        "names": [
          "getFieldId"
        ],
        "line": 26
      },
      {
        "type": "direct",
        "names": [
          "getFieldIds"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "buildAriaDescribedBy"
        ],
        "line": 48
      },
      {
        "type": "direct",
        "names": [
          "buildAriaLabelledBy"
        ],
        "line": 61
      }
    ],
    "src/lib/utilities/index.ts": [
      {
        "type": "named",
        "names": [
          "capitalize",
          "toTitleCase",
          "truncateText",
          "sanitizeString",
          "formatPhoneNumber",
          ""
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "isValidEmail",
          "isValidPhilippineMobile",
          ""
        ],
        "line": 18
      },
      {
        "type": "named",
        "names": [
          "isEmpty",
          "deepClone",
          "groupBy",
          "removeDuplicates",
          "sortBy",
          "formatCurrency",
          "formatDate",
          "parseQueryString",
          "buildQueryString",
          ""
        ],
        "line": 24
      },
      {
        "type": "named",
        "names": [
          "generateId",
          "generateFieldId",
          "getFieldId",
          "getFieldIds",
          "buildAriaDescribedBy",
          "buildAriaLabelledBy",
          ""
        ],
        "line": 37
      },
      {
        "type": "named",
        "names": [
          "debounce",
          "throttle",
          "sleep",
          "retry",
          ""
        ],
        "line": 47
      },
      {
        "type": "named",
        "names": [
          "cn",
          "// mergeClassNames - REMOVED: Use `cn` instead"
        ],
        "line": 55
      },
      {
        "type": "named",
        "names": [
          "formatFileSize",
          "getFileExtension",
          "isImageFile",
          "exceedsMaxSize",
          ""
        ],
        "line": 69
      }
    ],
    "src/lib/utilities/search-utilities.ts": [
      {
        "type": "direct",
        "names": [
          "createSearchState"
        ],
        "line": 76
      },
      {
        "type": "direct",
        "names": [
          "createPaginatedSearchState"
        ],
        "line": 88
      },
      {
        "type": "direct",
        "names": [
          "createSearchErrorHandler"
        ],
        "line": 106
      },
      {
        "type": "direct",
        "names": [
          "createSearchExecutor"
        ],
        "line": 119
      },
      {
        "type": "direct",
        "names": [
          "createPaginatedSearchExecutor"
        ],
        "line": 168
      },
      {
        "type": "direct",
        "names": [
          "createSearchUtilities"
        ],
        "line": 240
      },
      {
        "type": "direct",
        "names": [
          "createPaginatedSearchUtilities"
        ],
        "line": 268
      },
      {
        "type": "direct",
        "names": [
          "useSearchResultsFilter"
        ],
        "line": 304
      },
      {
        "type": "direct",
        "names": [
          "highlightSearchText"
        ],
        "line": 318
      },
      {
        "type": "direct",
        "names": [
          "searchFormatters"
        ],
        "line": 328
      },
      {
        "type": "direct",
        "names": [
          "useSearchCache"
        ],
        "line": 372
      }
    ],
    "src/lib/utilities/string-utils.ts": [
      {
        "type": "direct",
        "names": [
          "capitalize"
        ],
        "line": 9
      },
      {
        "type": "direct",
        "names": [
          "toTitleCase"
        ],
        "line": 17
      },
      {
        "type": "direct",
        "names": [
          "truncateText"
        ],
        "line": 28
      },
      {
        "type": "direct",
        "names": [
          "truncate"
        ],
        "line": 36
      },
      {
        "type": "direct",
        "names": [
          "sanitizeString"
        ],
        "line": 43
      },
      {
        "type": "direct",
        "names": [
          "formatPhoneNumber"
        ],
        "line": 59
      }
    ],
    "src/lib/validation/fieldLevelSchemas.ts": [
      {
        "type": "direct",
        "names": [
          "phoneNumberValidator"
        ],
        "line": 13
      },
      {
        "type": "direct",
        "names": [
          "philsysCardValidator"
        ],
        "line": 17
      },
      {
        "type": "direct",
        "names": [
          "birthdateValidator"
        ],
        "line": 21
      },
      {
        "type": "direct",
        "names": [
          "emailValidator"
        ],
        "line": 25
      },
      {
        "type": "direct",
        "names": [
          "nameValidator"
        ],
        "line": 30
      },
      {
        "type": "direct",
        "names": [
          "requiredNameValidator"
        ],
        "line": 35
      },
      {
        "type": "direct",
        "names": [
          "positiveNumberValidator"
        ],
        "line": 38
      },
      {
        "type": "direct",
        "names": [
          "heightValidator"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "weightValidator"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "ageValidator"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "sexValidator"
        ],
        "line": 55
      },
      {
        "type": "direct",
        "names": [
          "requiredSelectValidator"
        ],
        "line": 59
      },
      {
        "type": "direct",
        "names": [
          "validateField"
        ],
        "line": 63
      },
      {
        "type": "direct",
        "names": [
          "validateFields"
        ],
        "line": 129
      },
      {
        "type": "direct",
        "names": [
          "REQUIRED_FIELDS"
        ],
        "line": 148
      },
      {
        "type": "direct",
        "names": [
          "getRequiredFieldsForSection"
        ],
        "line": 158
      },
      {
        "type": "direct",
        "names": [
          "validateFormSection"
        ],
        "line": 163
      },
      {
        "type": "direct",
        "names": [
          "createDebouncedValidator"
        ],
        "line": 177
      }
    ],
    "src/lib/validation/fieldValidators.ts": [
      {
        "type": "direct",
        "names": [
          "validateRequired"
        ],
        "line": 28
      },
      {
        "type": "direct",
        "names": [
          "validateEmail"
        ],
        "line": 43
      },
      {
        "type": "direct",
        "names": [
          "validatePhilippineMobile"
        ],
        "line": 60
      },
      {
        "type": "direct",
        "names": [
          "validatePhilSysNumber"
        ],
        "line": 79
      },
      {
        "type": "direct",
        "names": [
          "validateName"
        ],
        "line": 96
      },
      {
        "type": "direct",
        "names": [
          "validateAge"
        ],
        "line": 118
      },
      {
        "type": "direct",
        "names": [
          "validateLength"
        ],
        "line": 141
      },
      {
        "type": "direct",
        "names": [
          "validatePattern"
        ],
        "line": 174
      },
      {
        "type": "direct",
        "names": [
          "validateRange"
        ],
        "line": 191
      },
      {
        "type": "direct",
        "names": [
          "validateDate"
        ],
        "line": 226
      },
      {
        "type": "direct",
        "names": [
          "validateUrl"
        ],
        "line": 248
      },
      {
        "type": "direct",
        "names": [
          "composeValidators"
        ],
        "line": 264
      },
      {
        "type": "direct",
        "names": [
          "conditionalValidator"
        ],
        "line": 279
      },
      {
        "type": "direct",
        "names": [
          "createAsyncValidator"
        ],
        "line": 294
      }
    ],
    "src/lib/validation/formValidators.ts": [
      {
        "type": "direct",
        "names": [
          "createFormValidator"
        ],
        "line": 34
      },
      {
        "type": "direct",
        "names": [
          "createFieldValidator"
        ],
        "line": 105
      },
      {
        "type": "direct",
        "names": [
          "buildValidationErrors"
        ],
        "line": 253
      },
      {
        "type": "direct",
        "names": [
          "crossFieldValidators"
        ],
        "line": 267
      }
    ],
    "src/lib/validation/generated-schemas.ts": [
      {
        "type": "direct",
        "names": [
          "sexSchema"
        ],
        "line": 13
      },
      {
        "type": "direct",
        "names": [
          "civil_statusSchema"
        ],
        "line": 14
      },
      {
        "type": "direct",
        "names": [
          "employment_statusSchema"
        ],
        "line": 15
      },
      {
        "type": "direct",
        "names": [
          "blood_typeSchema"
        ],
        "line": 16
      },
      {
        "type": "direct",
        "names": [
          "citizenshipSchema"
        ],
        "line": 17
      },
      {
        "type": "direct",
        "names": [
          "religionSchema"
        ],
        "line": 18
      },
      {
        "type": "direct",
        "names": [
          "ethnicitySchema"
        ],
        "line": 19
      },
      {
        "type": "direct",
        "names": [
          "education_levelSchema"
        ],
        "line": 20
      },
      {
        "type": "direct",
        "names": [
          "income_classSchema"
        ],
        "line": 21
      }
    ],
    "src/lib/validation/index.ts": [
      {
        "type": "named",
        "names": [
          "validateResidentData",
          "validateHouseholdData",
          "validateUserData",
          "residentSchema",
          "householdSchema",
          "userSchema",
          "residentSchema as ResidentFormSchema",
          ""
        ],
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "validateEmail",
          "validatePhilippineMobile",
          "validatePhilSysNumber",
          "validateName",
          "validateAge",
          "validateRequired",
          "validateLength",
          "validatePattern",
          "composeValidators",
          ""
        ],
        "line": 18
      },
      {
        "type": "named",
        "names": [
          "createFormValidator",
          "createFieldValidator",
          "validateFormData",
          "buildValidationErrors",
          ""
        ],
        "line": 31
      },
      {
        "type": "named",
        "names": [
          "sanitizeInput",
          "sanitizeHtml",
          "sanitizePhilSysNumber",
          "sanitizeName",
          "sanitizePhone",
          "sanitizeEmail",
          ""
        ],
        "line": 39
      },
      {
        "type": "named",
        "names": [
          "isValidEmail",
          "isValidPhilippineMobile",
          "isValidPhilSysFormat",
          "isValidName",
          "isValidAge",
          "formatValidationError",
          "createValidationResult",
          "createFieldValidationResult",
          "mergeValidationResults",
          "getErrorFields",
          "hasFieldError",
          "getFieldError",
          "hasWarnings",
          "validationResultToErrors",
          "filterEmptyErrors",
          "normalizeFieldName",
          "createValidationSummary",
          "debounceValidation",
          "createValidationPipeline",
          "validateWithTimeout",
          "// React hook utilities\n  useValidationState",
          "createFormValidationExecutor",
          "createFieldValidationExecutor",
          "asyncValidationUtils",
          ""
        ],
        "line": 49
      }
    ],
    "src/lib/validation/resident-schema.ts": [
      {
        "type": "direct",
        "names": [
          "ResidentFormSchema"
        ],
        "line": 77
      },
      {
        "type": "direct",
        "names": [
          "validateResidentForm"
        ],
        "line": 156
      },
      {
        "type": "direct",
        "names": [
          "ResidentUpdateSchema"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "PersonalInfoSchema"
        ],
        "line": 182
      },
      {
        "type": "direct",
        "names": [
          "ContactInfoSchema"
        ],
        "line": 194
      },
      {
        "type": "direct",
        "names": [
          "EducationEmploymentSchema"
        ],
        "line": 201
      },
      {
        "type": "direct",
        "names": [
          "SectoralInfoSchema"
        ],
        "line": 212
      },
      {
        "type": "direct",
        "names": [
          "PhysicalInfoSchema"
        ],
        "line": 223
      },
      {
        "type": "direct",
        "names": [
          "CulturalInfoSchema"
        ],
        "line": 230
      },
      {
        "type": "direct",
        "names": [
          "VotingInfoSchema"
        ],
        "line": 236
      },
      {
        "type": "direct",
        "names": [
          "MotherMaidenNameSchema"
        ],
        "line": 242
      },
      {
        "type": "direct",
        "names": [
          "BirthPlaceSchema"
        ],
        "line": 248
      },
      {
        "type": "direct",
        "names": [
          "AddressInfoSchema"
        ],
        "line": 253
      }
    ],
    "src/lib/validation/sanitizers.ts": [
      {
        "type": "direct",
        "names": [
          "sanitizeInput"
        ],
        "line": 11
      },
      {
        "type": "direct",
        "names": [
          "sanitizeHtml"
        ],
        "line": 63
      },
      {
        "type": "direct",
        "names": [
          "sanitizePhilSysNumber"
        ],
        "line": 92
      },
      {
        "type": "direct",
        "names": [
          "sanitizeName"
        ],
        "line": 111
      },
      {
        "type": "direct",
        "names": [
          "sanitizePhone"
        ],
        "line": 132
      },
      {
        "type": "direct",
        "names": [
          "sanitizeEmail"
        ],
        "line": 147
      },
      {
        "type": "direct",
        "names": [
          "sanitizeUrl"
        ],
        "line": 162
      },
      {
        "type": "direct",
        "names": [
          "sanitizeText"
        ],
        "line": 191
      },
      {
        "type": "direct",
        "names": [
          "sanitizeSearchQuery"
        ],
        "line": 211
      },
      {
        "type": "direct",
        "names": [
          "sanitizeFileName"
        ],
        "line": 232
      },
      {
        "type": "direct",
        "names": [
          "sanitizeDatabaseInput"
        ],
        "line": 257
      },
      {
        "type": "direct",
        "names": [
          "sanitizeJsonInput"
        ],
        "line": 277
      },
      {
        "type": "direct",
        "names": [
          "sanitizeObject"
        ],
        "line": 295
      }
    ],
    "src/lib/validation/schemas.ts": [
      {
        "type": "direct",
        "names": [
          "residentSchema"
        ],
        "line": 28
      },
      {
        "type": "direct",
        "names": [
          "householdSchema"
        ],
        "line": 84
      },
      {
        "type": "direct",
        "names": [
          "userSchema"
        ],
        "line": 99
      },
      {
        "type": "direct",
        "names": [
          "loginSchema"
        ],
        "line": 111
      },
      {
        "type": "direct",
        "names": [
          "passwordChangeSchema"
        ],
        "line": 119
      },
      {
        "type": "direct",
        "names": [
          "searchQuerySchema"
        ],
        "line": 137
      },
      {
        "type": "direct",
        "names": [
          "fileUploadSchema"
        ],
        "line": 154
      }
    ],
    "src/lib/validation/types.ts": [],
    "src/lib/validation/utilities.ts": [
      {
        "type": "direct",
        "names": [
          "isValidEmail"
        ],
        "line": 14
      },
      {
        "type": "direct",
        "names": [
          "isValidPhilippineMobile"
        ],
        "line": 26
      },
      {
        "type": "direct",
        "names": [
          "isValidPhilSysFormat"
        ],
        "line": 38
      },
      {
        "type": "direct",
        "names": [
          "isValidName"
        ],
        "line": 49
      },
      {
        "type": "direct",
        "names": [
          "isValidAge"
        ],
        "line": 60
      },
      {
        "type": "direct",
        "names": [
          "formatValidationError"
        ],
        "line": 67
      },
      {
        "type": "direct",
        "names": [
          "createValidationResult"
        ],
        "line": 75
      },
      {
        "type": "direct",
        "names": [
          "createFieldValidationResult"
        ],
        "line": 92
      },
      {
        "type": "direct",
        "names": [
          "mergeValidationResults"
        ],
        "line": 109
      },
      {
        "type": "direct",
        "names": [
          "getErrorFields"
        ],
        "line": 135
      },
      {
        "type": "direct",
        "names": [
          "hasFieldError"
        ],
        "line": 142
      },
      {
        "type": "direct",
        "names": [
          "getFieldError"
        ],
        "line": 149
      },
      {
        "type": "direct",
        "names": [
          "hasWarnings"
        ],
        "line": 156
      },
      {
        "type": "direct",
        "names": [
          "validationResultToErrors"
        ],
        "line": 163
      },
      {
        "type": "direct",
        "names": [
          "filterEmptyErrors"
        ],
        "line": 174
      },
      {
        "type": "direct",
        "names": [
          "normalizeFieldName"
        ],
        "line": 189
      },
      {
        "type": "direct",
        "names": [
          "createValidationSummary"
        ],
        "line": 199
      },
      {
        "type": "direct",
        "names": [
          "debounceValidation"
        ],
        "line": 231
      },
      {
        "type": "direct",
        "names": [
          "createValidationPipeline"
        ],
        "line": 241
      },
      {
        "type": "direct",
        "names": [
          "createValidationState"
        ],
        "line": 299
      },
      {
        "type": "direct",
        "names": [
          "useValidationState"
        ],
        "line": 310
      },
      {
        "type": "direct",
        "names": [
          "createFormValidationExecutor"
        ],
        "line": 372
      },
      {
        "type": "direct",
        "names": [
          "createFieldValidationExecutor"
        ],
        "line": 393
      },
      {
        "type": "direct",
        "names": [
          "asyncValidationUtils"
        ],
        "line": 414
      }
    ],
    "src/lib/validation/validation.ts": [
      {
        "type": "direct",
        "names": [
          "personalInfoSchema"
        ],
        "line": 32
      },
      {
        "type": "direct",
        "names": [
          "contactInfoSchema"
        ],
        "line": 69
      },
      {
        "type": "direct",
        "names": [
          "philsysSchema"
        ],
        "line": 92
      },
      {
        "type": "direct",
        "names": [
          "educationSchema"
        ],
        "line": 101
      },
      {
        "type": "direct",
        "names": [
          "employmentSchema"
        ],
        "line": 120
      },
      {
        "type": "direct",
        "names": [
          "healthInfoSchema"
        ],
        "line": 143
      },
      {
        "type": "direct",
        "names": [
          "demographicsSchema"
        ],
        "line": 157
      },
      {
        "type": "direct",
        "names": [
          "votingInfoSchema"
        ],
        "line": 195
      },
      {
        "type": "direct",
        "names": [
          "householdSchema"
        ],
        "line": 210
      },
      {
        "type": "direct",
        "names": [
          "residentSchema"
        ],
        "line": 235
      },
      {
        "type": "direct",
        "names": [
          "psgcCodeSchema"
        ],
        "line": 275
      },
      {
        "type": "direct",
        "names": [
          "fileUploadSchema"
        ],
        "line": 278
      },
      {
        "type": "direct",
        "names": [
          "validateRateLimit"
        ],
        "line": 292
      },
      {
        "type": "direct",
        "names": [
          "sanitizeSearchQuery"
        ],
        "line": 300
      },
      {
        "type": "direct",
        "names": [
          "validateUserPermission"
        ],
        "line": 308
      }
    ],
    "src/middleware.ts": [
      {
        "type": "direct",
        "names": [
          "middleware"
        ],
        "line": 4
      },
      {
        "type": "direct",
        "names": [
          "config"
        ],
        "line": 46
      }
    ],
    "src/providers/AppProvider.tsx": [
      {
        "type": "direct",
        "names": [
          "AppProvider"
        ],
        "line": 195
      },
      {
        "type": "direct",
        "names": [
          "useApp"
        ],
        "line": 314
      },
      {
        "type": "direct",
        "names": [
          "useAuth"
        ],
        "line": 323
      },
      {
        "type": "direct",
        "names": [
          "useTheme"
        ],
        "line": 328
      },
      {
        "type": "direct",
        "names": [
          "useNotifications"
        ],
        "line": 333
      },
      {
        "type": "direct",
        "names": [
          "useUI"
        ],
        "line": 338
      }
    ],
    "src/providers/ErrorBoundary.tsx": [
      {
        "type": "direct",
        "names": [
          "ErrorBoundary"
        ],
        "line": 33
      },
      {
        "type": "direct",
        "names": [
          "withErrorBoundary"
        ],
        "line": 257
      }
    ],
    "src/providers/QueryProvider.tsx": [
      {
        "type": "default",
        "names": [
          "QueryProvider"
        ],
        "line": 15
      }
    ],
    "src/providers/components/ClientProviders/ClientProviders.tsx": [
      {
        "type": "default",
        "names": [
          "ClientProviders"
        ],
        "line": 5
      }
    ],
    "src/providers/components/ClientProviders/index.ts": [
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 1
      }
    ],
    "src/providers/components/LastVisitedTracker.tsx": [
      {
        "type": "default",
        "names": [
          "LastVisitedTracker"
        ],
        "line": 9
      }
    ],
    "src/providers/components/Providers/Providers.tsx": [
      {
        "type": "default",
        "names": [
          "Providers"
        ],
        "line": 8
      }
    ],
    "src/providers/components/Providers/index.ts": [
      {
        "type": "named",
        "names": [
          "default"
        ],
        "line": 1
      }
    ],
    "src/providers/components/index.ts": [],
    "src/providers/index.tsx": [
      {
        "type": "named",
        "names": [
          "ErrorBoundary",
          "withErrorBoundary"
        ],
        "line": 30
      },
      {
        "type": "direct",
        "names": [
          "RootProvider"
        ],
        "line": 18
      },
      {
        "type": "default",
        "names": [
          "RootLayout"
        ],
        "line": 35
      }
    ],
    "src/services/auth/auth-errors.ts": [
      {
        "type": "direct",
        "names": [
          "AUTH_ERROR_MESSAGES"
        ],
        "line": 4
      },
      {
        "type": "direct",
        "names": [
          "getErrorMessage"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "getStatusCodeForError"
        ],
        "line": 48
      }
    ],
    "src/services/auth/auth-helpers.ts": [
      {
        "type": "direct",
        "names": [
          "registerUser"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "signInUser"
        ],
        "line": 101
      },
      {
        "type": "direct",
        "names": [
          "signOutUser"
        ],
        "line": 133
      },
      {
        "type": "direct",
        "names": [
          "getUserProfile"
        ],
        "line": 147
      },
      {
        "type": "direct",
        "names": [
          "updateUserProfile"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "requestPasswordReset"
        ],
        "line": 209
      },
      {
        "type": "direct",
        "names": [
          "updatePassword"
        ],
        "line": 224
      },
      {
        "type": "direct",
        "names": [
          "hasRole"
        ],
        "line": 246
      },
      {
        "type": "direct",
        "names": [
          "isAdmin"
        ],
        "line": 253
      },
      {
        "type": "direct",
        "names": [
          "canAccessBarangay"
        ],
        "line": 263
      },
      {
        "type": "direct",
        "names": [
          "getUserAccessibleBarangays"
        ],
        "line": 280
      },
      {
        "type": "direct",
        "names": [
          "getCurrentSession"
        ],
        "line": 300
      },
      {
        "type": "direct",
        "names": [
          "getCurrentUser"
        ],
        "line": 317
      },
      {
        "type": "direct",
        "names": [
          "onAuthStateChange"
        ],
        "line": 334
      },
      {
        "type": "direct",
        "names": [
          "getRegions"
        ],
        "line": 345
      },
      {
        "type": "direct",
        "names": [
          "getProvincesByRegion"
        ],
        "line": 355
      },
      {
        "type": "direct",
        "names": [
          "getCitiesByProvince"
        ],
        "line": 369
      },
      {
        "type": "direct",
        "names": [
          "getBarangaysByCity"
        ],
        "line": 383
      },
      {
        "type": "direct",
        "names": [
          "searchBarangays"
        ],
        "line": 397
      },
      {
        "type": "direct",
        "names": [
          "searchOccupations"
        ],
        "line": 420
      },
      {
        "type": "direct",
        "names": [
          "getAuthErrorMessage"
        ],
        "line": 438
      }
    ],
    "src/services/auth/auth.ts": [
      {
        "type": "direct",
        "names": [
          "registerUser"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "signInUser"
        ],
        "line": 101
      },
      {
        "type": "direct",
        "names": [
          "signOutUser"
        ],
        "line": 133
      },
      {
        "type": "direct",
        "names": [
          "getUserProfile"
        ],
        "line": 147
      },
      {
        "type": "direct",
        "names": [
          "updateUserProfile"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "requestPasswordReset"
        ],
        "line": 209
      },
      {
        "type": "direct",
        "names": [
          "updatePassword"
        ],
        "line": 224
      },
      {
        "type": "direct",
        "names": [
          "hasRole"
        ],
        "line": 246
      },
      {
        "type": "direct",
        "names": [
          "isAdmin"
        ],
        "line": 253
      },
      {
        "type": "direct",
        "names": [
          "canAccessBarangay"
        ],
        "line": 263
      },
      {
        "type": "direct",
        "names": [
          "getUserAccessibleBarangays"
        ],
        "line": 280
      },
      {
        "type": "direct",
        "names": [
          "getCurrentSession"
        ],
        "line": 300
      },
      {
        "type": "direct",
        "names": [
          "getCurrentUser"
        ],
        "line": 317
      },
      {
        "type": "direct",
        "names": [
          "onAuthStateChange"
        ],
        "line": 334
      },
      {
        "type": "direct",
        "names": [
          "getRegions"
        ],
        "line": 345
      },
      {
        "type": "direct",
        "names": [
          "getProvincesByRegion"
        ],
        "line": 355
      },
      {
        "type": "direct",
        "names": [
          "getCitiesByProvince"
        ],
        "line": 369
      },
      {
        "type": "direct",
        "names": [
          "getBarangaysByCity"
        ],
        "line": 383
      },
      {
        "type": "direct",
        "names": [
          "searchBarangays"
        ],
        "line": 397
      },
      {
        "type": "direct",
        "names": [
          "searchOccupations"
        ],
        "line": 420
      },
      {
        "type": "direct",
        "names": [
          "getAuthErrorMessage"
        ],
        "line": 438
      }
    ],
    "src/services/auth/csrf-utils.ts": [
      {
        "type": "direct",
        "names": [
          "generateCSRFToken"
        ],
        "line": 41
      },
      {
        "type": "direct",
        "names": [
          "verifyCSRFToken"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "createCSRFTokenString"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "verifyCSRFTokenString"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "useCSRFToken"
        ],
        "line": 138
      },
      {
        "type": "direct",
        "names": [
          "validateCSRFMiddleware"
        ],
        "line": 177
      },
      {
        "type": "direct",
        "names": [
          "getCSRFMetaTags"
        ],
        "line": 197
      }
    ],
    "src/services/auth/csrf.ts": [
      {
        "type": "direct",
        "names": [
          "generateCSRFToken"
        ],
        "line": 41
      },
      {
        "type": "direct",
        "names": [
          "verifyCSRFToken"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "createCSRFTokenString"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "verifyCSRFTokenString"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "useCSRFToken"
        ],
        "line": 138
      },
      {
        "type": "direct",
        "names": [
          "validateCSRFMiddleware"
        ],
        "line": 177
      },
      {
        "type": "direct",
        "names": [
          "getCSRFMetaTags"
        ],
        "line": 197
      }
    ],
    "src/services/auth/errors.ts": [
      {
        "type": "direct",
        "names": [
          "AUTH_ERROR_MESSAGES"
        ],
        "line": 4
      },
      {
        "type": "direct",
        "names": [
          "getErrorMessage"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "getStatusCodeForError"
        ],
        "line": 48
      }
    ],
    "src/services/auth/index.ts": [
      {
        "type": "named",
        "names": [
          "// User management\n  registerUser",
          "signInUser",
          "signOutUser",
          "getCurrentUser",
          "updateUserProfile",
          "// Password management\n  requestPasswordReset",
          "updatePassword",
          "// Session management\n  getCurrentSession",
          "onAuthStateChange",
          "// Role and permission functions  \n  hasRole",
          "isAdmin",
          "canAccessBarangay",
          "getUserAccessibleBarangays",
          "// Profile functions\n  getUserProfile",
          "// Utility functions\n  searchBarangays",
          "searchOccupations",
          "getAuthErrorMessage",
          "// Types\n  type UserRole",
          "type UserProfile",
          "type RegistrationData",
          ""
        ],
        "line": 7
      }
    ],
    "src/services/base-repository.ts": [],
    "src/services/charts/chart-transformers.ts": [
      {
        "type": "direct",
        "names": [
          "DEFAULT_CHART_TITLES"
        ],
        "line": 120
      },
      {
        "type": "direct",
        "names": [
          "CHART_COLORS"
        ],
        "line": 127
      },
      {
        "type": "direct",
        "names": [
          "transformDependencyData"
        ],
        "line": 140
      },
      {
        "type": "direct",
        "names": [
          "transformSexData"
        ],
        "line": 169
      },
      {
        "type": "direct",
        "names": [
          "transformCivilStatusData"
        ],
        "line": 192
      },
      {
        "type": "direct",
        "names": [
          "transformEmploymentData"
        ],
        "line": 251
      },
      {
        "type": "direct",
        "names": [
          "transformChartData"
        ],
        "line": 320
      },
      {
        "type": "direct",
        "names": [
          "transformChartDataLegacy"
        ],
        "line": 342
      },
      {
        "type": "direct",
        "names": [
          "getChartTitle"
        ],
        "line": 352
      },
      {
        "type": "direct",
        "names": [
          "chartUtils"
        ],
        "line": 359
      }
    ],
    "src/services/charts/index.ts": [
      {
        "type": "named",
        "names": [
          "transformChartData",
          "transformDependencyData",
          "transformSexData",
          "transformCivilStatusData",
          "transformEmploymentData",
          "getChartTitle",
          "chartUtils",
          "DEFAULT_CHART_TITLES",
          "CHART_COLORS",
          ""
        ],
        "line": 9
      }
    ],
    "src/services/command-menu/analytics-utils.ts": [
      {
        "type": "direct",
        "names": [
          "commandMenuAnalytics"
        ],
        "line": 262
      },
      {
        "type": "direct",
        "names": [
          "trackCommandMenuSearch"
        ],
        "line": 265
      },
      {
        "type": "direct",
        "names": [
          "trackCommandMenuNavigation"
        ],
        "line": 268
      },
      {
        "type": "direct",
        "names": [
          "trackCommandMenuAction"
        ],
        "line": 271
      },
      {
        "type": "direct",
        "names": [
          "trackWorkflowSuggestion"
        ],
        "line": 274
      },
      {
        "type": "direct",
        "names": [
          "trackCommandMenuError"
        ],
        "line": 277
      },
      {
        "type": "direct",
        "names": [
          "startCommandMenuSearchTimer"
        ],
        "line": 280
      },
      {
        "type": "direct",
        "names": [
          "endCommandMenuSearchTimer"
        ],
        "line": 283
      },
      {
        "type": "direct",
        "names": [
          "getCommandMenuHealth"
        ],
        "line": 287
      }
    ],
    "src/services/command-menu/api-utils.ts": [],
    "src/services/command-menu/index.ts": [
      {
        "type": "named",
        "names": [
          "getRecentItems as getRecentApiItems",
          "clearRecentItems as clearRecentApiItems",
          "searchData",
          "exportData",
          "createResident",
          "createHousehold",
          "findSeniorCitizens",
          "findPWDs",
          "findSoloParents",
          "backupData",
          "generateCertificate",
          "generateReport",
          ""
        ],
        "line": 9
      }
    ],
    "src/services/command-menu/items-utils.ts": [
      {
        "type": "direct",
        "names": [
          "Icons"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "getCommandMenuItems"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "getRecentItems"
        ],
        "line": 314
      },
      {
        "type": "direct",
        "names": [
          "getAllCommandMenuItems"
        ],
        "line": 359
      }
    ],
    "src/services/formDataTransformers.ts": [
      {
        "type": "direct",
        "names": [
          "transformBasicInfoToFormData"
        ],
        "line": 20
      },
      {
        "type": "direct",
        "names": [
          "extractBasicInfoFromFormData"
        ],
        "line": 34
      },
      {
        "type": "direct",
        "names": [
          "transformBirthInfoToFormData"
        ],
        "line": 56
      },
      {
        "type": "direct",
        "names": [
          "extractBirthInfoFromFormData"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "transformEducationInfoToFormData"
        ],
        "line": 81
      },
      {
        "type": "direct",
        "names": [
          "extractEducationInfoFromFormData"
        ],
        "line": 90
      },
      {
        "type": "direct",
        "names": [
          "transformEmploymentInfoToFormData"
        ],
        "line": 105
      },
      {
        "type": "direct",
        "names": [
          "extractEmploymentInfoFromFormData"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "transformPhysicalCharacteristicsToFormData"
        ],
        "line": 135
      },
      {
        "type": "direct",
        "names": [
          "extractPhysicalCharacteristicsFromFormData"
        ],
        "line": 150
      },
      {
        "type": "direct",
        "names": [
          "transformMigrationInfoToFormData"
        ],
        "line": 166
      },
      {
        "type": "direct",
        "names": [
          "extractMigrationInfoFromFormData"
        ],
        "line": 183
      },
      {
        "type": "direct",
        "names": [
          "createFieldChangeHandler"
        ],
        "line": 201
      },
      {
        "type": "direct",
        "names": [
          "updateFormFields"
        ],
        "line": 212
      },
      {
        "type": "direct",
        "names": [
          "validateRequiredFields"
        ],
        "line": 223
      },
      {
        "type": "direct",
        "names": [
          "resolveFieldDependencies"
        ],
        "line": 239
      }
    ],
    "src/services/geographic.service.ts": [
      {
        "type": "direct",
        "names": [
          "GeographicService"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "geographicService"
        ],
        "line": 358
      }
    ],
    "src/services/household-fetcher.ts": [
      {
        "type": "direct",
        "names": [
          "batchFetchHouseholdHeads"
        ],
        "line": 15
      },
      {
        "type": "direct",
        "names": [
          "processHouseholdsOptimized"
        ],
        "line": 45
      },
      {
        "type": "direct",
        "names": [
          "buildHouseholdQuery"
        ],
        "line": 73
      },
      {
        "type": "direct",
        "names": [
          "searchHouseholdsOptimized"
        ],
        "line": 93
      },
      {
        "type": "direct",
        "names": [
          "householdCache"
        ],
        "line": 154
      },
      {
        "type": "direct",
        "names": [
          "searchHouseholdsCached"
        ],
        "line": 159
      }
    ],
    "src/services/household-repository.ts": [
      {
        "type": "direct",
        "names": [
          "HouseholdRepository"
        ],
        "line": 25
      }
    ],
    "src/services/household.service.ts": [
      {
        "type": "direct",
        "names": [
          "HouseholdService"
        ],
        "line": 90
      },
      {
        "type": "direct",
        "names": [
          "householdService"
        ],
        "line": 438
      }
    ],
    "src/services/index.ts": [
      {
        "type": "named",
        "names": [
          "BaseRepository",
          "type QueryOptions",
          "type RepositoryError",
          "type RepositoryResult",
          ""
        ],
        "line": 7
      },
      {
        "type": "named",
        "names": [
          "ResidentRepository",
          "type ResidentSearchOptions",
          ""
        ],
        "line": 15
      },
      {
        "type": "named",
        "names": [
          "HouseholdRepository",
          "type HouseholdData",
          "type HouseholdSearchOptions",
          ""
        ],
        "line": 23
      },
      {
        "type": "named",
        "names": [
          "UserRepository",
          "type UserData",
          "type UserSearchOptions",
          "type UserSecurityData",
          ""
        ],
        "line": 29
      },
      {
        "type": "named",
        "names": [
          "residentService as ResidentService"
        ],
        "line": 37
      },
      {
        "type": "named",
        "names": [
          "householdService as HouseholdService"
        ],
        "line": 38
      },
      {
        "type": "direct",
        "names": [
          "RepositoryFactory"
        ],
        "line": 56
      },
      {
        "type": "direct",
        "names": [
          "createRepositories"
        ],
        "line": 81
      }
    ],
    "src/services/resident-details-fetcher.ts": [
      {
        "type": "direct",
        "names": [
          "fetchAddressInfo"
        ],
        "line": 27
      },
      {
        "type": "direct",
        "names": [
          "fetchPsocInfo"
        ],
        "line": 118
      },
      {
        "type": "direct",
        "names": [
          "fetchResidentDetailsOptimized"
        ],
        "line": 156
      },
      {
        "type": "direct",
        "names": [
          "clearPsocCache"
        ],
        "line": 178
      }
    ],
    "src/services/resident-repository.ts": [
      {
        "type": "direct",
        "names": [
          "ResidentRepository"
        ],
        "line": 24
      }
    ],
    "src/services/resident.service.ts": [
      {
        "type": "direct",
        "names": [
          "ResidentService"
        ],
        "line": 118
      },
      {
        "type": "direct",
        "names": [
          "residentService"
        ],
        "line": 461
      }
    ],
    "src/services/residentMapper.ts": [
      {
        "type": "direct",
        "names": [
          "mapFormToApi"
        ],
        "line": 23
      },
      {
        "type": "direct",
        "names": [
          "mapDatabaseToForm"
        ],
        "line": 79
      },
      {
        "type": "direct",
        "names": [
          "formatHouseholdOption"
        ],
        "line": 132
      },
      {
        "type": "direct",
        "names": [
          "formatPsocOption"
        ],
        "line": 175
      },
      {
        "type": "direct",
        "names": [
          "formatPsgcOption"
        ],
        "line": 218
      },
      {
        "type": "direct",
        "names": [
          "calculateAge"
        ],
        "line": 233
      },
      {
        "type": "direct",
        "names": [
          "formatFullName"
        ],
        "line": 251
      },
      {
        "type": "direct",
        "names": [
          "formatMotherMaidenName"
        ],
        "line": 274
      },
      {
        "type": "direct",
        "names": [
          "formatEnumValue"
        ],
        "line": 294
      },
      {
        "type": "direct",
        "names": [
          "formatBoolean"
        ],
        "line": 302
      },
      {
        "type": "direct",
        "names": [
          "parseFullName"
        ],
        "line": 311
      },
      {
        "type": "direct",
        "names": [
          "getFormToSchemaFieldMapping"
        ],
        "line": 350
      },
      {
        "type": "direct",
        "names": [
          "getSchemaToFormFieldMapping"
        ],
        "line": 378
      }
    ],
    "src/services/search/index.ts": [],
    "src/services/search/public-search.ts": [
      {
        "type": "direct",
        "names": [
          "searchBarangaysPublic"
        ],
        "line": 15
      },
      {
        "type": "direct",
        "names": [
          "getRegionsPublic"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "getProvincesByRegionPublic"
        ],
        "line": 93
      },
      {
        "type": "direct",
        "names": [
          "getCitiesByProvincePublic"
        ],
        "line": 112
      },
      {
        "type": "direct",
        "names": [
          "getBarangaysByCityPublic"
        ],
        "line": 131
      },
      {
        "type": "direct",
        "names": [
          "searchOccupationsPublic"
        ],
        "line": 150
      }
    ],
    "src/services/statistics/index.ts": [
      {
        "type": "named",
        "names": [
          "filterEmptyAgeGroups",
          "hasPopulationData",
          "calculatePopulationStats",
          "calculateMaxPercentage",
          "generateTooltipData",
          "populationPyramidStats",
          ""
        ],
        "line": 9
      }
    ],
    "src/services/statistics/population-pyramid.ts": [
      {
        "type": "direct",
        "names": [
          "filterEmptyAgeGroups"
        ],
        "line": 39
      },
      {
        "type": "direct",
        "names": [
          "hasPopulationData"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "calculatePopulationStats"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "calculateMaxPercentage"
        ],
        "line": 72
      },
      {
        "type": "direct",
        "names": [
          "generateTooltipData"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "populationPyramidStats"
        ],
        "line": 120
      }
    ],
    "src/services/user-repository.ts": [
      {
        "type": "direct",
        "names": [
          "UserRepository"
        ],
        "line": 47
      }
    ],
    "src/stories/atoms/Badge/Badge.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 47
      },
      {
        "type": "direct",
        "names": [
          "Variants"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "Outlined"
        ],
        "line": 66
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 79
      },
      {
        "type": "direct",
        "names": [
          "Shapes"
        ],
        "line": 89
      },
      {
        "type": "direct",
        "names": [
          "WithIcons"
        ],
        "line": 98
      },
      {
        "type": "direct",
        "names": [
          "StatusBadges"
        ],
        "line": 161
      },
      {
        "type": "direct",
        "names": [
          "CountBadges"
        ],
        "line": 172
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 191
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 44
      }
    ],
    "src/stories/atoms/Button/Button.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Primary"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "Secondary"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "Success"
        ],
        "line": 92
      },
      {
        "type": "direct",
        "names": [
          "Warning"
        ],
        "line": 99
      },
      {
        "type": "direct",
        "names": [
          "Danger"
        ],
        "line": 106
      },
      {
        "type": "direct",
        "names": [
          "Ghost"
        ],
        "line": 113
      },
      {
        "type": "direct",
        "names": [
          "Loading"
        ],
        "line": 121
      },
      {
        "type": "direct",
        "names": [
          "Disabled"
        ],
        "line": 129
      },
      {
        "type": "direct",
        "names": [
          "Small"
        ],
        "line": 138
      },
      {
        "type": "direct",
        "names": [
          "Medium"
        ],
        "line": 146
      },
      {
        "type": "direct",
        "names": [
          "Large"
        ],
        "line": 154
      },
      {
        "type": "direct",
        "names": [
          "WithLeftIcon"
        ],
        "line": 163
      },
      {
        "type": "direct",
        "names": [
          "WithRightIcon"
        ],
        "line": 183
      },
      {
        "type": "direct",
        "names": [
          "FullWidth"
        ],
        "line": 203
      },
      {
        "type": "direct",
        "names": [
          "RegularSize"
        ],
        "line": 215
      },
      {
        "type": "direct",
        "names": [
          "FigmaDesignSystem"
        ],
        "line": 224
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 74
      }
    ],
    "src/stories/atoms/Chart/ChartContainer/ChartContainer.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 32
      },
      {
        "type": "direct",
        "names": [
          "WithCustomClass"
        ],
        "line": 45
      },
      {
        "type": "direct",
        "names": [
          "Empty"
        ],
        "line": 59
      },
      {
        "type": "direct",
        "names": [
          "WithPieChart"
        ],
        "line": 71
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 29
      }
    ],
    "src/stories/atoms/Chart/ChartEmptyState/ChartEmptyState.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 32
      },
      {
        "type": "direct",
        "names": [
          "CustomMessage"
        ],
        "line": 36
      },
      {
        "type": "direct",
        "names": [
          "ShortMessage"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "LongMessage"
        ],
        "line": 48
      },
      {
        "type": "direct",
        "names": [
          "WithCustomStyling"
        ],
        "line": 54
      },
      {
        "type": "direct",
        "names": [
          "InChartContainer"
        ],
        "line": 61
      },
      {
        "type": "direct",
        "names": [
          "WithIcon"
        ],
        "line": 80
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 29
      }
    ],
    "src/stories/atoms/Chart/ChartLegend/ChartLegend.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "WithAgeDistribution"
        ],
        "line": 71
      },
      {
        "type": "direct",
        "names": [
          "WithEmploymentStatus"
        ],
        "line": 77
      },
      {
        "type": "direct",
        "names": [
          "WithZeroValues"
        ],
        "line": 83
      },
      {
        "type": "direct",
        "names": [
          "WithHoveredItem"
        ],
        "line": 89
      },
      {
        "type": "direct",
        "names": [
          "SingleItem"
        ],
        "line": 96
      },
      {
        "type": "direct",
        "names": [
          "LargeNumbers"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "LongLabels"
        ],
        "line": 113
      },
      {
        "type": "direct",
        "names": [
          "CustomStyling"
        ],
        "line": 123
      },
      {
        "type": "direct",
        "names": [
          "InteractiveDemo"
        ],
        "line": 163
      },
      {
        "type": "direct",
        "names": [
          "InChartContainer"
        ],
        "line": 170
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/atoms/Chart/ChartTitle/ChartTitle.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 32
      },
      {
        "type": "direct",
        "names": [
          "LongTitle"
        ],
        "line": 38
      },
      {
        "type": "direct",
        "names": [
          "ShortTitle"
        ],
        "line": 44
      },
      {
        "type": "direct",
        "names": [
          "WithCustomClass"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "WithSpecialCharacters"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "InContainer"
        ],
        "line": 63
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 29
      }
    ],
    "src/stories/atoms/Chart/ChartTooltip/ChartTooltip.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 40
      },
      {
        "type": "direct",
        "names": [
          "WithoutColor"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "LargeNumbers"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "SmallNumbers"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "LongLabel"
        ],
        "line": 91
      },
      {
        "type": "direct",
        "names": [
          "Hidden"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "CustomStyling"
        ],
        "line": 117
      },
      {
        "type": "direct",
        "names": [
          "InteractiveDemo"
        ],
        "line": 131
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 37
      }
    ],
    "src/stories/atoms/Field/Control/Checkbox/Checkbox.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 51
      },
      {
        "type": "direct",
        "names": [
          "Checked"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "Indeterminate"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "WithDescription"
        ],
        "line": 72
      },
      {
        "type": "direct",
        "names": [
          "Primary"
        ],
        "line": 80
      },
      {
        "type": "direct",
        "names": [
          "Error"
        ],
        "line": 88
      },
      {
        "type": "direct",
        "names": [
          "Disabled"
        ],
        "line": 96
      },
      {
        "type": "direct",
        "names": [
          "DisabledChecked"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 112
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 159
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 48
      }
    ],
    "src/stories/atoms/Field/Control/Control.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "CheckboxDefault"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "CheckboxChecked"
        ],
        "line": 66
      },
      {
        "type": "direct",
        "names": [
          "CheckboxIndeterminate"
        ],
        "line": 74
      },
      {
        "type": "direct",
        "names": [
          "CheckboxWithDescription"
        ],
        "line": 82
      },
      {
        "type": "direct",
        "names": [
          "CheckboxError"
        ],
        "line": 91
      },
      {
        "type": "direct",
        "names": [
          "CheckboxDisabled"
        ],
        "line": 100
      },
      {
        "type": "direct",
        "names": [
          "RadioDefault"
        ],
        "line": 110
      },
      {
        "type": "direct",
        "names": [
          "RadioChecked"
        ],
        "line": 119
      },
      {
        "type": "direct",
        "names": [
          "RadioWithDescription"
        ],
        "line": 129
      },
      {
        "type": "direct",
        "names": [
          "RadioError"
        ],
        "line": 139
      },
      {
        "type": "direct",
        "names": [
          "RadioDisabled"
        ],
        "line": 149
      },
      {
        "type": "direct",
        "names": [
          "ToggleDefault"
        ],
        "line": 160
      },
      {
        "type": "direct",
        "names": [
          "ToggleChecked"
        ],
        "line": 168
      },
      {
        "type": "direct",
        "names": [
          "ToggleWithDescription"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "ToggleError"
        ],
        "line": 185
      },
      {
        "type": "direct",
        "names": [
          "ToggleDisabled"
        ],
        "line": 194
      },
      {
        "type": "direct",
        "names": [
          "SizeVariations"
        ],
        "line": 204
      },
      {
        "type": "direct",
        "names": [
          "VariantExamples"
        ],
        "line": 238
      },
      {
        "type": "direct",
        "names": [
          "InteractiveCheckbox"
        ],
        "line": 275
      },
      {
        "type": "direct",
        "names": [
          "InteractiveRadioGroup"
        ],
        "line": 315
      },
      {
        "type": "direct",
        "names": [
          "InteractiveToggle"
        ],
        "line": 348
      },
      {
        "type": "direct",
        "names": [
          "ComponentComparison"
        ],
        "line": 398
      },
      {
        "type": "direct",
        "names": [
          "Playground"
        ],
        "line": 421
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 54
      }
    ],
    "src/stories/atoms/Field/Control/Radio/Radio.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 48
      },
      {
        "type": "direct",
        "names": [
          "Checked"
        ],
        "line": 56
      },
      {
        "type": "direct",
        "names": [
          "WithDescription"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "Primary"
        ],
        "line": 74
      },
      {
        "type": "direct",
        "names": [
          "Error"
        ],
        "line": 84
      },
      {
        "type": "direct",
        "names": [
          "Disabled"
        ],
        "line": 93
      },
      {
        "type": "direct",
        "names": [
          "DisabledChecked"
        ],
        "line": 102
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 112
      },
      {
        "type": "direct",
        "names": [
          "RadioGroupExample"
        ],
        "line": 134
      },
      {
        "type": "direct",
        "names": [
          "RadioGroupHorizontal"
        ],
        "line": 155
      },
      {
        "type": "direct",
        "names": [
          "RadioGroupWithError"
        ],
        "line": 181
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 244
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 45
      }
    ],
    "src/stories/atoms/Field/Control/TitleDescription.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 51
      },
      {
        "type": "direct",
        "names": [
          "TitleOnly"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "DescriptionOnly"
        ],
        "line": 71
      },
      {
        "type": "direct",
        "names": [
          "Primary"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "WithError"
        ],
        "line": 93
      },
      {
        "type": "direct",
        "names": [
          "Disabled"
        ],
        "line": 108
      },
      {
        "type": "direct",
        "names": [
          "Small"
        ],
        "line": 124
      },
      {
        "type": "direct",
        "names": [
          "Medium"
        ],
        "line": 132
      },
      {
        "type": "direct",
        "names": [
          "Large"
        ],
        "line": 140
      },
      {
        "type": "direct",
        "names": [
          "LongContent"
        ],
        "line": 149
      },
      {
        "type": "direct",
        "names": [
          "ErrorWithLongMessage"
        ],
        "line": 163
      },
      {
        "type": "direct",
        "names": [
          "CheckboxLabel"
        ],
        "line": 179
      },
      {
        "type": "direct",
        "names": [
          "RadioLabel"
        ],
        "line": 198
      },
      {
        "type": "direct",
        "names": [
          "SizeComparison"
        ],
        "line": 227
      },
      {
        "type": "direct",
        "names": [
          "VariantComparison"
        ],
        "line": 257
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 47
      }
    ],
    "src/stories/atoms/Field/Control/Toggle/Toggle.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 48
      },
      {
        "type": "direct",
        "names": [
          "Checked"
        ],
        "line": 55
      },
      {
        "type": "direct",
        "names": [
          "WithDescription"
        ],
        "line": 62
      },
      {
        "type": "direct",
        "names": [
          "Primary"
        ],
        "line": 70
      },
      {
        "type": "direct",
        "names": [
          "Error"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "Disabled"
        ],
        "line": 86
      },
      {
        "type": "direct",
        "names": [
          "DisabledChecked"
        ],
        "line": 94
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 102
      },
      {
        "type": "direct",
        "names": [
          "Variants"
        ],
        "line": 127
      },
      {
        "type": "direct",
        "names": [
          "SettingsPanel"
        ],
        "line": 207
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 271
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 45
      }
    ],
    "src/stories/atoms/Field/HelperText/HelperText.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 31
      },
      {
        "type": "direct",
        "names": [
          "ErrorMessage"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 44
      },
      {
        "type": "direct",
        "names": [
          "VariantComparison"
        ],
        "line": 71
      },
      {
        "type": "direct",
        "names": [
          "LongText"
        ],
        "line": 91
      },
      {
        "type": "direct",
        "names": [
          "WithCustomId"
        ],
        "line": 103
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 28
      }
    ],
    "src/stories/atoms/Field/Input/Input.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 108
      },
      {
        "type": "direct",
        "names": [
          "WithError"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "Disabled"
        ],
        "line": 122
      },
      {
        "type": "direct",
        "names": [
          "WithLeftIcon"
        ],
        "line": 131
      },
      {
        "type": "direct",
        "names": [
          "WithRightIcon"
        ],
        "line": 145
      },
      {
        "type": "direct",
        "names": [
          "WithBothIcons"
        ],
        "line": 160
      },
      {
        "type": "direct",
        "names": [
          "Dismissible"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "SearchWithClear"
        ],
        "line": 204
      },
      {
        "type": "direct",
        "names": [
          "PasswordWithEye"
        ],
        "line": 235
      },
      {
        "type": "direct",
        "names": [
          "PasswordAllFeatures"
        ],
        "line": 264
      },
      {
        "type": "direct",
        "names": [
          "EmailWithIcon"
        ],
        "line": 296
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 326
      },
      {
        "type": "direct",
        "names": [
          "Playground"
        ],
        "line": 380
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 104
      }
    ],
    "src/stories/atoms/Field/Label/Label.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 102
      },
      {
        "type": "direct",
        "names": [
          "Required"
        ],
        "line": 110
      },
      {
        "type": "direct",
        "names": [
          "RequiredHiddenIndicator"
        ],
        "line": 119
      },
      {
        "type": "direct",
        "names": [
          "CustomRequiredIndicator"
        ],
        "line": 135
      },
      {
        "type": "direct",
        "names": [
          "WithHelpText"
        ],
        "line": 145
      },
      {
        "type": "direct",
        "names": [
          "WithSecondaryText"
        ],
        "line": 154
      },
      {
        "type": "direct",
        "names": [
          "SecondaryTextCustomSize"
        ],
        "line": 170
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 188
      },
      {
        "type": "direct",
        "names": [
          "SizesWithSecondaryText"
        ],
        "line": 207
      },
      {
        "type": "direct",
        "names": [
          "Variants"
        ],
        "line": 256
      },
      {
        "type": "direct",
        "names": [
          "DisabledState"
        ],
        "line": 274
      },
      {
        "type": "direct",
        "names": [
          "VisuallyHidden"
        ],
        "line": 290
      },
      {
        "type": "direct",
        "names": [
          "CompleteFormExample"
        ],
        "line": 305
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 99
      }
    ],
    "src/stories/atoms/Field/ReadOnly/ReadOnly.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 34
      },
      {
        "type": "direct",
        "names": [
          "WithValue"
        ],
        "line": 40
      },
      {
        "type": "direct",
        "names": [
          "Empty"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "WithLeftIcon"
        ],
        "line": 52
      },
      {
        "type": "direct",
        "names": [
          "WithRightIcon"
        ],
        "line": 63
      },
      {
        "type": "direct",
        "names": [
          "WithBothIcons"
        ],
        "line": 74
      },
      {
        "type": "direct",
        "names": [
          "LongText"
        ],
        "line": 90
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 31
      }
    ],
    "src/stories/atoms/Field/Select/Option/Option.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "WithDescription"
        ],
        "line": 71
      },
      {
        "type": "direct",
        "names": [
          "Selected"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "Focused"
        ],
        "line": 86
      },
      {
        "type": "direct",
        "names": [
          "Disabled"
        ],
        "line": 94
      },
      {
        "type": "direct",
        "names": [
          "SelectedAndFocused"
        ],
        "line": 103
      },
      {
        "type": "direct",
        "names": [
          "LongContent"
        ],
        "line": 112
      },
      {
        "type": "direct",
        "names": [
          "DropdownExample"
        ],
        "line": 120
      },
      {
        "type": "direct",
        "names": [
          "CustomContent"
        ],
        "line": 161
      },
      {
        "type": "direct",
        "names": [
          "Playground"
        ],
        "line": 206
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 61
      }
    ],
    "src/stories/atoms/Field/Select/Select.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "WithSexOptions"
        ],
        "line": 84
      },
      {
        "type": "direct",
        "names": [
          "WithCivilStatusOptions"
        ],
        "line": 106
      },
      {
        "type": "direct",
        "names": [
          "WithEducationLevels"
        ],
        "line": 128
      },
      {
        "type": "direct",
        "names": [
          "WithDescriptions"
        ],
        "line": 151
      },
      {
        "type": "direct",
        "names": [
          "SearchableSelect"
        ],
        "line": 198
      },
      {
        "type": "direct",
        "names": [
          "AllowCustomInput"
        ],
        "line": 240
      },
      {
        "type": "direct",
        "names": [
          "ErrorState"
        ],
        "line": 270
      },
      {
        "type": "direct",
        "names": [
          "DisabledState"
        ],
        "line": 286
      },
      {
        "type": "direct",
        "names": [
          "InteractiveDemo"
        ],
        "line": 301
      },
      {
        "type": "direct",
        "names": [
          "KeyboardNavigation"
        ],
        "line": 370
      },
      {
        "type": "direct",
        "names": [
          "PSGCPattern"
        ],
        "line": 407
      },
      {
        "type": "direct",
        "names": [
          "PSOCPattern"
        ],
        "line": 477
      },
      {
        "type": "direct",
        "names": [
          "APIComparison"
        ],
        "line": 549
      },
      {
        "type": "direct",
        "names": [
          "UnauthenticatedDemo"
        ],
        "line": 704
      },
      {
        "type": "direct",
        "names": [
          "RealPSGCAPI"
        ],
        "line": 741
      },
      {
        "type": "direct",
        "names": [
          "YourStory"
        ],
        "line": 810
      },
      {
        "type": "direct",
        "names": [
          "RealPSOCAPI"
        ],
        "line": 820
      },
      {
        "type": "direct",
        "names": [
          "YourPSOCStory"
        ],
        "line": 889
      },
      {
        "type": "direct",
        "names": [
          "APIImplementationGuide"
        ],
        "line": 899
      },
      {
        "type": "direct",
        "names": [
          "Playground"
        ],
        "line": 1064
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 80
      }
    ],
    "src/stories/atoms/Field/Textarea/Textarea.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 75
      },
      {
        "type": "direct",
        "names": [
          "WithError"
        ],
        "line": 82
      },
      {
        "type": "direct",
        "names": [
          "Disabled"
        ],
        "line": 90
      },
      {
        "type": "direct",
        "names": [
          "WithCharacterCount"
        ],
        "line": 100
      },
      {
        "type": "direct",
        "names": [
          "WithMaxLength"
        ],
        "line": 128
      },
      {
        "type": "direct",
        "names": [
          "DifferentSizes"
        ],
        "line": 158
      },
      {
        "type": "direct",
        "names": [
          "Resizable"
        ],
        "line": 199
      },
      {
        "type": "direct",
        "names": [
          "AsFieldSet"
        ],
        "line": 229
      },
      {
        "type": "direct",
        "names": [
          "DesignConsistency"
        ],
        "line": 283
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 336
      },
      {
        "type": "direct",
        "names": [
          "Playground"
        ],
        "line": 457
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 71
      }
    ],
    "src/stories/atoms/Link/Link.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 123
      },
      {
        "type": "direct",
        "names": [
          "Traditional"
        ],
        "line": 129
      },
      {
        "type": "direct",
        "names": [
          "ButtonStyled"
        ],
        "line": 143
      },
      {
        "type": "direct",
        "names": [
          "AllVariants"
        ],
        "line": 158
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 190
      },
      {
        "type": "direct",
        "names": [
          "WithIcons"
        ],
        "line": 209
      },
      {
        "type": "direct",
        "names": [
          "IconOnly"
        ],
        "line": 236
      },
      {
        "type": "direct",
        "names": [
          "ExternalLink"
        ],
        "line": 253
      },
      {
        "type": "direct",
        "names": [
          "NavigationExamples"
        ],
        "line": 270
      },
      {
        "type": "direct",
        "names": [
          "FullWidth"
        ],
        "line": 301
      },
      {
        "type": "direct",
        "names": [
          "InteractiveStates"
        ],
        "line": 317
      },
      {
        "type": "direct",
        "names": [
          "DarkMode"
        ],
        "line": 338
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 119
      }
    ],
    "src/stories/atoms/SkipNavigation/SkipNavigation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 32
      },
      {
        "type": "direct",
        "names": [
          "CustomSkipTarget"
        ],
        "line": 77
      },
      {
        "type": "direct",
        "names": [
          "MultipleSkipLinks"
        ],
        "line": 136
      },
      {
        "type": "direct",
        "names": [
          "AccessibilityDemo"
        ],
        "line": 220
      },
      {
        "type": "direct",
        "names": [
          "StylingSamples"
        ],
        "line": 336
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 29
      }
    ],
    "src/stories/index.ts": [
      {
        "type": "direct",
        "names": [
          "STORY_COUNTS"
        ],
        "line": 17
      },
      {
        "type": "direct",
        "names": [
          "ATOMIC_LEVELS"
        ],
        "line": 26
      },
      {
        "type": "direct",
        "names": [
          "generateStoryTitle"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "isValidAtomicLevel"
        ],
        "line": 55
      }
    ],
    "src/stories/molecules/AccessibleModal/AccessibleModal.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 67
      },
      {
        "type": "direct",
        "names": [
          "Small"
        ],
        "line": 95
      },
      {
        "type": "direct",
        "names": [
          "Large"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "NoCloseButton"
        ],
        "line": 151
      },
      {
        "type": "direct",
        "names": [
          "LongContent"
        ],
        "line": 167
      },
      {
        "type": "direct",
        "names": [
          "Form"
        ],
        "line": 187
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 40
      }
    ],
    "src/stories/molecules/ButtonGroup/ButtonGroup.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "Horizontal"
        ],
        "line": 52
      },
      {
        "type": "direct",
        "names": [
          "Vertical"
        ],
        "line": 67
      },
      {
        "type": "direct",
        "names": [
          "Attached"
        ],
        "line": 82
      },
      {
        "type": "direct",
        "names": [
          "Spacing"
        ],
        "line": 106
      },
      {
        "type": "direct",
        "names": [
          "ActionGroups"
        ],
        "line": 148
      },
      {
        "type": "direct",
        "names": [
          "Toggle"
        ],
        "line": 262
      },
      {
        "type": "direct",
        "names": [
          "WithIcons"
        ],
        "line": 266
      },
      {
        "type": "direct",
        "names": [
          "Responsive"
        ],
        "line": 369
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 34
      }
    ],
    "src/stories/molecules/CivilStatusPieChart/CivilStatusPieChart.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "TypicalBarangay"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "RuralBarangay"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "UrbanBarangay"
        ],
        "line": 70
      },
      {
        "type": "direct",
        "names": [
          "YoungPopulation"
        ],
        "line": 87
      },
      {
        "type": "direct",
        "names": [
          "ElderlyPopulation"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "SmallBarangay"
        ],
        "line": 121
      },
      {
        "type": "direct",
        "names": [
          "ProgressiveBarangay"
        ],
        "line": 138
      },
      {
        "type": "direct",
        "names": [
          "TraditionalBarangay"
        ],
        "line": 155
      },
      {
        "type": "direct",
        "names": [
          "WithZeroValues"
        ],
        "line": 172
      },
      {
        "type": "direct",
        "names": [
          "EmptyData"
        ],
        "line": 189
      },
      {
        "type": "direct",
        "names": [
          "SingleStatusOnly"
        ],
        "line": 206
      },
      {
        "type": "direct",
        "names": [
          "FilipinoTitle"
        ],
        "line": 223
      },
      {
        "type": "direct",
        "names": [
          "ComparativeAnalysis"
        ],
        "line": 240
      },
      {
        "type": "direct",
        "names": [
          "BarangayComparison"
        ],
        "line": 277
      },
      {
        "type": "direct",
        "names": [
          "ResponsiveDisplay"
        ],
        "line": 327
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 33
      }
    ],
    "src/stories/molecules/CommandMenu/CommandMenu.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 252
      },
      {
        "type": "direct",
        "names": [
          "NavigationOnly"
        ],
        "line": 270
      },
      {
        "type": "direct",
        "names": [
          "ActionsOnly"
        ],
        "line": 285
      },
      {
        "type": "direct",
        "names": [
          "WithRecents"
        ],
        "line": 301
      },
      {
        "type": "direct",
        "names": [
          "Compact"
        ],
        "line": 316
      },
      {
        "type": "direct",
        "names": [
          "Large"
        ],
        "line": 333
      },
      {
        "type": "direct",
        "names": [
          "Empty"
        ],
        "line": 351
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 249
      }
    ],
    "src/stories/molecules/CommandMenu/CommandMenuEmpty.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 28
      },
      {
        "type": "direct",
        "names": [
          "WithNumericQuery"
        ],
        "line": 34
      },
      {
        "type": "direct",
        "names": [
          "WithNameQuery"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "WithShortQuery"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "WithCustomMessage"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "WithHouseholdCodeQuery"
        ],
        "line": 67
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 25
      }
    ],
    "src/stories/molecules/CommandMenu/InlineCommandMenu.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 48
      },
      {
        "type": "direct",
        "names": [
          "Small"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "Large"
        ],
        "line": 66
      },
      {
        "type": "direct",
        "names": [
          "NoShortcuts"
        ],
        "line": 74
      },
      {
        "type": "direct",
        "names": [
          "NoRecent"
        ],
        "line": 88
      },
      {
        "type": "direct",
        "names": [
          "CustomEmptyState"
        ],
        "line": 102
      },
      {
        "type": "direct",
        "names": [
          "InHeaderLayout"
        ],
        "line": 116
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 45
      }
    ],
    "src/stories/molecules/DependencyRatioPieChart/DependencyRatioPieChart.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "TypicalBarangay"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "YoungPopulation"
        ],
        "line": 49
      },
      {
        "type": "direct",
        "names": [
          "AgingBarangay"
        ],
        "line": 61
      },
      {
        "type": "direct",
        "names": [
          "UrbanProfessional"
        ],
        "line": 73
      },
      {
        "type": "direct",
        "names": [
          "RuralAgricultural"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "BalancedPopulation"
        ],
        "line": 97
      },
      {
        "type": "direct",
        "names": [
          "RetirementCommunity"
        ],
        "line": 109
      },
      {
        "type": "direct",
        "names": [
          "UniversityArea"
        ],
        "line": 121
      },
      {
        "type": "direct",
        "names": [
          "IslandBarangay"
        ],
        "line": 133
      },
      {
        "type": "direct",
        "names": [
          "MiningCommunity"
        ],
        "line": 145
      },
      {
        "type": "direct",
        "names": [
          "OFWBarangay"
        ],
        "line": 157
      },
      {
        "type": "direct",
        "names": [
          "DisasterAffected"
        ],
        "line": 169
      },
      {
        "type": "direct",
        "names": [
          "HighFertility"
        ],
        "line": 181
      },
      {
        "type": "direct",
        "names": [
          "LowFertilityUrban"
        ],
        "line": 193
      },
      {
        "type": "direct",
        "names": [
          "OnlyWorkingAge"
        ],
        "line": 205
      },
      {
        "type": "direct",
        "names": [
          "EmptyData"
        ],
        "line": 217
      },
      {
        "type": "direct",
        "names": [
          "RegionalComparison"
        ],
        "line": 229
      },
      {
        "type": "direct",
        "names": [
          "TimeSeriesComparison"
        ],
        "line": 288
      },
      {
        "type": "direct",
        "names": [
          "DependencyScenarios"
        ],
        "line": 323
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 33
      }
    ],
    "src/stories/molecules/EmploymentStatusPieChart/EmploymentStatusPieChart.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "TypicalBarangay"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "UrbanBarangay"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "RuralAgricultural"
        ],
        "line": 70
      },
      {
        "type": "direct",
        "names": [
          "FishingCommunity"
        ],
        "line": 87
      },
      {
        "type": "direct",
        "names": [
          "TouristDestination"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "IndustrialBarangay"
        ],
        "line": 121
      },
      {
        "type": "direct",
        "names": [
          "HighUnemployment"
        ],
        "line": 138
      },
      {
        "type": "direct",
        "names": [
          "UniversityTown"
        ],
        "line": 155
      },
      {
        "type": "direct",
        "names": [
          "RetirementCommunity"
        ],
        "line": 172
      },
      {
        "type": "direct",
        "names": [
          "OFWDependent"
        ],
        "line": 189
      },
      {
        "type": "direct",
        "names": [
          "MiningCommunity"
        ],
        "line": 206
      },
      {
        "type": "direct",
        "names": [
          "IndigenousCommunity"
        ],
        "line": 223
      },
      {
        "type": "direct",
        "names": [
          "PostDisaster"
        ],
        "line": 240
      },
      {
        "type": "direct",
        "names": [
          "HighPWDPopulation"
        ],
        "line": 257
      },
      {
        "type": "direct",
        "names": [
          "BalancedEmployment"
        ],
        "line": 274
      },
      {
        "type": "direct",
        "names": [
          "EmptyData"
        ],
        "line": 291
      },
      {
        "type": "direct",
        "names": [
          "RegionalComparison"
        ],
        "line": 308
      },
      {
        "type": "direct",
        "names": [
          "EconomicSectors"
        ],
        "line": 397
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 33
      }
    ],
    "src/stories/molecules/ErrorModal/ErrorModal.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "WithDetails"
        ],
        "line": 55
      },
      {
        "type": "direct",
        "names": [
          "NetworkError"
        ],
        "line": 77
      },
      {
        "type": "direct",
        "names": [
          "ValidationError"
        ],
        "line": 98
      },
      {
        "type": "direct",
        "names": [
          "PermissionError"
        ],
        "line": 120
      },
      {
        "type": "direct",
        "names": [
          "ServerError"
        ],
        "line": 141
      },
      {
        "type": "direct",
        "names": [
          "LongMessage"
        ],
        "line": 164
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 190
      },
      {
        "type": "direct",
        "names": [
          "MultipleErrors"
        ],
        "line": 226
      },
      {
        "type": "direct",
        "names": [
          "Closed"
        ],
        "line": 289
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 42
      }
    ],
    "src/stories/molecules/FieldSet/ControlField/ControlField.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "CheckboxField"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "RadioField"
        ],
        "line": 55
      },
      {
        "type": "direct",
        "names": [
          "ToggleField"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "CheckboxWithError"
        ],
        "line": 81
      },
      {
        "type": "direct",
        "names": [
          "RadioWithError"
        ],
        "line": 91
      },
      {
        "type": "direct",
        "names": [
          "ToggleWithError"
        ],
        "line": 103
      },
      {
        "type": "direct",
        "names": [
          "HorizontalCheckbox"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "HorizontalRadio"
        ],
        "line": 127
      },
      {
        "type": "direct",
        "names": [
          "SizeVariations"
        ],
        "line": 143
      },
      {
        "type": "direct",
        "names": [
          "InteractiveCheckboxField"
        ],
        "line": 183
      },
      {
        "type": "direct",
        "names": [
          "InteractiveToggleField"
        ],
        "line": 226
      },
      {
        "type": "direct",
        "names": [
          "BasicControlGroup"
        ],
        "line": 262
      },
      {
        "type": "direct",
        "names": [
          "HorizontalControlGroup"
        ],
        "line": 294
      },
      {
        "type": "direct",
        "names": [
          "RadioGroup"
        ],
        "line": 327
      },
      {
        "type": "direct",
        "names": [
          "ComplexForm"
        ],
        "line": 364
      },
      {
        "type": "direct",
        "names": [
          "Playground"
        ],
        "line": 478
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/molecules/FieldSet/InputField/InputField.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 38
      },
      {
        "type": "direct",
        "names": [
          "WithError"
        ],
        "line": 53
      },
      {
        "type": "direct",
        "names": [
          "HorizontalLayout"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "DifferentInputTypes"
        ],
        "line": 97
      },
      {
        "type": "direct",
        "names": [
          "FormGroupExample"
        ],
        "line": 127
      },
      {
        "type": "direct",
        "names": [
          "CompleteForm"
        ],
        "line": 151
      },
      {
        "type": "direct",
        "names": [
          "VariousSpacing"
        ],
        "line": 318
      },
      {
        "type": "direct",
        "names": [
          "ResponsiveLayout"
        ],
        "line": 369
      },
      {
        "type": "direct",
        "names": [
          "DirectInputUsage"
        ],
        "line": 412
      },
      {
        "type": "direct",
        "names": [
          "HelperTextIntegration"
        ],
        "line": 475
      },
      {
        "type": "direct",
        "names": [
          "AccessibilityDemo"
        ],
        "line": 535
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 35
      }
    ],
    "src/stories/molecules/FieldSet/ReadOnlyField/ReadOnlyField.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 31
      },
      {
        "type": "direct",
        "names": [
          "WithHelperText"
        ],
        "line": 40
      },
      {
        "type": "direct",
        "names": [
          "WithIcons"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "HorizontalLayout"
        ],
        "line": 64
      },
      {
        "type": "direct",
        "names": [
          "EmptyValue"
        ],
        "line": 75
      },
      {
        "type": "direct",
        "names": [
          "CreateViewEditExample"
        ],
        "line": 86
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 28
      }
    ],
    "src/stories/molecules/FieldSet/SelectField/SelectField.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Basic"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "WithHelperText"
        ],
        "line": 62
      },
      {
        "type": "direct",
        "names": [
          "WithError"
        ],
        "line": 74
      },
      {
        "type": "direct",
        "names": [
          "HorizontalLayout"
        ],
        "line": 88
      },
      {
        "type": "direct",
        "names": [
          "Searchable"
        ],
        "line": 101
      },
      {
        "type": "direct",
        "names": [
          "WithEnumData"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "AllowCustom"
        ],
        "line": 130
      },
      {
        "type": "direct",
        "names": [
          "Disabled"
        ],
        "line": 149
      },
      {
        "type": "direct",
        "names": [
          "Loading"
        ],
        "line": 161
      },
      {
        "type": "direct",
        "names": [
          "WithChildren"
        ],
        "line": 173
      },
      {
        "type": "direct",
        "names": [
          "FormExample"
        ],
        "line": 187
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 25
      }
    ],
    "src/stories/molecules/FileUpload/FileUpload.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 73
      },
      {
        "type": "direct",
        "names": [
          "WithLabel"
        ],
        "line": 104
      },
      {
        "type": "direct",
        "names": [
          "Multiple"
        ],
        "line": 123
      },
      {
        "type": "direct",
        "names": [
          "ImageUpload"
        ],
        "line": 142
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 163
      },
      {
        "type": "direct",
        "names": [
          "States"
        ],
        "line": 199
      },
      {
        "type": "direct",
        "names": [
          "FileTypes"
        ],
        "line": 232
      },
      {
        "type": "direct",
        "names": [
          "WithPreview"
        ],
        "line": 261
      },
      {
        "type": "direct",
        "names": [
          "FormExample"
        ],
        "line": 281
      },
      {
        "type": "direct",
        "names": [
          "CustomStyling"
        ],
        "line": 365
      },
      {
        "type": "direct",
        "names": [
          "AccessibilityDemo"
        ],
        "line": 395
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 70
      }
    ],
    "src/stories/molecules/GenericPieChart/GenericPieChart.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "BasicChart"
        ],
        "line": 41
      },
      {
        "type": "direct",
        "names": [
          "EducationalAttainment"
        ],
        "line": 55
      },
      {
        "type": "direct",
        "names": [
          "ReligionDistribution"
        ],
        "line": 70
      },
      {
        "type": "direct",
        "names": [
          "HousingTypes"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "WithCustomColors"
        ],
        "line": 99
      },
      {
        "type": "direct",
        "names": [
          "SingleCategory"
        ],
        "line": 111
      },
      {
        "type": "direct",
        "names": [
          "WithZeroValues"
        ],
        "line": 119
      },
      {
        "type": "direct",
        "names": [
          "EmptyData"
        ],
        "line": 133
      },
      {
        "type": "direct",
        "names": [
          "AllZeroValues"
        ],
        "line": 141
      },
      {
        "type": "direct",
        "names": [
          "ManyCategories"
        ],
        "line": 153
      },
      {
        "type": "direct",
        "names": [
          "SmallValues"
        ],
        "line": 172
      },
      {
        "type": "direct",
        "names": [
          "PercentageDisplay"
        ],
        "line": 184
      },
      {
        "type": "direct",
        "names": [
          "ResponsiveDisplay"
        ],
        "line": 198
      },
      {
        "type": "direct",
        "names": [
          "MultipleCharts"
        ],
        "line": 228
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 37
      }
    ],
    "src/stories/molecules/SearchBar/SearchBar.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "WithValue"
        ],
        "line": 63
      },
      {
        "type": "direct",
        "names": [
          "CustomIcon"
        ],
        "line": 81
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 111
      },
      {
        "type": "direct",
        "names": [
          "Variants"
        ],
        "line": 158
      },
      {
        "type": "direct",
        "names": [
          "States"
        ],
        "line": 205
      },
      {
        "type": "direct",
        "names": [
          "SearchExample"
        ],
        "line": 236
      },
      {
        "type": "direct",
        "names": [
          "FilterExample"
        ],
        "line": 333
      },
      {
        "type": "direct",
        "names": [
          "AccessibilityDemo"
        ],
        "line": 395
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 39
      }
    ],
    "src/stories/molecules/SexDistributionPieChart/SexDistributionPieChart.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "BalancedDistribution"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "MaleDominated"
        ],
        "line": 47
      },
      {
        "type": "direct",
        "names": [
          "FemaleDominated"
        ],
        "line": 58
      },
      {
        "type": "direct",
        "names": [
          "SmallBarangay"
        ],
        "line": 69
      },
      {
        "type": "direct",
        "names": [
          "LargeBarangay"
        ],
        "line": 80
      },
      {
        "type": "direct",
        "names": [
          "RuralAgricultural"
        ],
        "line": 91
      },
      {
        "type": "direct",
        "names": [
          "UrbanResidential"
        ],
        "line": 102
      },
      {
        "type": "direct",
        "names": [
          "FishingCommunity"
        ],
        "line": 113
      },
      {
        "type": "direct",
        "names": [
          "MiningCommunity"
        ],
        "line": 124
      },
      {
        "type": "direct",
        "names": [
          "TextileIndustry"
        ],
        "line": 135
      },
      {
        "type": "direct",
        "names": [
          "UniversityTown"
        ],
        "line": 146
      },
      {
        "type": "direct",
        "names": [
          "RetirementCommunity"
        ],
        "line": 157
      },
      {
        "type": "direct",
        "names": [
          "OFWSending"
        ],
        "line": 168
      },
      {
        "type": "direct",
        "names": [
          "MilitaryResidential"
        ],
        "line": 179
      },
      {
        "type": "direct",
        "names": [
          "HealthcareArea"
        ],
        "line": 190
      },
      {
        "type": "direct",
        "names": [
          "ConstructionDormitory"
        ],
        "line": 201
      },
      {
        "type": "direct",
        "names": [
          "BPOArea"
        ],
        "line": 212
      },
      {
        "type": "direct",
        "names": [
          "IndigenousCommunity"
        ],
        "line": 223
      },
      {
        "type": "direct",
        "names": [
          "TouristDestination"
        ],
        "line": 234
      },
      {
        "type": "direct",
        "names": [
          "FactoryTown"
        ],
        "line": 245
      },
      {
        "type": "direct",
        "names": [
          "OnlyMales"
        ],
        "line": 256
      },
      {
        "type": "direct",
        "names": [
          "OnlyFemales"
        ],
        "line": 267
      },
      {
        "type": "direct",
        "names": [
          "EmptyData"
        ],
        "line": 278
      },
      {
        "type": "direct",
        "names": [
          "PerfectBalance"
        ],
        "line": 289
      },
      {
        "type": "direct",
        "names": [
          "RegionalComparison"
        ],
        "line": 300
      },
      {
        "type": "direct",
        "names": [
          "EconomicTypeComparison"
        ],
        "line": 339
      },
      {
        "type": "direct",
        "names": [
          "AgeRelatedPatterns"
        ],
        "line": 392
      },
      {
        "type": "direct",
        "names": [
          "PopulationSizes"
        ],
        "line": 424
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 33
      }
    ],
    "src/stories/molecules/StatisticsChart/StatisticsChart.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "DependencyChart"
        ],
        "line": 61
      },
      {
        "type": "direct",
        "names": [
          "SexChart"
        ],
        "line": 69
      },
      {
        "type": "direct",
        "names": [
          "CivilStatusChart"
        ],
        "line": 77
      },
      {
        "type": "direct",
        "names": [
          "EmploymentChart"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "CompactVariant"
        ],
        "line": 94
      },
      {
        "type": "direct",
        "names": [
          "DetailedVariant"
        ],
        "line": 110
      },
      {
        "type": "direct",
        "names": [
          "PrimaryIntent"
        ],
        "line": 127
      },
      {
        "type": "direct",
        "names": [
          "SecondaryIntent"
        ],
        "line": 143
      },
      {
        "type": "direct",
        "names": [
          "EmbeddedIntent"
        ],
        "line": 159
      },
      {
        "type": "direct",
        "names": [
          "CompactPrimary"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "DetailedSecondary"
        ],
        "line": 193
      },
      {
        "type": "direct",
        "names": [
          "AllChartTypes"
        ],
        "line": 211
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 31
      }
    ],
    "src/stories/molecules/StatsCard/StatsCard.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "TotalPopulation"
        ],
        "line": 133
      },
      {
        "type": "direct",
        "names": [
          "TotalHouseholds"
        ],
        "line": 143
      },
      {
        "type": "direct",
        "names": [
          "LiteracyRate"
        ],
        "line": 153
      },
      {
        "type": "direct",
        "names": [
          "HealthFacilities"
        ],
        "line": 167
      },
      {
        "type": "direct",
        "names": [
          "AverageFamilyIncome"
        ],
        "line": 177
      },
      {
        "type": "direct",
        "names": [
          "UnemploymentRate"
        ],
        "line": 192
      },
      {
        "type": "direct",
        "names": [
          "PovertyIncidence"
        ],
        "line": 206
      },
      {
        "type": "direct",
        "names": [
          "EstablishedYear"
        ],
        "line": 221
      },
      {
        "type": "direct",
        "names": [
          "PrimaryColor"
        ],
        "line": 232
      },
      {
        "type": "direct",
        "names": [
          "SuccessColor"
        ],
        "line": 245
      },
      {
        "type": "direct",
        "names": [
          "WarningColor"
        ],
        "line": 258
      },
      {
        "type": "direct",
        "names": [
          "DangerColor"
        ],
        "line": 271
      },
      {
        "type": "direct",
        "names": [
          "SecondaryColor"
        ],
        "line": 284
      },
      {
        "type": "direct",
        "names": [
          "BarangayDashboard"
        ],
        "line": 295
      },
      {
        "type": "direct",
        "names": [
          "LoadingState"
        ],
        "line": 354
      },
      {
        "type": "direct",
        "names": [
          "ErrorState"
        ],
        "line": 365
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 45
      }
    ],
    "src/stories/molecules/SuccessModal/SuccessModal.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 42
      },
      {
        "type": "direct",
        "names": [
          "FormSubmitted"
        ],
        "line": 51
      },
      {
        "type": "direct",
        "names": [
          "DataSaved"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "AccountCreated"
        ],
        "line": 84
      },
      {
        "type": "direct",
        "names": [
          "FileUploaded"
        ],
        "line": 100
      },
      {
        "type": "direct",
        "names": [
          "EmailSent"
        ],
        "line": 116
      },
      {
        "type": "direct",
        "names": [
          "PaymentCompleted"
        ],
        "line": 132
      },
      {
        "type": "direct",
        "names": [
          "ProfileUpdated"
        ],
        "line": 148
      },
      {
        "type": "direct",
        "names": [
          "LongMessage"
        ],
        "line": 165
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 182
      },
      {
        "type": "direct",
        "names": [
          "MultipleSuccessTypes"
        ],
        "line": 213
      },
      {
        "type": "direct",
        "names": [
          "AutoClose"
        ],
        "line": 277
      },
      {
        "type": "direct",
        "names": [
          "Closed"
        ],
        "line": 317
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/molecules/ThemeToggle/ThemeToggle.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 90
      },
      {
        "type": "direct",
        "names": [
          "WithLabels"
        ],
        "line": 125
      },
      {
        "type": "direct",
        "names": [
          "Variants"
        ],
        "line": 187
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 240
      },
      {
        "type": "direct",
        "names": [
          "LabelPositions"
        ],
        "line": 293
      },
      {
        "type": "direct",
        "names": [
          "InNavigation"
        ],
        "line": 334
      },
      {
        "type": "direct",
        "names": [
          "AccessibilityDemo"
        ],
        "line": 380
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 86
      }
    ],
    "src/stories/molecules/VersionTag/VersionTag.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Development"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "Staging"
        ],
        "line": 69
      },
      {
        "type": "direct",
        "names": [
          "Production"
        ],
        "line": 91
      },
      {
        "type": "direct",
        "names": [
          "VersionOnly"
        ],
        "line": 115
      },
      {
        "type": "direct",
        "names": [
          "EnvironmentOnly"
        ],
        "line": 137
      },
      {
        "type": "direct",
        "names": [
          "AllPositions"
        ],
        "line": 158
      },
      {
        "type": "direct",
        "names": [
          "CustomStyling"
        ],
        "line": 186
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 37
      }
    ],
    "src/stories/organisms/CreateHouseholdModal/CreateHouseholdModal.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "Closed"
        ],
        "line": 85
      },
      {
        "type": "direct",
        "names": [
          "WithPrefilledData"
        ],
        "line": 115
      },
      {
        "type": "direct",
        "names": [
          "GeographicContextDemo"
        ],
        "line": 146
      },
      {
        "type": "direct",
        "names": [
          "FormValidationDemo"
        ],
        "line": 241
      },
      {
        "type": "direct",
        "names": [
          "MobileView"
        ],
        "line": 285
      },
      {
        "type": "direct",
        "names": [
          "LoadingStatesDemo"
        ],
        "line": 311
      },
      {
        "type": "direct",
        "names": [
          "RealWorldScenarios"
        ],
        "line": 384
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 44
      }
    ],
    "src/stories/organisms/DataTable/DataTable.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 185
      },
      {
        "type": "direct",
        "names": [
          "WithActions"
        ],
        "line": 199
      },
      {
        "type": "direct",
        "names": [
          "WithSelection"
        ],
        "line": 215
      },
      {
        "type": "direct",
        "names": [
          "WithPagination"
        ],
        "line": 236
      },
      {
        "type": "direct",
        "names": [
          "Loading"
        ],
        "line": 258
      },
      {
        "type": "direct",
        "names": [
          "EmptyState"
        ],
        "line": 273
      },
      {
        "type": "direct",
        "names": [
          "Sizes"
        ],
        "line": 294
      },
      {
        "type": "direct",
        "names": [
          "CustomRendering"
        ],
        "line": 322
      },
      {
        "type": "direct",
        "names": [
          "FullFeatured"
        ],
        "line": 393
      },
      {
        "type": "direct",
        "names": [
          "ResidentsTable"
        ],
        "line": 425
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 53
      }
    ],
    "src/stories/organisms/DevLogin/DevLogin.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 82
      },
      {
        "type": "direct",
        "names": [
          "CreatingUser"
        ],
        "line": 92
      },
      {
        "type": "direct",
        "names": [
          "UserAlreadyExists"
        ],
        "line": 115
      },
      {
        "type": "direct",
        "names": [
          "DatabaseError"
        ],
        "line": 134
      },
      {
        "type": "direct",
        "names": [
          "QuickLogin"
        ],
        "line": 153
      },
      {
        "type": "direct",
        "names": [
          "LoginError"
        ],
        "line": 176
      },
      {
        "type": "direct",
        "names": [
          "DevModeDisabled"
        ],
        "line": 197
      },
      {
        "type": "direct",
        "names": [
          "ConfigurationErrors"
        ],
        "line": 218
      },
      {
        "type": "direct",
        "names": [
          "SecurityWarning"
        ],
        "line": 235
      },
      {
        "type": "direct",
        "names": [
          "InteractiveSetup"
        ],
        "line": 253
      },
      {
        "type": "direct",
        "names": [
          "InteractiveQuickLogin"
        ],
        "line": 283
      },
      {
        "type": "direct",
        "names": [
          "InteractiveErrorHandling"
        ],
        "line": 311
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 79
      }
    ],
    "src/stories/organisms/Form/Household/HouseholdDetails/HouseholdDetails.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "FilledForm"
        ],
        "line": 79
      },
      {
        "type": "direct",
        "names": [
          "ViewMode"
        ],
        "line": 108
      },
      {
        "type": "direct",
        "names": [
          "WithErrors"
        ],
        "line": 137
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 26
      }
    ],
    "src/stories/organisms/Form/Household/HouseholdForm.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "CreateMode"
        ],
        "line": 36
      },
      {
        "type": "direct",
        "names": [
          "EditMode"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "ViewMode"
        ],
        "line": 86
      },
      {
        "type": "direct",
        "names": [
          "WithErrors"
        ],
        "line": 115
      },
      {
        "type": "direct",
        "names": [
          "LoadingState"
        ],
        "line": 144
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 32
      }
    ],
    "src/stories/organisms/Form/Resident/ContactInformation/ContactInformation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "WithData"
        ],
        "line": 60
      },
      {
        "type": "direct",
        "names": [
          "WithErrors"
        ],
        "line": 74
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 56
      },
      {
        "type": "direct",
        "names": [
          "WithSampleData"
        ],
        "line": 64
      },
      {
        "type": "direct",
        "names": [
          "WithValidationErrors"
        ],
        "line": 80
      },
      {
        "type": "direct",
        "names": [
          "RequiredFieldErrors"
        ],
        "line": 103
      },
      {
        "type": "direct",
        "names": [
          "EmailOnly"
        ],
        "line": 122
      },
      {
        "type": "direct",
        "names": [
          "MobileOnly"
        ],
        "line": 141
      },
      {
        "type": "direct",
        "names": [
          "PhoneAndMobile"
        ],
        "line": 160
      },
      {
        "type": "direct",
        "names": [
          "PhilippineFormats"
        ],
        "line": 180
      },
      {
        "type": "direct",
        "names": [
          "InternationalFormats"
        ],
        "line": 199
      },
      {
        "type": "direct",
        "names": [
          "BusinessContacts"
        ],
        "line": 218
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 238
      },
      {
        "type": "direct",
        "names": [
          "ProgressiveFilling"
        ],
        "line": 349
      },
      {
        "type": "direct",
        "names": [
          "ValidationPatterns"
        ],
        "line": 409
      },
      {
        "type": "direct",
        "names": [
          "CompactView"
        ],
        "line": 502
      },
      {
        "type": "direct",
        "names": [
          "MobileView"
        ],
        "line": 518
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 83
      },
      {
        "type": "direct",
        "names": [
          "WithSelectedHousehold"
        ],
        "line": 93
      },
      {
        "type": "direct",
        "names": [
          "WithValidationError"
        ],
        "line": 113
      },
      {
        "type": "direct",
        "names": [
          "InvalidHouseholdError"
        ],
        "line": 132
      },
      {
        "type": "direct",
        "names": [
          "LoadingHouseholds"
        ],
        "line": 154
      },
      {
        "type": "direct",
        "names": [
          "NoHouseholdsFound"
        ],
        "line": 171
      },
      {
        "type": "direct",
        "names": [
          "DifferentHouseholdTypes"
        ],
        "line": 189
      },
      {
        "type": "direct",
        "names": [
          "HouseholdsWithAddresses"
        ],
        "line": 227
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 262
      },
      {
        "type": "direct",
        "names": [
          "SearchScenarios"
        ],
        "line": 367
      },
      {
        "type": "direct",
        "names": [
          "LargeDataset"
        ],
        "line": 463
      },
      {
        "type": "direct",
        "names": [
          "QuickSelectionExamples"
        ],
        "line": 484
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 50
      }
    ],
    "src/stories/organisms/Form/Resident/MigrationInformation/MigrationInformation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 69
      },
      {
        "type": "direct",
        "names": [
          "CompleteMigration"
        ],
        "line": 77
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 64
      },
      {
        "type": "direct",
        "names": [
          "WithSampleData"
        ],
        "line": 72
      },
      {
        "type": "direct",
        "names": [
          "WithValidationErrors"
        ],
        "line": 88
      },
      {
        "type": "direct",
        "names": [
          "PartiallyFilled"
        ],
        "line": 116
      },
      {
        "type": "direct",
        "names": [
          "OnlyRequiredFields"
        ],
        "line": 140
      },
      {
        "type": "direct",
        "names": [
          "WithExtensionName"
        ],
        "line": 163
      },
      {
        "type": "direct",
        "names": [
          "MarriedResident"
        ],
        "line": 187
      },
      {
        "type": "direct",
        "names": [
          "SingleResident"
        ],
        "line": 210
      },
      {
        "type": "direct",
        "names": [
          "DualCitizen"
        ],
        "line": 233
      },
      {
        "type": "direct",
        "names": [
          "ForeignNational"
        ],
        "line": 256
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 280
      },
      {
        "type": "direct",
        "names": [
          "ProgressiveFilling"
        ],
        "line": 370
      },
      {
        "type": "direct",
        "names": [
          "CompactView"
        ],
        "line": 436
      },
      {
        "type": "direct",
        "names": [
          "MobileView"
        ],
        "line": 452
      },
      {
        "type": "direct",
        "names": [
          "LongNames"
        ],
        "line": 469
      },
      {
        "type": "direct",
        "names": [
          "MinimalData"
        ],
        "line": 492
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 59
      },
      {
        "type": "direct",
        "names": [
          "WithData"
        ],
        "line": 82
      },
      {
        "type": "direct",
        "names": [
          "WithErrors"
        ],
        "line": 105
      },
      {
        "type": "direct",
        "names": [
          "WithPsgcOptions"
        ],
        "line": 132
      },
      {
        "type": "direct",
        "names": [
          "PsgcLoading"
        ],
        "line": 166
      },
      {
        "type": "direct",
        "names": [
          "ProvincialBirthPlace"
        ],
        "line": 189
      },
      {
        "type": "direct",
        "names": [
          "MetroManilaBirthPlace"
        ],
        "line": 212
      },
      {
        "type": "direct",
        "names": [
          "ForeignBirthPlace"
        ],
        "line": 235
      },
      {
        "type": "direct",
        "names": [
          "OldBirthDate"
        ],
        "line": 258
      },
      {
        "type": "direct",
        "names": [
          "RecentBirthDate"
        ],
        "line": 281
      },
      {
        "type": "direct",
        "names": [
          "MixedErrorStates"
        ],
        "line": 304
      },
      {
        "type": "direct",
        "names": [
          "WithCustomStyling"
        ],
        "line": 330
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 55
      }
    ],
    "src/stories/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "Required"
        ],
        "line": 54
      },
      {
        "type": "direct",
        "names": [
          "WithValue"
        ],
        "line": 69
      },
      {
        "type": "direct",
        "names": [
          "WithError"
        ],
        "line": 84
      },
      {
        "type": "direct",
        "names": [
          "InvalidFormat"
        ],
        "line": 101
      },
      {
        "type": "direct",
        "names": [
          "Empty"
        ],
        "line": 117
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 134
      },
      {
        "type": "direct",
        "names": [
          "ProgressiveFilling"
        ],
        "line": 177
      },
      {
        "type": "direct",
        "names": [
          "InFormContext"
        ],
        "line": 221
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 42
      }
    ],
    "src/stories/organisms/Form/Resident/PersonalInformation/PersonalInformation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 65
      },
      {
        "type": "direct",
        "names": [
          "WithData"
        ],
        "line": 75
      },
      {
        "type": "direct",
        "names": [
          "WithErrors"
        ],
        "line": 101
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 40
      }
    ],
    "src/stories/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 69
      },
      {
        "type": "direct",
        "names": [
          "WithSampleData"
        ],
        "line": 77
      },
      {
        "type": "direct",
        "names": [
          "ShortNames"
        ],
        "line": 92
      },
      {
        "type": "direct",
        "names": [
          "LongNames"
        ],
        "line": 107
      },
      {
        "type": "direct",
        "names": [
          "WithValidationErrors"
        ],
        "line": 123
      },
      {
        "type": "direct",
        "names": [
          "PartiallyFilled"
        ],
        "line": 145
      },
      {
        "type": "direct",
        "names": [
          "CommonFilipinoNames"
        ],
        "line": 165
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 246
      },
      {
        "type": "direct",
        "names": [
          "ProgressiveFilling"
        ],
        "line": 371
      },
      {
        "type": "direct",
        "names": [
          "CulturalContext"
        ],
        "line": 431
      },
      {
        "type": "direct",
        "names": [
          "NamePatterns"
        ],
        "line": 464
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "WithSampleData"
        ],
        "line": 86
      },
      {
        "type": "direct",
        "names": [
          "WithCustomReligion"
        ],
        "line": 101
      },
      {
        "type": "direct",
        "names": [
          "WithValidationErrors"
        ],
        "line": 117
      },
      {
        "type": "direct",
        "names": [
          "PartiallyFilled"
        ],
        "line": 149
      },
      {
        "type": "direct",
        "names": [
          "DifferentBloodTypes"
        ],
        "line": 174
      },
      {
        "type": "direct",
        "names": [
          "DifferentEthnicities"
        ],
        "line": 237
      },
      {
        "type": "direct",
        "names": [
          "PhysicalMeasurements"
        ],
        "line": 300
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 376
      },
      {
        "type": "direct",
        "names": [
          "BMICalculator"
        ],
        "line": 500
      },
      {
        "type": "direct",
        "names": [
          "ValidationPatterns"
        ],
        "line": 567
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 70
      },
      {
        "type": "direct",
        "names": [
          "RegisteredVoter"
        ],
        "line": 78
      },
      {
        "type": "direct",
        "names": [
          "NonVoter"
        ],
        "line": 93
      },
      {
        "type": "direct",
        "names": [
          "PartialVoter"
        ],
        "line": 108
      },
      {
        "type": "direct",
        "names": [
          "WithValidationErrors"
        ],
        "line": 124
      },
      {
        "type": "direct",
        "names": [
          "InvalidYearError"
        ],
        "line": 145
      },
      {
        "type": "direct",
        "names": [
          "OldYearError"
        ],
        "line": 166
      },
      {
        "type": "direct",
        "names": [
          "VotingScenarios"
        ],
        "line": 188
      },
      {
        "type": "direct",
        "names": [
          "Interactive"
        ],
        "line": 275
      },
      {
        "type": "direct",
        "names": [
          "ElectionYears"
        ],
        "line": 400
      },
      {
        "type": "direct",
        "names": [
          "VotingEligibility"
        ],
        "line": 466
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 38
      }
    ],
    "src/stories/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 36
      },
      {
        "type": "direct",
        "names": [
          "WithSampleData"
        ],
        "line": 45
      },
      {
        "type": "direct",
        "names": [
          "WithErrors"
        ],
        "line": 68
      },
      {
        "type": "direct",
        "names": [
          "WithOtherReligion"
        ],
        "line": 103
      },
      {
        "type": "direct",
        "names": [
          "RegisteredVoter"
        ],
        "line": 126
      },
      {
        "type": "direct",
        "names": [
          "InternationalResident"
        ],
        "line": 149
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 32
      }
    ],
    "src/stories/organisms/Form/Resident/SectoralInformation/SectoralInformation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 36
      },
      {
        "type": "direct",
        "names": [
          "YoungProfessional"
        ],
        "line": 50
      },
      {
        "type": "direct",
        "names": [
          "SeniorCitizen"
        ],
        "line": 76
      },
      {
        "type": "direct",
        "names": [
          "OverseasFilipino"
        ],
        "line": 102
      },
      {
        "type": "direct",
        "names": [
          "SoloParentWithPWD"
        ],
        "line": 128
      },
      {
        "type": "direct",
        "names": [
          "OutOfSchoolYouth"
        ],
        "line": 154
      },
      {
        "type": "direct",
        "names": [
          "IndigenousPerson"
        ],
        "line": 180
      },
      {
        "type": "direct",
        "names": [
          "OutOfSchoolChild"
        ],
        "line": 206
      },
      {
        "type": "direct",
        "names": [
          "WithErrors"
        ],
        "line": 232
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 32
      }
    ],
    "src/stories/organisms/HouseholdsContent/HouseholdsContent.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 184
      },
      {
        "type": "direct",
        "names": [
          "LargeDataset"
        ],
        "line": 211
      },
      {
        "type": "direct",
        "names": [
          "EmptyState"
        ],
        "line": 249
      },
      {
        "type": "direct",
        "names": [
          "LoadingState"
        ],
        "line": 265
      },
      {
        "type": "direct",
        "names": [
          "ErrorState"
        ],
        "line": 282
      },
      {
        "type": "direct",
        "names": [
          "HouseholdsWithoutHeads"
        ],
        "line": 304
      },
      {
        "type": "direct",
        "names": [
          "MinimalAddressInfo"
        ],
        "line": 325
      },
      {
        "type": "direct",
        "names": [
          "MixedHouseholdData"
        ],
        "line": 348
      },
      {
        "type": "direct",
        "names": [
          "SearchFunctionality"
        ],
        "line": 377
      },
      {
        "type": "direct",
        "names": [
          "PaginationDemo"
        ],
        "line": 403
      },
      {
        "type": "direct",
        "names": [
          "RegionalDiversity"
        ],
        "line": 440
      },
      {
        "type": "direct",
        "names": [
          "DarkMode"
        ],
        "line": 499
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 27
      }
    ],
    "src/stories/organisms/LoginForm/LoginForm.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 86
      },
      {
        "type": "direct",
        "names": [
          "Loading"
        ],
        "line": 100
      },
      {
        "type": "direct",
        "names": [
          "WithValidationErrors"
        ],
        "line": 114
      },
      {
        "type": "direct",
        "names": [
          "InvalidCredentials"
        ],
        "line": 128
      },
      {
        "type": "direct",
        "names": [
          "EmailNotConfirmed"
        ],
        "line": 149
      },
      {
        "type": "direct",
        "names": [
          "NetworkError"
        ],
        "line": 170
      },
      {
        "type": "direct",
        "names": [
          "SuccessfulLogin"
        ],
        "line": 191
      },
      {
        "type": "direct",
        "names": [
          "CustomClassName"
        ],
        "line": 210
      },
      {
        "type": "direct",
        "names": [
          "CustomRedirect"
        ],
        "line": 225
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 83
      }
    ],
    "src/stories/organisms/Navigation/Navigation.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 97
      },
      {
        "type": "direct",
        "names": [
          "WithActiveItem"
        ],
        "line": 112
      },
      {
        "type": "direct",
        "names": [
          "WithSubmenus"
        ],
        "line": 132
      },
      {
        "type": "direct",
        "names": [
          "Minimal"
        ],
        "line": 165
      },
      {
        "type": "direct",
        "names": [
          "CompactLayout"
        ],
        "line": 181
      },
      {
        "type": "direct",
        "names": [
          "BarangayNavigation"
        ],
        "line": 203
      },
      {
        "type": "direct",
        "names": [
          "MobileNavigation"
        ],
        "line": 265
      },
      {
        "type": "direct",
        "names": [
          "WithNotifications"
        ],
        "line": 292
      },
      {
        "type": "direct",
        "names": [
          "DarkTheme"
        ],
        "line": 341
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 51
      }
    ],
    "src/stories/organisms/PopulationPyramid/PopulationPyramid.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "TypicalBarangay"
        ],
        "line": 37
      },
      {
        "type": "direct",
        "names": [
          "YoungPopulation"
        ],
        "line": 66
      },
      {
        "type": "direct",
        "names": [
          "AgingPopulation"
        ],
        "line": 91
      },
      {
        "type": "direct",
        "names": [
          "UrbanProfessional"
        ],
        "line": 117
      },
      {
        "type": "direct",
        "names": [
          "RuralAgricultural"
        ],
        "line": 141
      },
      {
        "type": "direct",
        "names": [
          "MiningCommunity"
        ],
        "line": 166
      },
      {
        "type": "direct",
        "names": [
          "UniversityArea"
        ],
        "line": 189
      },
      {
        "type": "direct",
        "names": [
          "IslandCommunity"
        ],
        "line": 210
      },
      {
        "type": "direct",
        "names": [
          "EmptyData"
        ],
        "line": 233
      },
      {
        "type": "direct",
        "names": [
          "SingleAgeGroup"
        ],
        "line": 240
      },
      {
        "type": "direct",
        "names": [
          "WithZeroValues"
        ],
        "line": 249
      },
      {
        "type": "direct",
        "names": [
          "RegionalComparison"
        ],
        "line": 266
      },
      {
        "type": "direct",
        "names": [
          "CommunityTypes"
        ],
        "line": 319
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 33
      }
    ],
    "src/stories/organisms/ProtectedRoute/ProtectedRoute.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "AuthenticationLoading"
        ],
        "line": 133
      },
      {
        "type": "direct",
        "names": [
          "ProfileLoading"
        ],
        "line": 146
      },
      {
        "type": "direct",
        "names": [
          "NotAuthenticated"
        ],
        "line": 164
      },
      {
        "type": "direct",
        "names": [
          "AuthenticatedUserAccess"
        ],
        "line": 177
      },
      {
        "type": "direct",
        "names": [
          "RoleBasedAccessGranted"
        ],
        "line": 210
      },
      {
        "type": "direct",
        "names": [
          "RoleBasedAccessDenied"
        ],
        "line": 245
      },
      {
        "type": "direct",
        "names": [
          "PermissionBasedAccessGranted"
        ],
        "line": 280
      },
      {
        "type": "direct",
        "names": [
          "PermissionBasedAccessDenied"
        ],
        "line": 315
      },
      {
        "type": "direct",
        "names": [
          "ProfileLoadingError"
        ],
        "line": 350
      },
      {
        "type": "direct",
        "names": [
          "CustomFallback"
        ],
        "line": 370
      },
      {
        "type": "direct",
        "names": [
          "CustomLoadingComponent"
        ],
        "line": 396
      },
      {
        "type": "direct",
        "names": [
          "InteractiveRoleHierarchy"
        ],
        "line": 419
      },
      {
        "type": "direct",
        "names": [
          "InteractivePermissionMatrix"
        ],
        "line": 476
      },
      {
        "type": "direct",
        "names": [
          "InteractiveSecurityTesting"
        ],
        "line": 535
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 130
      }
    ],
    "src/stories/organisms/Sidebar/Sidebar.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 159
      },
      {
        "type": "direct",
        "names": [
          "Collapsed"
        ],
        "line": 192
      },
      {
        "type": "direct",
        "names": [
          "IconOnly"
        ],
        "line": 201
      },
      {
        "type": "direct",
        "names": [
          "Wide"
        ],
        "line": 211
      },
      {
        "type": "direct",
        "names": [
          "Fixed"
        ],
        "line": 220
      },
      {
        "type": "direct",
        "names": [
          "NoIcons"
        ],
        "line": 243
      },
      {
        "type": "direct",
        "names": [
          "NoSubmenus"
        ],
        "line": 252
      },
      {
        "type": "direct",
        "names": [
          "CustomContent"
        ],
        "line": 261
      },
      {
        "type": "direct",
        "names": [
          "MobileOverlay"
        ],
        "line": 311
      },
      {
        "type": "direct",
        "names": [
          "GovernmentTheme"
        ],
        "line": 340
      },
      {
        "type": "direct",
        "names": [
          "DarkMode"
        ],
        "line": 432
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 155
      }
    ],
    "src/stories/organisms/Table/Table.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "BasicTable"
        ],
        "line": 72
      },
      {
        "type": "direct",
        "names": [
          "WithCheckboxes"
        ],
        "line": 106
      },
      {
        "type": "direct",
        "names": [
          "WithActions"
        ],
        "line": 193
      },
      {
        "type": "direct",
        "names": [
          "WithControls"
        ],
        "line": 234
      },
      {
        "type": "direct",
        "names": [
          "ResidentsTable"
        ],
        "line": 370
      },
      {
        "type": "direct",
        "names": [
          "EmptyState"
        ],
        "line": 493
      },
      {
        "type": "direct",
        "names": [
          "CustomStyling"
        ],
        "line": 529
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 41
      }
    ],
    "src/stories/organisms/UserProfile/UserProfile.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "LoadingState"
        ],
        "line": 167
      },
      {
        "type": "direct",
        "names": [
          "ProfileLoadingState"
        ],
        "line": 181
      },
      {
        "type": "direct",
        "names": [
          "NoUserAuthenticated"
        ],
        "line": 200
      },
      {
        "type": "direct",
        "names": [
          "BarangayCaptainProfile"
        ],
        "line": 214
      },
      {
        "type": "direct",
        "names": [
          "BarangayClerkProfile"
        ],
        "line": 228
      },
      {
        "type": "direct",
        "names": [
          "DataEncoderProfile"
        ],
        "line": 242
      },
      {
        "type": "direct",
        "names": [
          "CompactProfileView"
        ],
        "line": 256
      },
      {
        "type": "direct",
        "names": [
          "CompactWithDropdown"
        ],
        "line": 270
      },
      {
        "type": "direct",
        "names": [
          "WithoutBarangayAssignment"
        ],
        "line": 284
      },
      {
        "type": "direct",
        "names": [
          "HideBarangayInfo"
        ],
        "line": 306
      },
      {
        "type": "direct",
        "names": [
          "CustomClassName"
        ],
        "line": 320
      },
      {
        "type": "direct",
        "names": [
          "SignOutAction"
        ],
        "line": 335
      },
      {
        "type": "direct",
        "names": [
          "InteractiveDropdownNavigation"
        ],
        "line": 358
      },
      {
        "type": "direct",
        "names": [
          "InteractiveRoleComparison"
        ],
        "line": 396
      },
      {
        "type": "direct",
        "names": [
          "InteractiveBarangayManagement"
        ],
        "line": 460
      },
      {
        "type": "direct",
        "names": [
          "InteractiveAccessibilityTesting"
        ],
        "line": 523
      },
      {
        "type": "direct",
        "names": [
          "InteractiveSecurityScenarios"
        ],
        "line": 573
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 164
      }
    ],
    "src/stories/templates/AppShell/AppShell.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 256
      },
      {
        "type": "direct",
        "names": [
          "DesktopView"
        ],
        "line": 263
      },
      {
        "type": "direct",
        "names": [
          "TabletView"
        ],
        "line": 275
      },
      {
        "type": "direct",
        "names": [
          "MobileView"
        ],
        "line": 287
      },
      {
        "type": "direct",
        "names": [
          "ResidentsPage"
        ],
        "line": 305
      },
      {
        "type": "direct",
        "names": [
          "ReportsPage"
        ],
        "line": 320
      },
      {
        "type": "direct",
        "names": [
          "LayoutFeatures"
        ],
        "line": 335
      },
      {
        "type": "direct",
        "names": [
          "WithDarkBackground"
        ],
        "line": 443
      },
      {
        "type": "direct",
        "names": [
          "LayoutStructure"
        ],
        "line": 460
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 20
      }
    ],
    "src/stories/templates/DashboardLayout/DashboardLayout.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 351
      },
      {
        "type": "direct",
        "names": [
          "WithSearch"
        ],
        "line": 360
      },
      {
        "type": "direct",
        "names": [
          "ResidentsPage"
        ],
        "line": 439
      },
      {
        "type": "direct",
        "names": [
          "MobileView"
        ],
        "line": 456
      },
      {
        "type": "direct",
        "names": [
          "TabletView"
        ],
        "line": 476
      },
      {
        "type": "direct",
        "names": [
          "UserDropdownShowcase"
        ],
        "line": 496
      },
      {
        "type": "direct",
        "names": [
          "EnvironmentIndicator"
        ],
        "line": 576
      },
      {
        "type": "direct",
        "names": [
          "LayoutFeatures"
        ],
        "line": 661
      },
      {
        "type": "direct",
        "names": [
          "WithDarkBackground"
        ],
        "line": 831
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 96
      }
    ],
    "src/stories/templates/Header/Header.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 92
      },
      {
        "type": "direct",
        "names": [
          "Unauthenticated"
        ],
        "line": 122
      },
      {
        "type": "direct",
        "names": [
          "LoadingState"
        ],
        "line": 156
      },
      {
        "type": "direct",
        "names": [
          "AdminUser"
        ],
        "line": 188
      },
      {
        "type": "direct",
        "names": [
          "MobileView"
        ],
        "line": 234
      },
      {
        "type": "direct",
        "names": [
          "TabletView"
        ],
        "line": 284
      },
      {
        "type": "direct",
        "names": [
          "NavigationShowcase"
        ],
        "line": 340
      },
      {
        "type": "direct",
        "names": [
          "BrandIdentity"
        ],
        "line": 472
      },
      {
        "type": "direct",
        "names": [
          "HeaderOnly"
        ],
        "line": 576
      },
      {
        "type": "direct",
        "names": [
          "WithDarkBackground"
        ],
        "line": 593
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 69
      }
    ],
    "src/stories/templates/MainLayout/MainLayout.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 305
      },
      {
        "type": "direct",
        "names": [
          "WithTitle"
        ],
        "line": 312
      },
      {
        "type": "direct",
        "names": [
          "RichContentExample"
        ],
        "line": 327
      },
      {
        "type": "direct",
        "names": [
          "FormLayout"
        ],
        "line": 343
      },
      {
        "type": "direct",
        "names": [
          "MobileView"
        ],
        "line": 359
      },
      {
        "type": "direct",
        "names": [
          "TabletView"
        ],
        "line": 377
      },
      {
        "type": "direct",
        "names": [
          "MinimalContent"
        ],
        "line": 396
      },
      {
        "type": "direct",
        "names": [
          "LongContent"
        ],
        "line": 435
      },
      {
        "type": "direct",
        "names": [
          "LayoutStructure"
        ],
        "line": 485
      },
      {
        "type": "direct",
        "names": [
          "WithoutTitle"
        ],
        "line": 543
      },
      {
        "type": "direct",
        "names": [
          "WithDarkBackground"
        ],
        "line": 571
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 77
      }
    ],
    "src/stories/templates/ResidentForm/ResidentForm.stories.tsx": [
      {
        "type": "direct",
        "names": [
          "Default"
        ],
        "line": 192
      },
      {
        "type": "direct",
        "names": [
          "PreFilledForm"
        ],
        "line": 225
      },
      {
        "type": "direct",
        "names": [
          "FemaleResident"
        ],
        "line": 277
      },
      {
        "type": "direct",
        "names": [
          "SeniorCitizen"
        ],
        "line": 324
      },
      {
        "type": "direct",
        "names": [
          "YoungProfessional"
        ],
        "line": 372
      },
      {
        "type": "direct",
        "names": [
          "ValidationErrors"
        ],
        "line": 419
      },
      {
        "type": "direct",
        "names": [
          "SearchLoadingStates"
        ],
        "line": 449
      },
      {
        "type": "direct",
        "names": [
          "APIErrors"
        ],
        "line": 492
      },
      {
        "type": "direct",
        "names": [
          "SubmissionLoading"
        ],
        "line": 528
      },
      {
        "type": "direct",
        "names": [
          "WithoutCancelButton"
        ],
        "line": 567
      },
      {
        "type": "direct",
        "names": [
          "MobileView"
        ],
        "line": 586
      },
      {
        "type": "direct",
        "names": [
          "DarkMode"
        ],
        "line": 614
      },
      {
        "type": "default",
        "names": [
          "meta"
        ],
        "line": 44
      }
    ],
    "src/types/api.ts": [
      {
        "type": "direct",
        "names": [
          "isApiSuccess"
        ],
        "line": 410
      },
      {
        "type": "direct",
        "names": [
          "isApiError"
        ],
        "line": 417
      },
      {
        "type": "direct",
        "names": [
          "isValidationError"
        ],
        "line": 424
      },
      {
        "type": "direct",
        "names": [
          "isRateLimitError"
        ],
        "line": 431
      },
      {
        "type": "direct",
        "names": [
          "isAuthError"
        ],
        "line": 438
      }
    ],
    "src/types/auth.ts": [
      {
        "type": "direct",
        "names": [
          "DEFAULT_ROLES"
        ],
        "line": 417
      },
      {
        "type": "direct",
        "names": [
          "PERMISSION_ACTIONS"
        ],
        "line": 428
      },
      {
        "type": "direct",
        "names": [
          "RESOURCE_TYPES"
        ],
        "line": 441
      }
    ],
    "src/types/charts.ts": [],
    "src/types/components/command-menu.ts": [],
    "src/types/components/form-field.ts": [],
    "src/types/components/index.ts": [],
    "src/types/database.ts": [],
    "src/types/forms.ts": [],
    "src/types/geographic.ts": [
      {
        "type": "direct",
        "names": [
          "SUBDIVISION_TYPES"
        ],
        "line": 239
      },
      {
        "type": "direct",
        "names": [
          "GEOGRAPHIC_LEVELS"
        ],
        "line": 246
      }
    ],
    "src/types/households.ts": [
      {
        "type": "direct",
        "names": [
          "HOUSEHOLD_TYPE_OPTIONS"
        ],
        "line": 222
      },
      {
        "type": "direct",
        "names": [
          "TENURE_STATUS_OPTIONS"
        ],
        "line": 232
      },
      {
        "type": "direct",
        "names": [
          "INCOME_CLASS_OPTIONS"
        ],
        "line": 241
      },
      {
        "type": "direct",
        "names": [
          "HOUSEHOLD_UNIT_OPTIONS"
        ],
        "line": 252
      }
    ],
    "src/types/index.ts": [
      {
        "type": "named",
        "names": [
          "DEFAULT_ROLES",
          "PERMISSION_ACTIONS",
          "RESOURCE_TYPES"
        ],
        "line": 57
      },
      {
        "type": "named",
        "names": [
          "SEX_OPTIONS",
          "CIVIL_STATUS_OPTIONS",
          "CITIZENSHIP_OPTIONS",
          "EDUCATION_LEVEL_OPTIONS",
          "EMPLOYMENT_STATUS_OPTIONS",
          "BLOOD_TYPE_OPTIONS",
          "RELIGION_OPTIONS",
          "ETHNICITY_OPTIONS",
          "BIRTH_PLACE_LEVEL_OPTIONS"
        ],
        "line": 101
      },
      {
        "type": "named",
        "names": [
          "HOUSEHOLD_TYPE_OPTIONS",
          "TENURE_STATUS_OPTIONS",
          "INCOME_CLASS_OPTIONS"
        ],
        "line": 131
      },
      {
        "type": "named",
        "names": [
          "isApiSuccess",
          "isApiError",
          "isValidationError",
          "isRateLimitError",
          "isAuthError"
        ],
        "line": 185
      },
      {
        "type": "direct",
        "names": [
          "isDefined"
        ],
        "line": 341
      },
      {
        "type": "direct",
        "names": [
          "isNotEmpty"
        ],
        "line": 348
      },
      {
        "type": "direct",
        "names": [
          "isNotEmptyArray"
        ],
        "line": 355
      }
    ],
    "src/types/relationships.ts": [],
    "src/types/resident-form.ts": [
      {
        "type": "direct",
        "names": [
          "SEX_OPTIONS"
        ],
        "line": 255
      },
      {
        "type": "direct",
        "names": [
          "CIVIL_STATUS_OPTIONS"
        ],
        "line": 260
      },
      {
        "type": "direct",
        "names": [
          "CITIZENSHIP_OPTIONS"
        ],
        "line": 269
      },
      {
        "type": "direct",
        "names": [
          "EDUCATION_LEVEL_OPTIONS"
        ],
        "line": 275
      },
      {
        "type": "direct",
        "names": [
          "EMPLOYMENT_STATUS_OPTIONS"
        ],
        "line": 283
      },
      {
        "type": "direct",
        "names": [
          "BLOOD_TYPE_OPTIONS"
        ],
        "line": 296
      },
      {
        "type": "direct",
        "names": [
          "RELIGION_OPTIONS"
        ],
        "line": 308
      },
      {
        "type": "direct",
        "names": [
          "ETHNICITY_OPTIONS"
        ],
        "line": 323
      },
      {
        "type": "direct",
        "names": [
          "BIRTH_PLACE_LEVEL_OPTIONS"
        ],
        "line": 369
      }
    ],
    "src/types/residents.ts": [
      {
        "type": "direct",
        "names": [
          "SEX_OPTIONS"
        ],
        "line": 551
      },
      {
        "type": "direct",
        "names": [
          "CIVIL_STATUS_OPTIONS"
        ],
        "line": 558
      },
      {
        "type": "direct",
        "names": [
          "CITIZENSHIP_OPTIONS"
        ],
        "line": 567
      },
      {
        "type": "direct",
        "names": [
          "EDUCATION_LEVEL_OPTIONS"
        ],
        "line": 573
      },
      {
        "type": "direct",
        "names": [
          "EMPLOYMENT_STATUS_OPTIONS"
        ],
        "line": 581
      },
      {
        "type": "direct",
        "names": [
          "BLOOD_TYPE_OPTIONS"
        ],
        "line": 594
      },
      {
        "type": "direct",
        "names": [
          "RELIGION_OPTIONS"
        ],
        "line": 605
      },
      {
        "type": "direct",
        "names": [
          "ETHNICITY_OPTIONS"
        ],
        "line": 619
      },
      {
        "type": "direct",
        "names": [
          "BIRTH_PLACE_LEVEL_OPTIONS"
        ],
        "line": 665
      }
    ],
    "src/utils/index.ts": [
      {
        "type": "named",
        "names": [
          "capitalize",
          "toTitleCase",
          "truncateText",
          "sanitizeString",
          "// isValidEmail",
          "- REMOVED: Use @/lib/validation/utilities instead\n  // isValidPhilippineMobile",
          "- REMOVED: Use @/lib/validation/utilities instead\n  formatPhoneNumber",
          ""
        ],
        "line": 9
      },
      {
        "type": "named",
        "names": [
          "isEmpty",
          "deepClone",
          "groupBy",
          "removeDuplicates",
          "sortBy",
          "formatCurrency",
          "formatDate",
          "parseQueryString",
          "buildQueryString",
          ""
        ],
        "line": 20
      },
      {
        "type": "named",
        "names": [
          "generateId",
          "generateFieldId",
          "getFieldId",
          "getFieldIds",
          "buildAriaDescribedBy",
          "buildAriaLabelledBy",
          ""
        ],
        "line": 33
      },
      {
        "type": "named",
        "names": [
          "debounce",
          "throttle",
          "sleep",
          "retry",
          ""
        ],
        "line": 43
      },
      {
        "type": "named",
        "names": [
          "cn",
          "// mergeClassNames - REMOVED: Use `cn` instead"
        ],
        "line": 51
      }
    ],
    "src/utils/validation-utilities.ts": [
      {
        "type": "direct",
        "names": [
          "createValidationState"
        ],
        "line": 46
      },
      {
        "type": "direct",
        "names": [
          "useValidationState"
        ],
        "line": 57
      },
      {
        "type": "direct",
        "names": [
          "createFormValidationExecutor"
        ],
        "line": 144
      },
      {
        "type": "direct",
        "names": [
          "createFieldValidationExecutor"
        ],
        "line": 166
      },
      {
        "type": "direct",
        "names": [
          "validationUtils"
        ],
        "line": 187
      },
      {
        "type": "direct",
        "names": [
          "createValidationHook"
        ],
        "line": 347
      },
      {
        "type": "direct",
        "names": [
          "asyncValidationUtils"
        ],
        "line": 379
      }
    ]
  },
  "unused": [
    {
      "file": "src/app/(dashboard)/households/page.tsx",
      "imports": [
        {
          "name": "type Household",
          "from": "@/hooks/crud/useHouseholds",
          "line": 6,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/app/(dashboard)/residents/[id]/page.tsx",
      "imports": [
        {
          "name": "PersonalInformationForm",
          "from": "@/components",
          "line": 7,
          "type": "named"
        },
        {
          "name": "InputField",
          "from": "@/components",
          "line": 10,
          "type": "named"
        },
        {
          "name": "SEX_OPTIONS",
          "from": "@/lib/constants/resident-enums",
          "line": 23,
          "type": "named"
        },
        {
          "name": "CIVIL_STATUS_OPTIONS",
          "from": "@/lib/constants/resident-enums",
          "line": 23,
          "type": "named"
        },
        {
          "name": "CITIZENSHIP_OPTIONS",
          "from": "@/lib/constants/resident-enums",
          "line": 23,
          "type": "named"
        },
        {
          "name": "EDUCATION_LEVEL_OPTIONS",
          "from": "@/lib/constants/resident-enums",
          "line": 23,
          "type": "named"
        },
        {
          "name": "EDUCATION_STATUS_OPTIONS",
          "from": "@/lib/constants/resident-enums",
          "line": 23,
          "type": "named"
        },
        {
          "name": "EMPLOYMENT_STATUS_OPTIONS",
          "from": "@/lib/constants/resident-enums",
          "line": 23,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/app/(dashboard)/residents/create/page.tsx",
      "imports": [
        {
          "name": "EducationLevelEnum",
          "from": "@/types",
          "line": 8,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/app/(dashboard)/residents/page.tsx",
      "imports": [
        {
          "name": "type Resident",
          "from": "@/hooks/crud/useResidents",
          "line": 9,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/app/(dashboard)/test-loading/page.tsx",
      "imports": [
        {
          "name": "useEffect",
          "from": "react",
          "line": 9,
          "type": "named"
        },
        {
          "name": "useState",
          "from": "react",
          "line": 9,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/app/api/auth/create-profile/route.ts",
      "imports": [
        {
          "name": "getErrorMessage",
          "from": "@/lib/auth-errors",
          "line": 4,
          "type": "named"
        },
        {
          "name": "getStatusCodeForError",
          "from": "@/lib/auth-errors",
          "line": 4,
          "type": "named"
        },
        {
          "name": "DatabaseResponse",
          "from": "@/lib/auth-errors",
          "line": 4,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/app/api/residents/route.ts",
      "imports": [
        {
          "name": "applyGeographicFilter",
          "from": "@/lib",
          "line": 7,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/app/offline/page.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/app/signup/page.tsx",
      "imports": [
        {
          "name": "getErrorMessage",
          "from": "@/lib/auth-errors",
          "line": 9,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/atoms/Button/Button.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 30,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/atoms/Chart/ChartEmptyState/ChartEmptyState.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/atoms/Chart/ChartTooltip/ChartTooltip.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/atoms/Field/Control/Checkbox/Checkbox.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 4,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/atoms/Field/Control/Control.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 4,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/atoms/Field/Control/Radio/Radio.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 4,
          "type": "named"
        },
        {
          "name": "type ButtonProps",
          "from": "@/components/atoms/Button/Button",
          "line": 7,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/atoms/Field/Control/TitleDescription.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 4,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/atoms/Field/Control/Toggle/Toggle.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 4,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/atoms/Link/Link.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 31,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/molecules/CivilStatusPieChart/CivilStatusPieChart.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/molecules/CommandMenu/CommandMenu.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 5,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/molecules/CommandMenu/CommandMenuGroup.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/molecules/CommandMenu/CommandMenuItem.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 4,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/molecules/CommandMenu/InlineCommandMenu.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 4,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/molecules/DependencyRatioPieChart/DependencyRatioPieChart.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/molecules/EmploymentStatusPieChart/EmploymentStatusPieChart.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/molecules/ErrorModal/ErrorModal.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/molecules/FileUpload/FileUpload.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 4,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/molecules/PWADevTools/PWADevTools.tsx",
      "imports": [
        {
          "name": "offlineStorage",
          "from": "@/lib/data",
          "line": 6,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/molecules/PWAInstallPrompt/PWAInstallPrompt.tsx",
      "imports": [
        {
          "name": "type UserBehaviorMetrics",
          "from": "@/lib/analytics/user-behavior",
          "line": 6,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/molecules/SearchBar/SearchBar.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 4,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/molecules/SexDistributionPieChart/SexDistributionPieChart.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/molecules/StatisticsChart/StatisticsChart.tsx",
      "imports": [
        {
          "name": "type ChartType",
          "from": "@/lib/charts",
          "line": 5,
          "type": "named"
        },
        {
          "name": "type DependencyData",
          "from": "@/lib/charts",
          "line": 5,
          "type": "named"
        },
        {
          "name": "type SexData",
          "from": "@/lib/charts",
          "line": 5,
          "type": "named"
        },
        {
          "name": "type CivilStatusData",
          "from": "@/lib/charts",
          "line": 5,
          "type": "named"
        },
        {
          "name": "type EmploymentStatusData",
          "from": "@/lib/charts",
          "line": 5,
          "type": "named"
        },
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/molecules/SuccessModal/SuccessModal.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 3,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/molecules/ThemeToggle/ThemeToggle.tsx",
      "imports": [
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 5,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/components/organisms/CreateHouseholdModal/HouseholdAddressForm.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 6,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/CreateHouseholdModal/HouseholdLocationInfo.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 6,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Household/HouseholdDetails/FormField/HouseholdTypeInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Household/HouseholdDetails/FormField/IncomeAndHeadInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Household/HouseholdDetails/HouseholdDetails.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Household/LocationAndDemographics/FormField/AddressInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Household/LocationAndDemographics/FormField/DemographicsInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Household/LocationAndDemographics/LocationAndDemographics.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/ContactInformation/ContactInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/ContactInformation/FormField/ContactDetails.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/ContactInformation/FormField/HouseholdInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PersonalInformation/FormField/BasicInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PersonalInformation/FormField/BirthInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PersonalInformation/FormField/EducationInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PersonalInformation/FormField/EmploymentInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PersonalInformation/FormField/PhilSysCardField.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PersonalInformation/PersonalInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/MotherMaidenName.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/PhysicalCharacteristics.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PhysicalPersonalDetails/FormField/VotingInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/PhysicalPersonalDetails/PhysicalPersonalDetails.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Form/Resident/SectoralInformation/SectoralInformation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 1,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Navigation/Navigation.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 8,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/components/organisms/Sidebar/Sidebar.tsx",
      "imports": [
        {
          "name": "usePathname",
          "from": "next/navigation",
          "line": 11,
          "type": "named"
        },
        {
          "name": "type VariantProps",
          "from": "class-variance-authority",
          "line": 12,
          "type": "named"
        },
        {
          "name": "Link",
          "from": "next/link",
          "line": 10,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/hooks/command-menu/useCommandMenuRecents.ts",
      "imports": [
        {
          "name": "getRecentApiItems as getRecentItems",
          "from": "@/lib/command-menu",
          "line": 13,
          "type": "named"
        },
        {
          "name": "clearRecentApiItems as clearRecentItems",
          "from": "@/lib/command-menu",
          "line": 13,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/command-menu/useCommandMenuWithApi.ts",
      "imports": [
        {
          "name": "type UseCommandMenuSearchReturn",
          "from": "./useCommandMenuSearch",
          "line": 19,
          "type": "named"
        },
        {
          "name": "type UseCommandMenuRecentsReturn",
          "from": "./useCommandMenuRecents",
          "line": 23,
          "type": "named"
        },
        {
          "name": "type UseCommandMenuActionsReturn",
          "from": "./useCommandMenuActions",
          "line": 27,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/dashboard/useDashboard.ts",
      "imports": [
        {
          "name": "type DashboardResponse",
          "from": "./useDashboardApi",
          "line": 15,
          "type": "named"
        },
        {
          "name": "type DashboardStats",
          "from": "./useDashboardApi",
          "line": 15,
          "type": "named"
        },
        {
          "name": "type AgeGroup",
          "from": "./useDashboardApi",
          "line": 15,
          "type": "named"
        },
        {
          "name": "type UseDashboardCalculationsReturn",
          "from": "./useDashboardCalculations",
          "line": 21,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/search/useGenericSearch.ts",
      "imports": [
        {
          "name": "useMemo",
          "from": "react",
          "line": 10,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/search/useOptimizedPsgcSearch.ts",
      "imports": [
        {
          "name": "searchFormatters",
          "from": "@/lib/utilities/search-utilities",
          "line": 12,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/ui/useCommandMenuWithApi.ts",
      "imports": [
        {
          "name": "getAllCommandMenuItems",
          "from": "@/lib/command-menu/items-utils",
          "line": 7,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/utilities/createValidationHook.ts",
      "imports": [
        {
          "name": "useMemo",
          "from": "react",
          "line": 10,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/utilities/useAsyncErrorBoundary.ts",
      "imports": [
        {
          "name": "RetryStrategies",
          "from": "./useRetryLogic",
          "line": 11,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/utilities/useFormSubmission.ts",
      "imports": [
        {
          "name": "createFormSubmitHandler",
          "from": "@/lib/forms",
          "line": 8,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/utilities/useResidentAsyncValidation.ts",
      "imports": [
        {
          "name": "asyncValidationUtils",
          "from": "@/lib/validation/utilities",
          "line": 11,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/utilities/useUserBarangay.ts",
      "imports": [
        {
          "name": "type AddressHierarchy",
          "from": "@/lib/database",
          "line": 5,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/validation/useGenericValidation.ts",
      "imports": [
        {
          "name": "useCallback",
          "from": "react",
          "line": 10,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/validation/useOptimizedResidentValidation.ts",
      "imports": [
        {
          "name": "REQUIRED_FIELDS",
          "from": "@/lib/validation/fieldLevelSchemas",
          "line": 18,
          "type": "named"
        },
        {
          "name": "type ResidentValidationOptions",
          "from": "./useResidentValidationCore",
          "line": 19,
          "type": "named"
        },
        {
          "name": "type UseResidentValidationCoreReturn",
          "from": "./useResidentValidationCore",
          "line": 19,
          "type": "named"
        },
        {
          "name": "type UseResidentCrossFieldValidationReturn",
          "from": "../utilities/useResidentCrossFieldValidation",
          "line": 24,
          "type": "named"
        },
        {
          "name": "type UseResidentAsyncValidationReturn",
          "from": "../utilities/useResidentAsyncValidation",
          "line": 28,
          "type": "named"
        },
        {
          "name": "type UseResidentValidationProgressReturn",
          "from": "./useResidentValidationProgress",
          "line": 32,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/validation/useResidentValidationCore.ts",
      "imports": [
        {
          "name": "ResidentFormSchema",
          "from": "@/lib/validation",
          "line": 12,
          "type": "named"
        },
        {
          "name": "getFormToSchemaFieldMapping",
          "from": "@/services/residentMapper",
          "line": 13,
          "type": "named"
        },
        {
          "name": "getSchemaToFormFieldMapping",
          "from": "@/services/residentMapper",
          "line": 13,
          "type": "named"
        },
        {
          "name": "validateField as validateFieldValue",
          "from": "@/lib/validation/fieldLevelSchemas",
          "line": 19,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/hooks/validation/useResidentValidationErrors.ts",
      "imports": [
        {
          "name": "validateResidentData",
          "from": "@/lib/validation",
          "line": 11,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/lib/authentication/authUtils.ts",
      "imports": [
        {
          "name": "v4 as uuidv4",
          "from": "uuid",
          "line": 9,
          "type": "named"
        },
        {
          "name": "AuthUserProfile",
          "from": "@/types/auth",
          "line": 11,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/lib/business-rules/resident-detail-helpers.ts",
      "imports": [
        {
          "name": "ResidentDatabaseRecord as Resident",
          "from": "@/types",
          "line": 9,
          "type": "named"
        },
        {
          "name": "formatDate as libFormatDate",
          "from": "../utilities/data-transformers",
          "line": 10,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/lib/business-rules/resident-listing-helpers.ts",
      "imports": [
        {
          "name": "ResidentDatabaseRecord as ResidentListItem",
          "from": "@/types",
          "line": 9,
          "type": "named"
        },
        {
          "name": "formatDate as libFormatDate",
          "from": "../utilities/data-transformers",
          "line": 10,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/lib/constants/resident-enums.ts",
      "imports": [
        {
          "name": "SEX_OPTIONS as DB_SEX_OPTIONS",
          "from": "@/lib/constants/generated-enums",
          "line": 7,
          "type": "named"
        },
        {
          "name": "CIVIL_STATUS_OPTIONS as DB_CIVIL_STATUS_OPTIONS",
          "from": "@/lib/constants/generated-enums",
          "line": 7,
          "type": "named"
        },
        {
          "name": "CITIZENSHIP_OPTIONS as DB_CITIZENSHIP_OPTIONS",
          "from": "@/lib/constants/generated-enums",
          "line": 7,
          "type": "named"
        },
        {
          "name": "EDUCATION_LEVEL_OPTIONS as DB_EDUCATION_LEVEL_OPTIONS",
          "from": "@/lib/constants/generated-enums",
          "line": 7,
          "type": "named"
        },
        {
          "name": "EMPLOYMENT_STATUS_OPTIONS as DB_EMPLOYMENT_STATUS_OPTIONS",
          "from": "@/lib/constants/generated-enums",
          "line": 7,
          "type": "named"
        },
        {
          "name": "BLOOD_TYPE_OPTIONS as DB_BLOOD_TYPE_OPTIONS",
          "from": "@/lib/constants/generated-enums",
          "line": 7,
          "type": "named"
        },
        {
          "name": "RELIGION_OPTIONS as DB_RELIGION_OPTIONS",
          "from": "@/lib/constants/generated-enums",
          "line": 7,
          "type": "named"
        },
        {
          "name": "ETHNICITY_OPTIONS as DB_ETHNICITY_OPTIONS",
          "from": "@/lib/constants/generated-enums",
          "line": 7,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/lib/security/audit-storage.ts",
      "imports": [
        {
          "name": "ErrorCode as ApiErrorCode",
          "from": "../api/types",
          "line": 8,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/lib/utilities/css-utils.ts",
      "imports": [
        {
          "name": "type ClassValue",
          "from": "clsx",
          "line": 6,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/lib/utilities/search-utilities.ts",
      "imports": [
        {
          "name": "useEffect",
          "from": "react",
          "line": 8,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/lib/validation/resident-schema.ts",
      "imports": [
        {
          "name": "income_classSchema",
          "from": "@/lib/validation/generated-schemas",
          "line": 7,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/lib/validation/schemas.ts",
      "imports": [
        {
          "name": "validateAge",
          "from": "./fieldValidators",
          "line": 11,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/services/geographic.service.ts",
      "imports": [
        {
          "name": "logger",
          "from": "@/lib",
          "line": 7,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/services/household-repository.ts",
      "imports": [
        {
          "name": "type QueryOptions",
          "from": "./base-repository",
          "line": 6,
          "type": "named"
        },
        {
          "name": "type RepositoryResult",
          "from": "./base-repository",
          "line": 6,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/services/resident-repository.ts",
      "imports": [
        {
          "name": "type QueryOptions",
          "from": "./base-repository",
          "line": 6,
          "type": "named"
        },
        {
          "name": "type RepositoryResult",
          "from": "./base-repository",
          "line": 6,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/services/user-repository.ts",
      "imports": [
        {
          "name": "type QueryOptions",
          "from": "./base-repository",
          "line": 6,
          "type": "named"
        },
        {
          "name": "type RepositoryResult",
          "from": "./base-repository",
          "line": 6,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/stories/organisms/Form/Resident/MigrationInformation/MigrationInformation.stories.tsx",
      "imports": [
        {
          "name": "useState",
          "from": "react",
          "line": 2,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/stories/organisms/HouseholdsContent/HouseholdsContent.stories.tsx",
      "imports": [
        {
          "name": "useState",
          "from": "react",
          "line": 2,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/stories/organisms/Navigation/Navigation.stories.tsx",
      "imports": [
        {
          "name": "action",
          "from": "storybook/actions",
          "line": 2,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/stories/organisms/ProtectedRoute/ProtectedRoute.stories.tsx",
      "imports": [
        {
          "name": "fn",
          "from": "storybook/test",
          "line": 2,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/stories/organisms/UserProfile/UserProfile.stories.tsx",
      "imports": [
        {
          "name": "fn",
          "from": "storybook/test",
          "line": 2,
          "type": "named"
        }
      ]
    },
    {
      "file": "src/stories/templates/AppShell/AppShell.stories.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 2,
          "type": "default"
        }
      ]
    },
    {
      "file": "src/stories/templates/MainLayout/MainLayout.stories.tsx",
      "imports": [
        {
          "name": "React",
          "from": "react",
          "line": 2,
          "type": "default"
        }
      ]
    }
  ],
  "circular": [],
  "heavyDependencies": [
    {
      "module": "react",
      "count": 181,
      "files": [
        "react"
      ]
    },
    {
      "module": "@/lib",
      "count": 111,
      "files": [
        "@/lib"
      ]
    },
    {
      "module": "@/components",
      "count": 57,
      "files": [
        "@/components"
      ]
    },
    {
      "module": "next/server",
      "count": 30,
      "files": [
        "next/server"
      ]
    },
    {
      "module": "@/contexts",
      "count": 28,
      "files": [
        "@/contexts"
      ]
    },
    {
      "module": "@supabase/supabase-js",
      "count": 24,
      "files": [
        "@supabase/supabase-js"
      ]
    },
    {
      "module": "next/link",
      "count": 19,
      "files": [
        "next/link"
      ]
    },
    {
      "module": "next/navigation",
      "count": 15,
      "files": [
        "next/navigation"
      ]
    },
    {
      "module": "@/types",
      "count": 15,
      "files": [
        "@/types"
      ]
    },
    {
      "module": "class-variance-authority",
      "count": 14,
      "files": [
        "class-variance-authority"
      ]
    }
  ],
  "recommendations": [
    {
      "type": "cleanup",
      "priority": "medium",
      "message": "138 unused imports found across 93 files",
      "action": "Remove unused imports to reduce bundle size and improve clarity"
    },
    {
      "type": "optimization",
      "priority": "medium",
      "message": "Heavy external dependencies detected: react used 181 times",
      "action": "Consider creating a wrapper or using barrel exports"
    }
  ]
}